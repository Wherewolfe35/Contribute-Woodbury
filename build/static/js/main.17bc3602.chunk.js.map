{"version":3,"sources":["components/Nav/woodbury-CF-logo.png","redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/directoryReducer.js","redux/reducers/calendarReducer.js","redux/reducers/volunteerReducer.js","redux/reducers/nonprofitReducer.js","redux/reducers/eventReducer.js","redux/reducers/adminReducer.js","redux/reducers/uploadReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/directorySaga.js","redux/sagas/nonprofitSaga.js","redux/sagas/calendarSaga.js","redux/sagas/eventSaga.js","redux/sagas/adminSaga.js","redux/sagas/volunteerSaga.js","redux/sagas/uploadSaga.js","redux/sagas/index.js","components/Footer/Footer.js","components/NavLogin/NavLogin.jsx","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/AddEvent/AddEvent.jsx","components/AddVolunteerRoles/AddVolunteerRoles.jsx","components/Calendar/Calendar.jsx","components/DirectoryPage/DirectoryPage.jsx","components/EditEvent/EditEvent.jsx","components/EditNonprofit/EditNonprofit.jsx","components/EventDetails/EventDetails.jsx","components/Home/Home.js","components/InfoPage/InfoPage.js","components/NonprofitValidation/NonprofitValidation.jsx","components/OrganizationHome/OrganizationHome.jsx","components/RegisterPage/RegisterPage.jsx","components/ProtectedRoute/ProtectedRoute.js","components/VolunteerList/VolunteerList.jsx","components/SignupForm/SignupForm.jsx","components/NonprofitDetails/NonprofitDetails.jsx","components/VolunteerSignup/VolunteerSignup.jsx","components/App/App.js","index.js"],"names":["module","exports","combineReducers","loginMessage","state","action","type","registrationMessage","formMessage","loginMode","userReducer","payload","nonprofitList","calendar","lastMonth","lastWeek","currentWeek","nextWeek","future","event","endDate","moment","end_date","format","now","subtract","push","add","volunteerRoleList","volunteerList","previousSignUps","specificRole","signedUpVolunteers","nonprofit","nonprofitPastEvents","categories","eventDetails","admin","adminDirectory","uploadedImage","rootReducer","errors","user","directory","volunteer","upload","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","loginCredentials","username","password","console","log","axios","post","response","status","history","takeLatest","registerUser","registrationSaga","fetchUser","userSaga","get","data","getDirectory","search","directorySaga","getNonprofit","getPastEvents","getNonprofitEdit","editNonprofit","getCategories","nonprofitSaga","nonprofit_id","getCalendar","calendarSaga","getEventDetails","addEvent","addPastEvent","editEvent","eventSaga","non_profit_id","volunteers_needed","id","past_event_id","delete","Swal","fire","text","takeEvery","approveNonprofit","declineNonprofit","getNonprofitRequests","getAdminDirectory","adminSaga","getVolunteerRoles","getSpecificVolunteers","addVolunteers","volunteerSignUp","getSpecificVolunteerRole","deleteRole","volunteerSaga","np_id","event_id","role_id","imageUpload","uploadSaga","rootSaga","all","Footer","NavLogin","login","preventDefault","props","dispatch","handleInputChangeFor","propertyName","setState","target","value","this","className","role","onSubmit","classes","loginDiv","htmlFor","name","placeholder","onChange","Component","withStyles","theme","color","connect","withRouter","onClick","to","homeRoute","routeDecider","href","rel","AddEvent","match","params","description","address","city","zip_code","start_date","start_time","end_time","event_url","uploadFile","uploadButton","handleChange","handleVolunteerChange","handleBackButton","title","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","handleSubmitButton","handleChangeFor","handleFileSelection","file","files","handleFileUpload","FormData","append","handleUploadButton","handleCancelUpload","prevProps","url","rootDiv","Grid","container","spacing","item","xs","CardContent","FormControl","variant","InputLabel","Select","dropdownBox","MenuItem","pastEvents","map","each","key","FormControlLabel","checkbox","control","Checkbox","defaultChecked","label","TextField","textFields","required","multiline","rows","formError","dateFields","times","regButtons","logoTextField","Button","backButton","submitButton","backgroundColor","margin","float","width","height","reduxStore","AddVolunteerRoles","number_needed","date","handleAddRolesButton","handleDoneButton","handleRemoveRole","heading","addRolesButton","size","displayRoles","roleInfo","removeButton","doneButton","Calendar","useDispatch","eventList","useSelector","store","npList","eventItem","path","md","findName","React","useEffect","CustomTableCell","head","fontSize","body","TableCell","DirectoryPage","searchbar","getOrganizationDetails","handleVolunteerButton","searchbarInput","searchSubmit","handleDelete","orgName","nonprofitName","sixMonthsBeforeTodaysDate","Paper","root","elevation","IconButton","aria-label","InputBase","Divider","Table","hover","TableHead","TableRow","align","TableBody","lastConfirmed","last_confirmed","src","logo","alt","category_name","AssistantPhoto","flag","backButtonText","website","textDecoration","maxHeight","marginTop","overflowY","padding","textAlign","EditEvent","Number","goBack","states","handleEditVolunteerRoles","justify","ev","defaultValue","urlField","stateZip","editButton","grid","marginLeft","EditNonprofit","contact_name","contact_email","contact_phone","category_id","handleInputChange","handleEditInputChange","handleDropdownChange","propertyName1","propertyName2","dropdownMenu","communityDevelopment","humanServices","health","youth","currentNonProfit","paragraph","nonprofit_name","inputLabel","EventDetails","handleClick","handleButtonClick","handleEditEvent","nonprofitInfo","nonprofitLogoGrid","containter","info","Typography","valign","button","image","table","volunteers","person","Link","component","overfloxX","minWidth","display","Home","handleBrowse","handleSeeEvents","handleNonprofit","registrationSuccessful","is_approved","buttons","InfoPage","NonprofitValidation","handleGetRequests","handleDirectoryButton","handleApproveButton","handleDeclineButton","directoryButton","Card","card","approveButton","declineButton","OrganizationHome","handleVolunteerClick","handleEditDetails","handleVolunteerListClick","handleEditClick","handleAddEvent","getCategory","cat","vkey","ekey","event_name","RegisterPage","startsWith","concat","setTimeout","demoRegister","category","autoComplete","country","style","maxWidth","ComponentToShow","ComponentToProtect","otherProps","VolunteerList","nonProfit","vol","role_name","comments","email","phone_number","centerButton","SignupForm","roleId","handleAddVolunteer","demoVolunteer1","stateZipPhone","messageInput","demoVolunteer2","saveButton","NonprofitDetails","VolunteerSignup","signedup","startDate","length","cardContent","formatPhoneNumber","saved","App","exact","from","render","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"2NAAAA,EAAOC,QAAU,IAA0B,8C,wKCgD5BC,G,OAAAA,YAAgB,CAC7BC,aA7CmB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,IAAK,oBACH,MAAO,GACT,IAAK,oBACH,MAAO,oCACT,IAAK,eACH,MAAO,2DACT,IAAK,uBACH,MAAO,qDACT,QACE,OAAOF,IAmCXG,oBA7B0B,WAAyB,IAAxBH,EAAuB,uDAAf,GAAIC,EAAW,uCAClD,OAAQA,EAAOC,MACb,IAAK,2BACH,MAAO,GACT,IAAK,2BACH,MAAO,6DACT,IAAK,sBACH,MAAO,0EACT,QACE,OAAOF,IAqBXI,YAjBkB,WAAwB,wDAAC,IAAZH,EAAW,uCAC1C,OAAQA,EAAOC,MACb,IAAK,aACH,MAAO,+CACT,IAAK,iBACH,MAAO,6DACT,QACE,MAAO,QC5BIG,EAbC,WAA8B,IAA7BL,EAA4B,uDAApB,QAASC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,IAAK,oBACH,MAAO,QACT,IAAK,uBACH,MAAO,WACT,QACE,OAAOF,ICMAM,EAbK,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACb,IAAK,WACH,OAAOD,EAAOM,QAChB,IAAK,aACH,MAAO,GACT,QACE,OAAOP,ICGEQ,EATO,WAAyB,IAAxBR,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOM,QAChB,QACE,OAAOP,I,gBCsBEF,cAAgB,CAC7BW,SA1Be,WAAyB,IAAxBT,EAAuB,uDAAf,GAAIC,EAAW,uCACvC,OAAQA,EAAOC,MACb,IAAK,eACH,IAAIO,EAAW,CAAEC,UAAW,GAAIC,SAAU,GAAIC,YAAa,GAAIC,SAAU,GAAIC,OAAQ,IADvF,uBAEE,YAAoBb,EAAOM,QAA3B,+CAAoC,CAAC,IAA1BQ,EAAyB,QAC9BC,EAAUC,IAAOF,EAAMG,UAAUC,OAAO,YACxCC,EAAMH,MAASE,OAAO,YACtBH,EAAUC,MAASI,SAAS,EAAG,QAAQF,OAAO,YAChDV,EAASC,UAAUY,KAAKP,GACfC,EAAUI,GAAOJ,GAAWC,MAASI,SAAS,EAAG,QAAQF,OAAO,YACzEV,EAASE,SAASW,KAAKP,GACdC,GAAWI,GAAOJ,EAAUC,MAASM,IAAI,EAAG,QAAQJ,OAAO,YACpEV,EAASG,YAAYU,KAAKP,GACjBC,EAAUC,MAASM,IAAI,EAAG,QAAQJ,OAAO,aAAeH,EAAUC,MAASM,IAAI,GAAI,QAAQJ,OAAO,YAC3GV,EAASI,SAASS,KAAKP,GAEvBN,EAASK,OAAOQ,KAAKP,IAd3B,kFAiBE,OAAON,EACT,QACE,OAAOT,M,QC2BEF,cAAgB,CAC7B0B,kBAlDwB,WAAyB,IAAxBxB,EAAuB,uDAAf,GAAIC,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAOD,EAAOM,QAChB,QACE,OAAOP,IA8CXyB,cA1CoB,WAAyB,IAAxBzB,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACb,IAAK,0BACH,OAAOD,EAAOM,QAChB,QACE,OAAOP,IAsCX0B,gBAzBsB,WAAyB,IAAxB1B,EAAuB,uDAAf,GAAIC,EAAW,uCAC9C,OAAQA,EAAOC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOM,UAC3B,IAAK,oBACH,MAAO,GACT,QACE,OAAOP,IAmBX2B,aAnCmB,WAAyB,IAAxB3B,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAOD,EAAOM,QAChB,QACE,OAAOP,IAgCX4B,mBAjByB,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIC,EAAW,uCACjD,OAAOA,EAAOC,MACZ,IAAK,iBACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOM,UAC3B,IAAK,kBACH,MAAO,GACT,QACE,OAAOP,M,ikBC7Cb,IAiCeF,cAAgB,CAC3B+B,UAlCe,WAAyB,IAAxB7B,EAAuB,uDAAf,GAAIC,EAAW,uCACvC,OAAQA,EAAOC,MACX,IAAK,yBACD,OAAOD,EAAOM,QAClB,IAAK,yBACD,MAAO,CAAC,EAAD,GACAP,EAAM,GADN,GAEAC,EAAOM,UAGlB,QACI,OAAOP,IAwBf8B,oBApByB,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIC,EAAW,uCACjD,OAAQA,EAAOC,MACX,IAAK,kBACD,OAAOD,EAAOM,QAClB,QACI,OAAOP,IAgBf+B,WAZgB,WAAyB,IAAxB/B,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOC,MACX,IAAK,iBACD,OAAOD,EAAOM,QAClB,QACI,OAAOP,MCpBJF,cAAgB,CAC7BkC,aAVmB,WAAyB,IAAxBhC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACb,IAAK,oBACH,OAAOD,EAAOM,QAChB,QACE,OAAOP,MCaEF,cAAgB,CAC3BmC,MAnBU,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIC,EAAW,uCAClC,OAAOA,EAAOC,MACV,IAAK,eACD,OAAOD,EAAOM,QAClB,QACI,OAAOP,IAefkC,eAXmB,WAAyB,IAAxBlC,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOC,MACX,IAAK,sBACD,OAAOD,EAAOM,QAClB,QACI,OAAOP,MCLJF,cAAgB,CAC3BqC,cAVmB,WAAuB,IAAtBnC,EAAqB,uDAAf,GAAIC,EAAW,uCACzC,OAAOA,EAAOC,MACV,IAAK,oBACD,OAAOD,EAAOM,QAClB,QACI,OAAOP,MCyBJoC,EAdKtC,YAAgB,CAClCuC,SACAhC,YACAiC,OACAC,YACA9B,WACA+B,YAEAX,YACAd,QACAkB,QACAQ,W,mDCzBQC,G,WAqCAC,G,WAwBAC,GA7DV,SAAUF,EAAUzC,GAApB,yEAGI,OAHJ,kBAGU4C,YAAI,CAAE3C,KAAM,sBAHtB,OAgBI,OAXM4C,EAAS,CACbC,QAAS,CAAE,eAAgB,oBAC3BC,iBAAiB,GAGfC,EAAmB,CAACC,SAAUjD,EAAOM,QAAQ2C,SAAUC,SAAUlD,EAAOM,QAAQ4C,UACpFC,QAAQC,IAAIJ,GAXhB,SAgBUK,IAAMC,KAAK,kBAAmBN,EAAkBH,GAhB1D,OAoBI,OApBJ,UAoBUD,YAAI,CAAC3C,KAAM,eApBrB,6DAsBIkD,QAAQC,IAAI,yBAAZ,MAC8B,MAA1B,KAAMG,SAASC,OAvBvB,iBA2BM,OA3BN,UA2BYZ,YAAI,CAAE3C,KAAM,iBA3BxB,gCA+BM,OA/BN,UA+BY2C,YAAI,CAAE3C,KAAM,yBA/BxB,sDAqCA,SAAUyC,EAAW1C,GAArB,uEAWI,OAXJ,SAEU6C,EAAS,CACbC,QAAS,CAAE,eAAgB,oBAC3BC,iBAAiB,GAJvB,SAWUM,IAAMC,KAAK,mBAAoBT,GAXzC,OAgBI,OAhBJ,SAgBUD,YAAI,CAAE3C,KAAM,eAhBtB,OAiBI,OAjBJ,SAiBUD,EAAOyD,QAAQpC,KAAK,SAjB9B,yDAoBI8B,QAAQC,IAAI,0BAAZ,MApBJ,sDAwBA,SAAUT,IAAV,iEACE,OADF,SACQe,YAAW,QAASjB,GAD5B,OAEE,OAFF,SAEQiB,YAAW,SAAUhB,GAF7B,uCAKeC,Q,WClELgB,G,WAoBAC,GApBV,SAAUD,EAAa3D,GAAvB,iEAGI,OAHJ,kBAGU4C,YAAI,CAAE3C,KAAM,6BAHtB,OAMI,OANJ,SAMUoD,IAAMC,KAAK,qBAAsBtD,EAAOM,SANlD,OASI,OATJ,SASUsC,YAAI,CAAE3C,KAAM,QAASK,QAASN,EAAOM,UAT/C,OAaI,OAbJ,SAaUsC,YAAI,CAAC3C,KAAM,sBAbrB,+BAgBM,OAhBN,0BAeMkD,QAAQC,IAAI,gCAAZ,MAfN,UAgBYR,YAAI,CAAC3C,KAAM,wBAhBvB,sDAoBA,SAAU2D,IAAV,iEACE,OADF,SACQF,YAAW,WAAYC,GAD/B,uCAIeC,Q,WCxBLC,G,WAsBAC,GAtBV,SAAUD,IAAV,yEAWqB,OAXrB,SAEUhB,EAAS,CACbC,QAAS,CAAE,eAAgB,oBAC3BC,iBAAiB,GAJvB,SAW2BM,IAAMU,IAAI,YAAalB,GAXlD,OAgBI,OALMU,EAXV,gBAgBUX,YAAI,CAAE3C,KAAM,WAAYK,QAASiD,EAASS,OAhBpD,uDAkBIb,QAAQC,IAAI,0BAAZ,MAlBJ,qDAsBA,SAAUU,IAAV,iEACE,OADF,SACQJ,YAAW,aAAcG,GADjC,uCAIeC,Q,WC1BLG,G,WASAC,G,WAcAC,IAvBV,SAAUF,IAAV,uEAEmB,OAFnB,kBAEyBZ,IAAMU,IAAI,kBAFnC,OAGI,OADIR,EAFR,gBAGUX,YAAI,CAAE3C,KAAM,gBAAiBK,QAASiD,EAASS,OAHzD,uDAKIb,QAAQC,IAAI,wBAAZ,MALJ,qDASA,SAAUc,EAAOlE,GAAjB,uEAEmB,OAFnB,kBAEyBqD,IAAMU,IAAN,2BAA8B/D,EAAOM,UAF9D,OAGI,OADIiD,EAFR,gBAGUX,YAAI,CACR3C,KAAM,gBACNK,QAASiD,EAASS,OALxB,OAOI,OAPJ,SAOUpB,YAAI,CAAE3C,KAAM,sBAAuBK,QAASiD,EAASS,OAP/D,yDASIb,QAAQC,IAAI,0BAAZ,MATJ,sDAcA,SAAUe,KAAV,iEACE,OADF,SACQT,YAAW,gBAAiBO,GADpC,OAEE,OAFF,SAEQP,YAAW,SAAUQ,GAF7B,uCAKeC,U,YC5BLC,I,YAaAC,I,YAaAC,I,YAUAC,I,YAcAC,I,YAUAC,IA5DV,SAAUL,GAAapE,GAAvB,uEAEuB,OAFvB,kBAE6BqD,IAAMU,IAAN,yBAA4B/D,EAAOM,UAFhE,OAGQ,OADIiD,EAFZ,gBAGcX,YAAI,CACN3C,KAAM,yBACNK,QAASiD,EAASS,OAL9B,uDAQQb,QAAQC,IAAI,wBAAZ,MARR,sDAaA,SAAUiB,GAAcrE,GAAxB,uEAEuB,OAFvB,kBAE6BqD,IAAMU,IAAN,+BAAkC/D,EAAOM,UAFtE,OAGQ,OADIiD,EAFZ,gBAGcX,YAAK,CACP3C,KAAM,kBACNK,QAASiD,EAASS,OAL9B,uDAQQb,QAAQC,IAAI,+BAAZ,MARR,sDAaA,SAAUkB,GAAiBtE,GAA3B,uEAEuB,OAFvB,kBAE6BqD,IAAMU,IAAN,8BAAiC/D,EAAOM,UAFrE,OAGQ,OADIiD,EAFZ,gBAGcX,YAAI,CAAE3C,KAAM,yBAA0BK,QAASiD,EAASS,OAHtE,uDAKQb,QAAQC,IAAI,4BAAZ,MALR,sDAUA,SAAUmB,GAAcvE,GAAxB,iEAEQ,OAFR,kBAEcqD,IAAMT,IAAN,+BAA0C5C,EAAOM,SAF/D,OAGQ,OAHR,SAGcsC,YAAK,CACPtC,QAASN,EAAOM,QAAQoE,aACxBzE,KAAM,kBALlB,uDASQkD,QAAQC,IAAI,yBAAZ,MATR,sDAcA,SAAUoB,KAAV,uEAEuB,OAFvB,kBAE6BnB,IAAMU,IAAI,iCAFvC,OAGQ,OADIR,EAFZ,gBAGcX,YAAI,CAAE3C,KAAM,iBAAkBK,QAASiD,EAASS,OAH9D,uDAKQb,QAAQC,IAAI,yBAAZ,MALR,sDAUA,SAAUqB,KAAV,iEACI,OADJ,SACUf,YAAW,gBAAiBU,IADtC,OAEI,OAFJ,SAEUV,YAAW,kBAAmBW,IAFxC,OAGI,OAHJ,SAGUX,YAAW,qBAAsBY,IAH3C,OAII,OAJJ,SAIUZ,YAAW,iBAAkBa,IAJvC,OAKI,OALJ,UAKUb,YAAW,iBAAkBc,IALvC,yCAQeC,U,YCpELE,I,YAUAC,IAVV,SAAUD,KAAV,uEAEmB,OAFnB,kBAEyBtB,IAAMU,IAAI,uBAFnC,OAGI,OADIR,EAFR,gBAGUX,YAAI,CAAE3C,KAAM,eAAgBK,QAASiD,EAASS,OAHxD,uDAKIb,QAAQC,IAAI,wBAAZ,MALJ,sDAUA,SAAUwB,KAAV,iEACE,OADF,SACQlB,YAAW,eAAgBiB,IADnC,wCAIeC,U,gCCbLC,I,YAWAC,I,YAiBAC,I,YAuBAC,I,YAoBAC,IAvEV,SAAUJ,GAAiB7E,GAA3B,uEAEmB,OAFnB,kBAEyBqD,IAAMU,IAAN,qBAAwB/D,EAAOM,UAFxD,OAGI,OADIiD,EAFR,gBAGUX,YAAK,CAAE3C,KAAM,oBAAqBK,QAASiD,EAASS,OAH9D,OAII,OAJJ,SAIUpB,YAAI,CAAE3C,KAAM,gBAAiBK,QAASiD,EAASS,KAAK,GAAGkB,gBAJjE,yDAMI/B,QAAQC,IAAI,2BAAZ,MANJ,uDAWA,SAAU0B,GAAS9E,GAAnB,uEAEmB,OAFnB,kBAEyBqD,IAAMC,KAAN,sBAAkCtD,EAAOM,SAFlE,UAEQiD,EAFR,QAG6C,IAArCvD,EAAOM,QAAQ6E,kBAHvB,gBAIM,OAJN,SAIYnF,EAAOyD,QAAQpC,KAAf,yBAAsCkC,EAASS,KAAK,GAAGoB,KAJnE,OAMI,OANJ,SAMUxC,YAAI,CACR3C,KAAM,oBACNK,QAASiD,EAASS,KAAK,GAAGoB,KARhC,yDAYIjC,QAAQC,IAAI,oBAAZ,MAZJ,uDAiBA,SAAU2B,GAAa/E,GAAvB,uEAEmB,OAFnB,kBAEyBqD,IAAMC,KAAK,sBAAuBtD,EAAOM,SAFlE,UAEQiD,EAFR,QAG4C,IAArCvD,EAAOM,QAAQ6E,kBAHtB,gBAIM,OAJN,SAIYnF,EAAOyD,QAAQpC,KAAf,yBAAsCkC,EAASS,KAAK,GAAGoB,KAJnE,8BAMM,OANN,UAMYpF,EAAOyD,QAAQpC,KAAf,wBAAqCkC,EAASS,KAAK,GAAGoB,KANlE,QAQI,OARJ,UAQUxC,YAAK,CACT3C,KAAM,oBACNK,QAASiD,EAASS,KAAK,GAAGoB,KAVhC,QAYI,OAZJ,UAYUxC,YAAI,CACR3C,KAAM,sBACNK,QAASN,EAAOM,QAAQ+E,gBAd9B,QAgBI,OAhBJ,UAgBUhC,IAAMiC,OAAN,qBAA2BtF,EAAOM,QAAQ+E,cAA1C,YAA2DrF,EAAOM,QAAQ4E,gBAhBpF,0DAkBI/B,QAAQC,IAAI,8BAlBhB,uDAuBA,SAAU4B,GAAUhF,GAApB,iEAEI,OAFJ,kBAEUqD,IAAMT,IAAN,uBAAkC5C,EAAOM,SAFnD,OAGIiF,KAAKC,KAAK,CACRvF,KAAM,UACNwF,KAAM,iCALZ,gDASItC,QAAQC,IAAI,qBAAZ,MACAmC,KAAKC,KAAK,CACRvF,KAAM,QACNwF,KAAM,0EAZZ,sDAoBA,SAAUR,KAAV,iEACE,OADF,SACQS,YAAU,oBAAqBb,IADvC,OAEE,OAFF,SAEQnB,YAAW,YAAaoB,IAFhC,OAGE,OAHF,SAGQpB,YAAW,aAAcsB,IAHjC,OAIE,OAJF,SAIQtB,YAAW,iBAAkBqB,IAJrC,wCAOeE,U,YC/ELU,I,YAYAC,I,YAcAC,I,YAcAC,I,YAUAC,IAlDV,SAAUJ,GAAkB3F,GAA5B,iEAEQ,OAFR,kBAEcqD,IAAMT,IAAN,6BAAgC5C,EAAOM,UAFrD,OAGQ,OAHR,SAGcsC,YAAI,CACN3C,KAAM,2BAJlB,uDAOQkD,QAAQC,IAAI,gCAAZ,MAPR,sDAYA,SAAUwC,GAAiB5F,GAA3B,iEAEQ,OAFR,kBAEcqD,IAAMiC,OAAN,6BAAmCtF,EAAOM,UAFxD,OAGQ,OAHR,SAGcsC,YAAI,CACN3C,KAAM,2BAJlB,OAMQ,OANR,SAMc2C,YAAI,CAAE3C,KAAM,wBAN1B,uDASQkD,QAAQC,IAAI,4BAAZ,MATR,sDAcA,SAAUyC,KAAV,uEAEuB,OAFvB,kBAE6BxC,IAAMU,IAAN,uBAF7B,OAGQ,OADIR,EAFZ,gBAGcX,YAAI,CACN3C,KAAM,eACNK,QAASiD,EAASS,OAL9B,uDASQb,QAAQC,IAAI,yBAAZ,MATR,sDAcA,SAAU0C,KAAV,uEAEuB,OAFvB,kBAE6BzC,IAAMU,IAAI,wBAFvC,OAGQ,OADIR,EAFZ,gBAGcX,YAAI,CAAE3C,KAAM,sBAAuBK,QAASiD,EAASS,OAHnE,uDAKQb,QAAQC,IAAI,iCAAZ,MALR,sDAUA,SAAU2C,KAAV,iEACI,OADJ,SACUrC,YAAW,oBAAqBiC,IAD1C,OAEI,OAFJ,SAEUjC,YAAW,oBAAqBkC,IAF1C,OAGI,OAHJ,SAGUlC,YAAW,yBAA0BmC,IAH/C,OAII,OAJJ,SAIUnC,YAAW,sBAAuBoC,IAJ5C,wCAOeC,U,YCzDLC,I,YAUAC,I,YAcAC,I,YAcAC,I,YAeAC,I,YAcAC,I,YAeAC,IAlFV,SAAUN,GAAkBhG,GAA5B,uEAEmB,OAFnB,kBAEyBqD,IAAMU,IAAN,8BAAiC/D,EAAOM,UAFjE,OAGI,OADIiD,EAFR,gBAGUX,YAAI,CAAE3C,KAAM,sBAAuBK,QAASiD,EAASS,OAH/D,uDAKIb,QAAQC,IAAI,6BAAZ,MALJ,sDAUA,SAAU6C,GAAsBjG,GAAhC,uEAEmB,OAFnB,kBAEyBqD,IAAMU,IAAN,yCAA4C/D,EAAOM,QAAQ8E,GAA3D,YAAiEpF,EAAOM,QAAQiG,QAFzG,OAGI,OADIhD,EAFR,gBAGUX,YAAI,CACR3C,KAAM,0BACNK,QAASiD,EAASS,OALxB,uDASIb,QAAQC,IAAI,iCAAZ,MATJ,sDAcA,SAAU8C,GAAclG,GAAxB,iEAEI,OAFJ,kBAEUqD,IAAMC,KAAN,+BAA2CtD,EAAOM,SAF5D,OAGI,OAHJ,SAGUsC,YAAI,CACR3C,KAAM,oBACNK,QAASN,EAAOM,QAAQkG,WAL9B,uDASIrD,QAAQC,IAAI,wBAAZ,MATJ,sDAcA,SAAU+C,GAAgBnG,GAA1B,iEAEI,OAFJ,kBAEUqD,IAAMC,KAAN,wBAAoCtD,EAAOM,SAFrD,OAGI,OAHJ,SAGUsC,YAAI,CACR3C,KAAM,aACNK,QAASN,EAAOM,UALtB,OAOI,OAPJ,SAOUsC,YAAI,CACR3C,KAAM,oBARZ,uDAWIkD,QAAQC,IAAI,2BAAZ,MAXJ,sDAeA,SAAUgD,GAAyBpG,GAAnC,uEAEmB,OAFnB,kBAEyBqD,IAAMU,IAAN,qCAAwC/D,EAAOM,UAFxE,OAII,OAFIiD,EAFR,OAGIJ,QAAQC,IAAI,wBAAyBG,GAHzC,SAIUX,YAAK,CACT3C,KAAM,qBACNK,QAASiD,EAASS,KAAK,KAN7B,uDASIb,QAAQC,IAAI,qCAThB,sDAcA,SAAUiD,GAAWrG,GAArB,iEAII,OAJJ,SAEImD,QAAQC,IAAI,uBAAwBpD,EAAOM,SAF/C,SAIU+C,IAAMiC,OAAN,oCAA0CtF,EAAOM,QAAQmG,UAJnE,OAKI,OALJ,SAKU7D,YAAK,CACT3C,KAAM,oBACNK,QAASN,EAAOM,QAAQkG,WAP9B,uDAUIrD,QAAQC,IAAI,4BAVhB,sDAeA,SAAUkD,KAAV,iEACE,OADF,SACQZ,YAAU,oBAAqBM,IADvC,OAEE,OAFF,SAEQN,YAAU,sBAAuBM,IAFzC,OAGE,OAHF,SAGQtC,YAAW,0BAA2BuC,IAH9C,OAIE,OAJF,SAIQvC,YAAW,8BAA+B0C,IAJlD,OAKE,OALF,UAKQ1C,YAAW,iBAAkBwC,IALrC,QAME,OANF,UAMQxC,YAAW,mBAAoByC,IANvC,QAOE,OAPF,UAOQzC,YAAW,cAAe2C,IAPlC,yCAUeC,U,YC5FLI,I,YAeAC,IAfV,SAAUD,GAAY1G,GAAtB,uEAEuB,OAFvB,kBAE6BqD,IAAMC,KAAK,cAAetD,EAAOM,SAF9D,OAIQ,OAFIiD,EAFZ,OAGQJ,QAAQC,IAAI,yBAA0BG,EAASS,MAHvD,SAIcpB,YAAI,CACN3C,KAAM,oBACNK,QAASiD,EAASS,OAN9B,uDASQb,QAAQC,IAAI,6BAAZ,MATR,sDAeA,SAAUuD,KAAV,iEACI,OADJ,SACUjD,YAAW,eAAgBgD,IADrC,wCAIeC,U,YCJUC,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CACRlE,IACAiB,IACAE,IACAK,KACAM,KACAG,KACAK,KACAc,KACAO,KACAK,OAXW,wC,mECLAG,I,cANA,kBACb,wE,UCGIC,G,8MACFhH,MAAQ,CACJkD,SAAU,GACVC,SAAU,I,EAId8D,MAAQ,SAAClG,GACLA,EAAMmG,iBAEF,EAAKlH,MAAMkD,UAAY,EAAKlD,MAAMmD,SAClC,EAAKgE,MAAMC,SAAS,CAChBlH,KAAM,QACNK,QAAS,CACL2C,SAAU,EAAKlD,MAAMkD,SACrBC,SAAU,EAAKnD,MAAMmD,YAI7B,EAAKgE,MAAMC,SAAS,CAAElH,KAAM,uB,EAKpCmH,qBAAuB,SAAAC,GAAY,OAAI,SAACvG,GACpC,EAAKwG,SAAL,eACKD,EAAevG,EAAMyG,OAAOC,U,0EAKjC,OACI,6BACKC,KAAKP,MAAM9E,OAAOtC,cACf,wBACI4H,UAAU,QACVC,KAAK,SAEJF,KAAKP,MAAM9E,OAAOtC,cAI3B,0BAAM8H,SAAUH,KAAKT,OACjB,yBAAKU,UAAWD,KAAKP,MAAMW,QAAQC,UAC/B,oDACA,2BAAOC,QAAQ,YAEX,2BACI9H,KAAK,OACL+H,KAAK,WACLC,YAAY,WACZT,MAAOC,KAAK1H,MAAMkD,SAClBiF,SAAUT,KAAKL,qBAAqB,eAI5C,2BAAOW,QAAQ,YAEX,2BACI9H,KAAK,WACL+H,KAAK,WACLC,YAAY,WACZT,MAAOC,KAAK1H,MAAMmD,SAClBgF,SAAUT,KAAKL,qBAAqB,eAI5C,2BAEIM,UAAU,SACVzH,KAAK,SACL+H,KAAK,SACLR,MAAM,kB,GAxEXW,aAwFRC,iBA9FA,SAAAC,GAAK,MAAK,CACrBP,SAAU,CACNQ,MAAO,YA4FAF,CAAoBG,aAJX,SAAAxI,GAAK,MAAK,CAC9BqC,OAAQrC,EAAMqC,UAGiBmG,CAAyBxB,KChF7CyB,gBAAWD,eAhBL,SAAArB,GAAK,OACxB,4BAIEQ,UAAWR,EAAMQ,UACjBe,QAAS,WAAOvB,EAAMC,SAAS,CAAElH,KAAM,SAAUwD,QAASyD,EAAMzD,YALlE,eCqEa8E,I,cAAAA,aAJS,SAAAxI,GAAK,MAAK,CAChCsC,KAAMtC,EAAMsC,QAGCkG,EAlEH,SAACrB,GAYX,OACE,yBAAKQ,UAAU,OACb,kBAAC,KAAD,CAAMgB,GAAG,SACT,wBAAIhB,UAAU,aAAd,wBAMA,yBAAKA,UAAU,aAMZR,EAAM7E,KAAK+C,GAzBlB,WACE,IAAIuD,EAMJ,OAJEA,EADqB,UAApBzB,EAAM7E,KAAK2F,KACH,cAEA,4BAAwBd,EAAM7E,KAAK+C,IAEvC,kBAAC,KAAD,CAAMsC,UAAU,WAAWgB,GAAIC,GAA/B,QAkBcC,GAAiB,kBAAC,GAAD,CAAUlB,UAAU,aAEtD,kBAAC,KAAD,CAAMA,UAAU,WAAWgB,GAAG,aAA9B,YAGA,kBAAC,KAAD,CAAMhB,UAAU,WAAWgB,GAAG,cAA9B,aAGA,uBAAGhB,UAAU,WAAWH,OAAO,SAASsB,KAAK,qCAAqCC,IAAI,uBAAtF,YAKC5B,EAAM7E,KAAK+C,IACV,oCAIE,kBAAC,GAAD,CAAcsC,UAAU,oB,oGCY9BqB,G,8MAgBFhJ,MAAQ,CACJiI,KAAM,GACN9C,eAAiB,EAAKgC,MAAM8B,MAAMC,OAAO7D,GACzC8D,YAAa,GACbC,QAAS,GACTC,KAAM,GACNrJ,MAAO,GACPsJ,SAAU,GACVC,WAAY,GACZrI,SAAU,GACVsI,WAAY,GACZC,SAAU,GACVC,UAAW,GACXpE,cAAe,GACfF,mBAAmB,EACnBuE,WAAY,GACZC,cAAc,G,EAIlBC,aAAe,SAACvC,EAAcvG,GAC1B,EAAKwG,SAAL,eACKD,EAAevG,EAAMyG,OAAOC,S,EAKrCqC,sBAAwB,YACiB,IAAjC,EAAK9J,MAAMoF,kBACX,EAAKmC,SAAS,CACVnC,mBAAmB,IAGvB,EAAKmC,SAAS,CACVnC,mBAAmB,K,EAM/B2E,iBAAmB,SAAC1E,GAChBG,KAAKC,KAAK,CACNuE,MAAO,gBACPtE,KAAM,gCACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACpBC,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMzD,QAAQpC,KAAnB,4BAA6C+D,Q,EAMzDkF,mBAAqB,WAEjB,OAAItJ,IAAO,EAAKjB,MAAMkB,UAAUC,OAAO,YAAcF,IAAO,EAAKjB,MAAMuJ,YAAYpI,OAAO,aACtF,EAAKgG,MAAMC,SAAS,CAAElH,KAAM,gBACrB,GACA,EAAKF,MAAMiI,MAAQ,EAAKjI,MAAMmJ,aAAe,EAAKnJ,MAAMuJ,YAAc,EAAKvJ,MAAMkB,UAAY,EAAKlB,MAAMwJ,YAAc,EAAKxJ,MAAMyJ,UACrI,EAAKzJ,MAAMoJ,SAAW,EAAKpJ,MAAMqJ,MAAQ,EAAKrJ,MAAMA,OAAS,EAAKA,MAAMsJ,UAEtE,EAAKtJ,MAAMsF,cAQZ,EAAK6B,MAAMC,SAAS,CAChBlH,KAAM,iBACNK,QAAS,EAAKP,MACd0D,QAAS,EAAKyD,MAAMzD,UAVxB,EAAKyD,MAAMC,SAAS,CAChBlH,KAAM,YACNK,QAAS,EAAKP,MACd0D,QAAS,EAAKyD,MAAMzD,eAchC8B,KAAKC,KAAK,CACNuE,MAAO,WACPtE,KAAM,4BACNxF,KAAM,UACNkK,kBAAmB,KACnBF,mBAAoB,cARpB,EAAK/C,MAAMC,SAAS,CAAElH,KAAM,oBACrB,I,EAYfsK,gBAAkB,SAACzJ,GACf,EAAKwG,SAAS,CACVU,KAAMlH,EAAMyG,OAAOC,MAAMQ,KACzB9C,cAAe,EAAKgC,MAAM8B,MAAMC,OAAO7D,GACvC8D,YAAapI,EAAMyG,OAAOC,MAAM0B,YAChCC,QAASrI,EAAMyG,OAAOC,MAAM2B,QAC5BC,KAAMtI,EAAMyG,OAAOC,MAAM4B,KACzBrJ,MAAOe,EAAMyG,OAAOC,MAAMzH,MAC1BsJ,SAAUvI,EAAMyG,OAAOC,MAAM6B,SAC7BE,WAAYzI,EAAMyG,OAAOC,MAAM+B,WAC/BC,SAAU1I,EAAMyG,OAAOC,MAAMgC,SAC7BC,UAAW3I,EAAMyG,OAAOC,MAAMiC,UAC9BpE,cAAevE,EAAMyG,OAAOC,MAAMpC,M,EAK1CoF,oBAAsB,SAAC1J,GACnB,IAAI2J,EAAO3J,EAAMyG,OAAOmD,MAAM,GAC9B,EAAKpD,SAAS,CACVoC,WAAYe,K,EAKpBE,iBAAmB,WACf,IAAM3G,EAAO,IAAI4G,SACjB5G,EAAK6G,OAAO,OAAQ,EAAK9K,MAAM2J,YAC/B,EAAKxC,MAAMC,SAAS,CAChBlH,KAAM,eACNK,QAAS0D,IAEb,EAAKsD,SAAS,CACVqC,cAAc,K,EAKtBmB,mBAAqB,WACjB,EAAKxD,SAAS,CACVqC,cAAc,K,EAKtBoB,mBAAqB,WACjB,EAAKzD,SAAS,CACVqC,cAAc,K,qFA1JlBlC,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,kBACNK,SAAWmH,KAAKP,MAAM8B,MAAMC,OAAO7D,O,yCAIxB4F,GACXvD,KAAKP,MAAM1E,SAAWwI,EAAUxI,QAChCiF,KAAKH,SAAS,CACVmC,UAAWhC,KAAKP,MAAM1E,OAAOyI,Q,+BAqJ/B,IAAD,OAGL,OAEI,yBAAKvD,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,yCAEA,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACI,6DACA,qFAA0D,6BAA1D,6EAC8E,6BAD9E,kIAIA,kBAACC,GAAA,EAAD,CAAaC,QAAQ,UACjB,kBAACC,GAAA,EAAD,8BAGA,kBAACC,GAAA,EAAD,CACIlE,UAAWD,KAAKP,MAAMW,QAAQgE,YAC9B3D,SAAU,SAACpH,GAAD,OAAW,EAAKyJ,gBAAgBzJ,IAC1C0G,MAAOC,KAAK1H,MAAMiI,MAClB,kBAAC8D,GAAA,EAAD,CAAUtE,MAAOC,KAAK1H,MAAMiI,MACxB,4BAAKP,KAAK1H,MAAMsF,cAAgBoC,KAAK1H,MAAMiI,KAAO,wBAAlD,MAEHP,KAAKP,MAAM6E,WAAWC,KAAI,SAAAC,GAAI,OAC3B,kBAACH,GAAA,EAAD,CAAUI,IAAKD,EAAK7G,GAAIoC,MAAOyE,GAAQA,EAAKjE,UAIpD,kBAACmE,GAAA,EAAD,CACIzE,UAAWD,KAAKP,MAAMW,QAAQuE,SAC9BC,QACI,kBAACC,GAAA,EAAD,CACIC,gBAAc,EACdrE,SAAUT,KAAKoC,sBACfvB,MAAM,YAEdkE,MAAM,sBAGV,kBAACC,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,uBAAuBd,QAAQ,WAAWiB,UAAU,EACvHnF,MAAOC,KAAK1H,MAAMiI,KAAME,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,MAE3E,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQqB,YAAajJ,KAAK,OACvDgI,YAAY,iGACZuE,MAAM,cAAcG,UAAU,EAC9BjB,QAAQ,WAAWkB,WAAS,EAACC,KAAK,IAClCrF,MAAOC,KAAK1H,MAAMmJ,YAAahB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,cAAe9I,UAKxG2G,KAAKP,MAAM4F,WACR,wBACIpF,UAAU,QACVC,KAAK,SACJF,KAAKP,MAAM4F,WAGpB,kBAAC3B,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KAEI,8CACA,kBAACiB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQkF,WAAY9M,KAAK,OAAOgI,YAAY,QAAQ0E,UAAU,EAC3FjB,QAAQ,WAAWlE,MAAOC,KAAK1H,MAAMuJ,WAAYpB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,aAAc9I,MAC1G,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQkF,WAAY9M,KAAK,OAAOgI,YAAY,MAAMyD,QAAQ,WACvFlE,MAAOC,KAAK1H,MAAMkB,SAAUiH,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,MACnF,6BAEA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQmF,MAAO/M,KAAK,OAAOgI,YAAY,aAAa0E,UAAU,EAC3FjB,QAAQ,WAAWlE,MAAOC,KAAK1H,MAAMwJ,WAAYrB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,aAAc9I,MAC1G,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQmF,MAAO/M,KAAK,OAAOgI,YAAY,WAAW0E,UAAU,EACzFjB,QAAQ,WAAWlE,MAAOC,KAAK1H,MAAMyJ,SAAUtB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,MACtG,6BAEA,6BACC2G,KAAK1H,MAAM4J,aACR,yBAAKjC,UAAWD,KAAKP,MAAMW,QAAQ6E,YAC/B,2BAAOzM,KAAK,OAAO+H,KAAK,OAAOE,SAAUT,KAAK+C,sBAC9C,4BAAQ9C,UAAWD,KAAKP,MAAMW,QAAQoF,WAAYxE,QAAShB,KAAKkD,kBAAhE,UACA,4BAAQjD,UAAWD,KAAKP,MAAMW,QAAQoF,WAAYxE,QAAShB,KAAKsD,oBAAhE,WAGJ,oCACI,kBAAC0B,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQqF,cAAejN,KAAK,OAAOgI,YAAY,oCAAoCuE,MAAM,QACtHhF,MAAOC,KAAK1H,MAAM0J,UAAWiC,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAK8I,aAAa,YAAa9I,MAC1G,kBAACqM,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8B,aAClClB,QAAShB,KAAKqD,oBADlB,WAKR,+BAKR,kBAACK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,yCACA,kBAACiB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,UAAUd,QAAQ,WAAWiB,UAAU,EAC1GnF,MAAOC,KAAK1H,MAAMoJ,QAASjB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,UAAW9I,MACjF,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,OAAOd,QAAQ,WAAWiB,UAAU,EACvGnF,MAAOC,KAAK1H,MAAMqJ,KAAMlB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,MAC3E,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,QAAQd,QAAQ,WAAWiB,UAAU,EACxGnF,MAAOC,KAAK1H,MAAMA,MAAOmI,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,QAAS9I,MAC7E,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,WAAWd,QAAQ,WAAWiB,UAAU,EAC3GnF,MAAOC,KAAK1H,MAAMsJ,SAAUnB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,MACnF,gCAKZ,kBAACqK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACI,kBAAC2B,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQuF,WAAY1B,QAAQ,YACtDjD,QAAS,kBAAM,EAAKqB,iBAAiB,EAAK5C,MAAM8B,MAAMC,OAAO7D,MADjE,QAEA,kBAAC+H,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQwF,aAAc3B,QAAQ,YACxDjD,QAAShB,KAAK6C,oBADlB,kB,GA5RLnC,aAgTRC,iBAxWA,SAAAC,GAAK,MAAK,CACrB+E,WAAY,CACR9E,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,oBAEZF,aAAc,CACVG,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,qBAEZ1B,YAAa,CACT4B,MAAO,SAEXrB,SAAU,CACNmB,OAAQ,oBAEZrC,QAAS,CACLqC,OAAQ,uBAEZb,WAAY,CACRa,OAAQ,sBACRE,MAAO,SAEXV,WAAY,CACRQ,OAAQ,sBACRE,MAAO,OAEXvE,YAAa,CACTqE,OAAQ,sBACRE,MAAO,UAEXT,MAAO,CACHO,OAAQ,sBACRE,MAAO,OAEX/D,WAAY,CACRgE,OAAQ,SAEZ/D,aAAc,CACVrB,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,sBAEZN,WAAY,CACRM,OAAQ,OAEZL,cAAe,CACXK,OAAQ,sBACRE,MAAO,YAsTArF,CAAmBG,aAVV,SAAAoF,GACpB,MAAO,CACH/L,UAAW+L,EAAW/L,UAAUA,UAChCmK,WAAY4B,EAAW/L,UAAUC,oBACjCiL,UAAWa,EAAWvL,OAAOjC,YAC7BqC,OAAQmL,EAAWnL,OAAON,iBAKAqG,CAAyBQ,KC9TrD6E,G,8MAQF7N,MAAQ,CACJiI,KAAM,GACNkB,YAAa,GACb2E,cAAe,GACftE,WAAY,GACZC,SAAU,GACVsE,KAAM,GACNtH,SAAU,EAAKU,MAAM8B,MAAMC,OAAO7D,I,EAItCwE,aAAe,SAACvC,EAAcvG,GAC1B,EAAKwG,SAAL,eACKD,EAAevG,EAAMyG,OAAOC,S,EAKrCuG,qBAAuB,WACnB,KAAI,EAAKhO,MAAMiI,MAAQ,EAAKjI,MAAMmJ,aAAe,EAAKnJ,MAAM8N,eAAiB,EAAK9N,MAAMwJ,YAAc,EAAKxJ,MAAMyJ,UAC1G,EAAKzJ,MAAM+N,MAed,OADA,EAAK5G,MAAMC,SAAS,CAAElH,KAAM,oBACrB,EAdP,EAAKiH,MAAMC,SAAS,CAChBlH,KAAM,iBACNK,QAAS,EAAKP,QAElB,EAAKuH,SAAS,CACVU,KAAM,GACNkB,YAAa,GACb2E,cAAe,GACftE,WAAY,GACZC,SAAU,GACVsE,KAAM,M,EAUlBhE,iBAAmB,WACfvE,KAAKC,KAAK,CACNC,KAAM,iEACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACpBC,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMzD,QAAQpC,KAAnB,qBAAsC,EAAK6F,MAAM8B,MAAMC,OAAO7D,S,EAM1E4I,iBAAmB,WACfzI,KAAKC,KAAK,CACNuE,MAAO,WACPtE,KAAK,eACLxF,KAAM,UACNkK,kBAAmB,KACnBF,mBAAoB,YAExB,EAAK/C,MAAMzD,QAAQpC,KAAnB,wBAAyC,EAAK6F,MAAM8B,MAAMC,OAAO7D,M,EAIrE6I,iBAAmB,SAAC7I,GAChBG,KAAKC,KAAK,CACNuE,MAAO,gBACPtE,KAAM,qCACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACpBC,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMC,SAAS,CAChBlH,KAAM,cACNK,QAAS,CAAEmG,QAASrB,EAAIoB,SAAU,EAAKU,MAAM8B,MAAMC,OAAO7D,U,qFAxFtEqC,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,sBACNK,QAASmH,KAAKP,MAAM8B,MAAMC,OAAO7D,O,+BA6F/B,IAAD,OAGL,OACI,yBAAKsC,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,wBAAIxD,UAAWD,KAAKP,MAAMW,QAAQqG,SAC9B,+CACA,yCACJ,kBAAC/C,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACI,4GAAiF,6BAAjF,wCACyC,6BADzC,qDAMP/D,KAAKP,MAAMyG,WAAWvL,OAAOjC,aAC1B,wBACIuH,UAAU,QACVC,KAAK,SACJF,KAAKP,MAAMyG,WAAWvL,OAAOjC,aAEtC,kBAACgL,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACI,wBAAI9D,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,6CACA,kBAACzB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,OAAOd,QAAQ,WAAWiB,UAAU,EACvGnF,MAAOC,KAAK1H,MAAMiI,KAAME,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,MAC3E,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOyL,QAAQ,WAAWiB,UAAU,EAC1FnF,MAAOC,KAAK1H,MAAM+N,KAAM5F,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,MAC3E,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,cAAcd,QAAQ,WAAWiB,UAAU,EAAMC,WAAS,EAACC,KAAK,IACnIrF,MAAOC,KAAK1H,MAAMmJ,YAAahB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,cAAe9I,MACzF,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,SAASuM,MAAM,8BAA8BG,UAAU,EAAMjB,QAAQ,WAC3HlE,MAAOC,KAAK1H,MAAM8N,cAAe3F,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,gBAAiB9I,MAC7F,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQmF,MAAO/M,KAAK,OAAOyL,QAAQ,WAAWiB,UAAU,EACrFnF,MAAOC,KAAK1H,MAAMwJ,WAAYrB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,aAAc9I,MACvF,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQmF,MAAO/M,KAAK,OAAOyL,QAAQ,WAAWiB,UAAU,EACrFnF,MAAOC,KAAK1H,MAAMyJ,SAAUtB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,MACnF,kBAACqM,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQsG,eAAgBzC,QAAQ,YAAY0C,KAAK,QAC3E3F,QAAShB,KAAKsG,sBADlB,iBAKR,kBAAC5C,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,CAAa9D,UAAWD,KAAKP,MAAMW,QAAQwG,cAEvC,wDAEC5G,KAAKP,MAAMyG,WAAWpL,UAAUhB,kBAAkByK,KAAI,SAAAsC,GAAQ,OAC3D,oCACI,kBAAC9C,GAAA,EAAD,KACI,8BAAM,qCAAc8C,EAAStG,MAAY,6BACzC,8BAAM,4CAAqBsG,EAASpF,aAAmB,6BACvD,8BAAM,kDAA2BoF,EAAST,eAAqB,6BAC/D,8BAAM,qCAAc7M,IAAOsN,EAASR,MAAM5M,OAAO,gBAAsB,6BACvE,8BAAM,qCAAcoN,EAAS/E,WAA7B,MAA4C+E,EAAS9E,SAArD,KAAsE,6BACtE,kBAAC2D,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQ0G,aAAc9F,QAAS,kBAAM,EAAKwF,iBAAiBK,EAASlJ,MAAlG,iBAQpB,kBAAC+F,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IAEX,kBAACC,GAAA,EAAD,KACI,kBAAC2B,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQuF,WAAY1B,QAAQ,YACtDjD,QAAShB,KAAKqC,kBADlB,QAEA,kBAACqD,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ2G,WAAY9C,QAAQ,YACtDjD,QAAShB,KAAKuG,kBADlB,gB,GAxKI7F,aAyLjBC,iBApOA,SAAAC,GAAK,MAAK,CACrB6C,QAAS,CACLqC,OAAQ,uBAEZW,QAAS,CACL5F,MAAO,WAEXoE,WAAY,CACRa,OAAQ,sBACRE,MAAO,SAEXT,MAAO,CACHO,OAAQ,uBAEZY,eAAgB,CACZ7F,MAAO,QACPgF,gBAAiB,UACjBE,MAAO,QACPD,OAAQ,sBAEZH,WAAY,CACR9E,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,oBAEZiB,WAAY,CACRhB,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,qBAEZgB,aAAc,CACVjG,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,oBAEZc,aAAc,CACVd,OAAQ,0BA+LDnF,CAAmBG,aANV,SAAAoF,GACpB,MAAO,CACHA,gBAI0BpF,CAAyBqF,KC5J5Ca,I,OAxEE,WACf,IAAMtH,EAAWuH,cACXC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMrO,SAASA,YAChDsO,EAASF,aAAY,SAAAC,GAAK,OAAIA,EAAMvM,aAgB1C,SAASyM,EAAUjO,GACjB,IAAIkO,EAAI,wBAAoBlO,EAAMsE,IAClC,OACE,yBAAK8G,IAAKpL,EAAMsE,IACd,kBAAC+F,GAAA,EAAD,CAAMG,MAAI,EAAC2D,GAAI,IAAf,IAAqB,qCAArB,IAAoCnO,EAAMkH,KAA1C,QACE,kBAAC,KAAD,CAAMU,GAAIsG,GAAV,eAEF,kBAAC7D,GAAA,EAAD,CAAMG,MAAI,EAAC2D,GAAI,IAAK,8CAApB,IAhBN,SAAkB7J,GAAK,IAAD,uBACpB,YAAsB0J,EAAtB,+CAA8B,CAAC,IAAtBlN,EAAqB,QAC5B,IAAMwD,IAAQxD,EAAUwD,GACtB,OAAOxD,EAAUoG,MAHD,mFAgB4BkH,CAASpO,EAAMoE,eACzD,6BADF,IACS,sCACNlE,IAAOF,EAAMwI,YAAYpI,OAAO,eAFnC,MAEsDF,IAAOF,EAAMG,UAAUC,OAAO,gBANtF,IAOU,8BAId,OA7BAiO,IAAMC,WAAU,WACdjI,EAAS,CAAElH,KAAM,iBACjBkH,EAAS,CAAElH,KAAM,oBAChB,IA2BD,yBAAKyH,UAAU,gBACb,yBAAKA,UAAU,kBAAiB,yCAChC,kBAACyD,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAAC2D,GAAI,EAAG1D,GAAI,IACpB,wBAAI7D,UAAU,oBAAoB1G,MAASI,SAAS,GAAI,QAAQZ,WAAhE,MAA+EQ,MAASI,SAAS,EAAG,QAAQZ,YAC5G,4BACGmO,EAAUlO,UAAYkO,EAAUlO,UAAUuL,KAAI,SAAAlL,GAAK,OAAIiO,EAAUjO,MAAU,cAGhF,kBAACqK,GAAA,EAAD,CAAMG,MAAI,EAAC2D,GAAI,EAAG1D,GAAI,IACpB,wBAAI7D,UAAU,oBAAoB1G,MAASI,SAAS,EAAG,QAAQZ,WAA/D,MAA8EQ,MAASI,SAAS,EAAG,QAAQZ,SAAS,eACpH,4BACGmO,EAAUjO,SAAWiO,EAAUjO,SAASsL,KAAI,SAAAlL,GAAK,OAAIiO,EAAUjO,MAAU,wBAG9E,kBAACqK,GAAA,EAAD,CAAMG,MAAI,EAAC2D,GAAI,EAAG1D,GAAI,IACpB,wBAAI7D,UAAU,oBAAoB1G,MAASE,OAAO,cAAlD,MAAoEF,MAASM,IAAI,EAAG,QAAQd,SAAS,eACrG,4BACGmO,EAAUhO,YAAcgO,EAAUhO,YAAYqL,KAAI,SAAAlL,GAAK,OAAIiO,EAAUjO,MAAU,wBAGpF,kBAACqK,GAAA,EAAD,CAAMG,MAAI,EAAC2D,GAAI,EAAG1D,GAAI,IACpB,wBAAI7D,UAAU,oBAAoB1G,MAASM,IAAI,EAAG,QAAQd,WAA1D,MAAyEQ,MAASM,IAAI,GAAI,QAAQd,YAClG,4BACGmO,EAAU/N,SAAW+N,EAAU/N,SAASoL,KAAI,SAAAlL,GAAK,OAAIiO,EAAUjO,MAAU,wBAG9E,kBAACqK,GAAA,EAAD,CAAMG,MAAI,EAAC2D,GAAI,EAAG1D,GAAI,IACpB,wBAAI7D,UAAU,oBAAd,iBACA,4BACGiH,EAAU/N,SAAW+N,EAAU9N,OAAOmL,KAAI,SAAAlL,GAAK,OAAIiO,EAAUjO,MAAU,4B,iIC5D9EuO,GAAkBjH,cAAW,SAAAC,GAAK,MAAK,CACzCiH,KAAM,CACFhC,gBAAiB,UACjBhF,MAAO,QACPiH,SAAU,IAEdC,KAAM,CACFD,SAAU,OAPMnH,CASpBqH,MA2CEC,G,8MAEF3P,MAAQ,CACJ4P,UAAW,I,EAiBfC,uBAAyB,WACrB,EAAK1I,MAAMC,SAAS,CAChBlH,KAAM,kBAEV,EAAKiH,MAAMC,SAAS,CAChBlH,KAAM,yB,EAKd4P,sBAAwB,SAACzK,GACrB,EAAK8B,MAAMzD,QAAQpC,KAAnB,4BAA6C+D,K,EAIjD0K,eAAiB,SAAChP,GACd,EAAKwG,SAAS,CACVqI,UAAW7O,EAAMyG,OAAOC,S,EAKhCuI,aAAe,SAACjP,GACZA,EAAMmG,iBACN,EAAKC,MAAMC,SAAS,CAAElH,KAAM,SAAUK,QAAS,EAAKP,MAAM4P,a,EAI9DK,aAAe,SAAC5K,EAAI6K,GAChB1K,KAAKC,KAAK,CACNuE,MAAO,gBACPtE,KAAK,2BAAD,OAA6BwK,EAA7B,8BACJhQ,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACpBC,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMC,SAAS,CAAElH,KAAM,oBAAqBK,QAAS8E,Q,qFApDlEqC,KAAKmI,2B,yCAIU5E,GACyB,UAApCvD,KAAKP,MAAMyG,WAAWtL,KAAK2F,MAAoBgD,EAAU2C,WAAWtL,KAAK2F,OAASP,KAAKP,MAAMyG,WAAWtL,KAAK2F,MAC7GP,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,0B,+BAkDR,IAAD,OAECiQ,EAAgBzI,KAAKP,MAAMyG,WAAWtL,KAAK2F,KAC7CmI,EAA4BnP,MAASI,SAAS,EAAG,UAAUF,OAAO,cAEtE,OACI,yBAAKwG,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,wBAAIxD,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,aAIA,kBAACkC,GAAA,EAAD,CAAO1I,UAAWD,KAAKP,MAAMW,QAAQwI,MAEjC,yBAAK3I,UAAWD,KAAKP,MAAMW,QAAQ3D,QAC/B,kBAACkM,GAAA,EAAD,CAAOE,UAAW,GACd,0BAAM1I,SAAUH,KAAKsI,cACjB,kBAACQ,GAAA,EAAD,CAAYC,aAAW,SAAS/H,QAAShB,KAAKsI,cAC1C,kBAAC,KAAD,OAEJ,kBAACU,GAAA,EAAD,CAAWxI,YAAY,oBAAoBC,SAAUT,KAAKqI,eAAgBtI,MAAOC,KAAK1H,MAAM4P,aAEhG,kBAACe,GAAA,EAAD,QAKR,kBAACC,GAAA,EAAD,CAAOC,MAAM,OAAOxC,KAAK,UAIC,UAAlB8B,EACI,kBAACW,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUpJ,UAAWD,KAAKP,MAAMW,QAAQgF,MACpC,kBAACwC,GAAD,CAAiB0B,MAAM,QAAvB,SACA,kBAAC1B,GAAD,CAAiB0B,MAAM,QAAvB,UACA,kBAAC1B,GAAD,CAAiB0B,MAAM,QAAvB,YACA,kBAAC1B,GAAD,CAAiB0B,MAAM,QAAvB,WACA,kBAAC1B,GAAD,CAAiB0B,MAAM,aAM/B,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUpJ,UAAWD,KAAKP,MAAMW,QAAQgF,MACpC,kBAACwC,GAAD,CAAiB0B,MAAM,QAAvB,SACA,kBAAC1B,GAAD,CAAiB0B,MAAM,QAAvB,UACA,kBAAC1B,GAAD,CAAiB0B,MAAM,QAAvB,YACA,kBAAC1B,GAAD,CAAiB0B,MAAM,QAAvB,2BACA,kBAAC1B,GAAD,CAAiB0B,MAAM,UAAvB,kBAOM,UAAlBb,EACI,kBAACc,GAAA,EAAD,KACKvJ,KAAKP,MAAMyG,WAAW3L,MAAMC,gBACzBwF,KAAKP,MAAMyG,WAAW3L,MAAMC,eAAe+J,KAAI,SAAApK,GAC3C,IAAIqP,EAAgBjQ,IAAOY,EAAUsP,gBAAgBhQ,OAAO,cAC5D,MAAuB,UAAnBU,EAAUoG,MAEN,kBAAC8I,GAAA,EAAD,CAAU5E,IAAKtK,EAAUwD,GAAIsC,UAAW,EAAKR,MAAMW,QAAQgF,KAAM+D,OAAO,GACpE,kBAACvB,GAAD,CAAiB0B,MAAM,QAAO,yBAAKI,IAAKvP,EAAUwP,KAAMC,IAAI,iBAAiB5D,MAAM,MAAMC,OAAO,SAChG,kBAAC2B,GAAD,CAAiB0B,MAAM,QAAQnP,EAAUoG,KAAK,6BACzCpG,EAAUuH,QAAQ,6BAClBvH,EAAUwH,KAFf,IAGOxH,EAAU7B,MACZ6B,EAAUyH,SAJf,MAKA,kBAACgG,GAAD,CAAiB0B,MAAM,QAASnP,EAAU0P,eAE1C,kBAACjC,GAAD,CAAiB0B,MAAM,QAClBE,EAAgBd,GACb,6BAEI,kBAACoB,GAAA,EAAD,CAAgBhC,SAAS,QAAQ7H,UAAW,EAAKR,MAAMW,QAAQ2J,SAK3E,kBAACnC,GAAD,CAAiB0B,MAAM,UACnB,kBAAC5D,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQuF,WAAY1B,QAAQ,YACtDjD,QAAS,WAAQ,EAAKuH,aAAapO,EAAUwD,GAAIxD,EAAUoG,QAD/D,iBAY5B,kBAACgJ,GAAA,EAAD,KAEKvJ,KAAKP,MAAMyG,WAAWrL,UAAU0J,KAAI,SAACpK,GAClC,MAAuB,UAAnBA,EAAUoG,MAEN,kBAAC8I,GAAA,EAAD,CAAU5E,IAAKtK,EAAUwD,GAAIsC,UAAW,EAAKR,MAAMW,QAAQgF,KAAM+D,OAAO,EACpEnI,QAAS,kBAAM,EAAKoH,sBAAsBjO,EAAUwD,MACpD,kBAACiK,GAAD,CAAiB0B,MAAM,QAAO,yBAAKI,IAAKvP,EAAUwP,KAAMC,IAAI,iBAAiB5D,MAAM,MAAMC,OAAO,SAChG,kBAAC2B,GAAD,CAAiB0B,MAAM,QAAQnP,EAAUoG,KAAK,6BACzCpG,EAAUuH,QAAQ,6BAClBvH,EAAUwH,KAFf,QAE4BxH,EAAU7B,MAFtC,OAGK6B,EAAUyH,SAHf,MAIA,kBAACgG,GAAD,CAAiB0B,MAAM,QAAQnP,EAAU0P,eACzC,kBAACjC,GAAD,CAAiB0B,MAAM,QAAO,kBAAC5D,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQuF,WAAY1B,QAAQ,YACpFjD,QAAS,kBAAM,EAAKoH,sBAAsBjO,EAAUwD,MAD1B,cAE9B,kBAACiK,GAAD,CAAiB0B,MAAM,UAAS,kBAAC5D,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQuF,WAAY1B,QAAQ,aACtF,uBAAGhE,UAAW,EAAKR,MAAMW,QAAQ4J,eAAgB5I,KAAMjH,EAAU8P,QAASnK,OAAO,SAASuB,IAAI,uBAA9F,yB,GA9K5BX,aAyMbC,iBAjPA,SAAAC,GAAK,MAAK,CACrB+E,WAAY,CACR9E,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,oBAEZkE,eAAgB,CACZnJ,MAAO,QACPqJ,eAAgB,QAEpBtB,KAAM,CACFuB,UAAW,SACXnE,MAAO,MACPoE,UAAWxJ,EAAMgD,QAAQ,GACzByG,UAAW,SACXvE,OAAQ,QAEZrJ,OAAQ,CACJsJ,MAAO,QACPC,MAAO,MACPF,OAAQlF,EAAMgD,QAAQ,IAE1BwB,KAAM,CACFa,OAAQ,SAEZ8D,KAAM,CACFlJ,MAAO,OAEX4F,QAAS,CACL5F,MAAO,WAEX4C,QAAS,CACLoC,gBAAiB,UACjByE,QAAS,OACTC,UAAW,aA+MJ5J,CAAmBG,aANV,SAAAoF,GACpB,MAAO,CACHA,gBAI0BpF,CAAyBmH,KC9LrDuC,G,8MAEFlS,MAAQ,CACJqF,GAAI8M,OAAO,EAAKhL,MAAM8B,MAAMC,OAAO7D,IACnCuE,cAAc,EACdD,WAAY,I,EAoBhBE,aAAe,SAACvC,EAAcvG,GAAW,IAAD,EACpC,EAAKwG,UAAL,mBACKD,EAAevG,EAAMyG,OAAOC,OADjC,mBAEQ,EAAKN,MAAM8B,MAAMC,OAAO7D,IAFhC,8BAGmB,EAAK8B,MAAMpG,MAAM,GAAGoE,eAHvC,K,EAQJ4E,iBAAmB,WACfvE,KAAKC,KAAK,CACNuE,MAAO,gBACPtE,KAAM,qDACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACpBC,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMzD,QAAQ0O,a,EAM/B7H,mBAAqB,WACjB,IAAIrJ,EAAW,EAAKlB,MAAMkB,UAAY,EAAKiG,MAAMpG,MAAM,GAAGG,SACtDqI,EAAa,EAAKvJ,MAAMuJ,YAAc,EAAKpC,MAAMpG,MAAM,GAAGwI,WAC9D,GAAItI,IAAOC,GAAUC,OAAO,YAAcF,IAAOsI,GAAYpI,OAAO,YAEhE,OADA,EAAKgG,MAAMC,SAAS,CAAElH,KAAM,gBACrB,EAEP,EAAKiH,MAAMC,SAAS,CAChBlH,KAAM,aACNK,QAAS,CACL0H,KAAM,EAAKjI,MAAMiI,MAAQ,EAAKd,MAAMpG,MAAM,GAAGkH,KAC7CkB,YAAa,EAAKnJ,MAAMmJ,aAAe,EAAKhC,MAAMpG,MAAM,GAAGoI,YAC3DC,QAAS,EAAKpJ,MAAMoJ,SAAW,EAAKjC,MAAMpG,MAAM,GAAGqI,QACnDC,KAAM,EAAKrJ,MAAMqJ,MAAQ,EAAKlC,MAAMpG,MAAM,GAAGsI,KAC7CC,SAAU,EAAKtJ,MAAMsJ,UAAY,EAAKnC,MAAMpG,MAAM,GAAGuI,SACrDI,UAAW,EAAK1J,MAAM0J,WAAa,EAAKvC,MAAMpG,MAAM,GAAG2I,UACvDH,WAAY,EAAKvJ,MAAMuJ,YAAc,EAAKpC,MAAMpG,MAAM,GAAGwI,WACzDrI,SAAU,EAAKlB,MAAMkB,UAAY,EAAKiG,MAAMpG,MAAM,GAAGG,SACrDmR,OAAQ,EAAKrS,MAAMqS,QAAU,EAAKlL,MAAMpG,MAAM,GAAGf,MACjDwJ,WAAY,EAAKxJ,MAAMwJ,YAAc,EAAKrC,MAAMpG,MAAM,GAAGyI,WACzDC,SAAU,EAAKzJ,MAAMyJ,UAAY,EAAKtC,MAAMpG,MAAM,GAAG0I,SACrDtE,cAAe,EAAKgC,MAAMpG,MAAM,GAAGoE,cACnCE,GAAI8M,OAAO,EAAKhL,MAAM8B,MAAMC,OAAO7D,OAG3C,EAAK8B,MAAMzD,QAAQ0O,U,EAK3BE,yBAA2B,WACvB,EAAKnL,MAAMzD,QAAQpC,KAAnB,yBAA0C,EAAK6F,MAAM8B,MAAMC,OAAO7D,M,EAItE0F,mBAAqB,WACjB,EAAKxD,SAAS,CACVqC,cAAc,K,EAKtBoB,mBAAqB,WACjB,EAAKzD,SAAS,CACVqC,cAAc,K,EAKtBa,oBAAsB,SAAC1J,GACnB,IAAI2J,EAAO3J,EAAMyG,OAAOmD,MAAM,GAC9B,EAAKpD,SAAS,CACVoC,WAAYe,K,EAKpBE,iBAAmB,WACf,IAAM3G,EAAO,IAAI4G,SACjB5G,EAAK6G,OAAO,OAAQ,EAAK9K,MAAM2J,YAC/B,EAAKxC,MAAMC,SAAS,CAChBlH,KAAM,eACNK,QAAS0D,IAEb,EAAKsD,SAAS,CACVqC,cAAc,K,qFA3GlBlC,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,oBACNK,QAAS4R,OAAOzK,KAAKP,MAAM8B,MAAMC,OAAO7D,Q,yCAK7B4F,GACXvD,KAAKP,MAAM1E,SAAWwI,EAAUxI,QAChCiF,KAAKH,SAAS,CACVmC,UAAWhC,KAAKP,MAAM1E,OAAOyI,Q,+BAqG/B,IAAD,OACL,OACI,yBAAKvD,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,gDAAsB9D,KAAKP,MAAMpG,MAAMkL,KAAI,SAAAlL,GAAK,OAAK,8BAAOA,EAAMkH,UAClE,mGAGPP,KAAKP,MAAM4F,WACR,wBACIpF,UAAU,QACVC,KAAK,SACJF,KAAKP,MAAM4F,WAEpB,kBAAC3B,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAChC,kBAACnH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KAEI,kBAACC,GAAA,EAAD,CAAaC,QAAQ,YAEbjE,KAAKP,MAAMpG,MAAMkL,KAAI,SAACuG,GAClB,OAAO,oCACH,kBAACpH,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAChC,kBAACnH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,2BAAO9D,UAAW,EAAKR,MAAMW,QAAQ6E,WAAYR,IAAKqG,EAAGnN,IAAzD,cAA+E,6BAC/E,kBAACqH,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQ6E,WAC9BzM,KAAK,OACLuM,MAAM,aACNvE,YAAasK,EAAGvK,KAChBwK,aAAcD,EAAGvK,KACjB0D,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,QAI3D,kBAACqK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,2BAAO9D,UAAW,EAAKR,MAAMW,QAAQ6E,YAArC,gCAAqF,6BACrF,kBAACD,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQ6E,WAC9BzM,KAAK,OACLuM,MAAM,oBACNvE,YAAasK,EAAGrJ,YAChBsJ,aAAcD,EAAGrJ,YACjBwC,QAAQ,WACRkB,WAAS,EAACC,KAAK,IACf3E,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,cAAe9I,SAOtE,kBAACqK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,2BAAO9D,UAAW,EAAKR,MAAMW,QAAQ6E,YAArC,8BAA6E1L,IAAOuR,EAAGjJ,YAAYpI,OAAO,eAAsB,6BAChI,kBAACuL,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQkF,WAC9B9M,KAAK,OACLyL,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAc,aAAe9I,QAInE,kBAACqK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,2BAAO9D,UAAW,EAAKR,MAAMW,QAAQ6E,YAArC,4BAA2E1L,IAAOuR,EAAGtR,UAAUC,OAAO,eAAsB,6BAC5H,kBAACuL,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQkF,WAC9B9M,KAAK,OACLgI,YAAY,MACZyD,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAc,WAAa9I,SAKrE,kBAACqK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAChC,kBAACnH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KAEI,kBAACiB,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQmF,MAC9B/M,KAAK,OACLgI,YAAY,aACZuE,MAAM,aACNgG,aAAcD,EAAGhJ,WACjBmC,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,aAAc9I,MAGzD,kBAAC2L,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQmF,MAC9B/M,KAAK,OACLgI,YAAY,WACZuE,MAAM,WACNgG,aAAcD,EAAG/I,SACjBkC,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,QAI/D,kBAACqK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,2BAAO9D,UAAW,EAAKR,MAAMW,QAAQ6E,YAArC,WAAgE,6BAChE,kBAACD,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQ6E,WAC9BzM,KAAK,OACLgI,YAAY,UACZuE,MAAM,UACNgG,aAAcD,EAAGpJ,QACjBuC,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,UAAW9I,SAOlE,kBAACqK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAChC,kBAACnH,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,2BAAO9D,UAAW,EAAKR,MAAMW,QAAQ6E,YAArC,0BAA+E,6BAE9E,EAAK3M,MAAM4J,aACR,6BACI,2BAAO1J,KAAK,OAAO+H,KAAK,OAAOE,SAAU,EAAKsC,sBAC9C,4BAAQ9C,UAAW,EAAKR,MAAMW,QAAQoF,WAAYxE,QAAS,EAAKkC,kBAAhE,UACA,4BAAQjD,UAAW,EAAKR,MAAMW,QAAQoF,WAAYxE,QAAS,EAAKsC,oBAAhE,WAGJ,oCACI,kBAAC0B,GAAA,EAAD,CAAW/E,UAAW,EAAKR,MAAMW,QAAQ4K,SAAUxS,KAAK,OAAOuS,aAAcD,EAAG9I,UAAWxB,YAAY,YAAYuE,MAAM,YAAYd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAK8I,aAAa,YAAa9I,MAC9M,kBAACqM,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQ8B,aAClClB,QAAS,EAAKqC,oBADlB,aAQhB,kBAACK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,2BAAO9D,UAAW,EAAKR,MAAMW,QAAQ6E,YAArC,QAA6D,6BAC7D,kBAACD,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQ6E,WAC9BzM,KAAK,OACLgI,YAAY,OACZuE,MAAM,OACNgG,aAAcD,EAAGnJ,KACjBsC,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,MAEnD,2BAAO4G,UAAW,EAAKR,MAAMW,QAAQ6E,YAArC,sBAA2E,6BAC3E,kBAACD,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQ6K,SAC9BzS,KAAK,OACLgI,YAAY,QACZuE,MAAM,QACNgG,aAAcD,EAAGxS,MACjB2L,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,SAAU9I,MAErD,kBAAC2L,GAAA,EAAD,CACI/E,UAAW,EAAKR,MAAMW,QAAQ6K,SAC9BzS,KAAK,SACLgI,YAAY,WACZuE,MAAM,WACNgG,aAAcD,EAAGlJ,SACjBqC,QAAQ,WACRxD,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,iBAa/F,kBAACqK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACI,kBAAC2B,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQuF,WAAY1B,QAAQ,YACtDjD,QAAShB,KAAKqC,kBADlB,QAGA,kBAACqD,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQwF,aAAc3B,QAAQ,YACxDjD,QAAShB,KAAK6C,oBADlB,UAGA,kBAAC6C,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8K,WAAYjH,QAAQ,YACtDjD,QAAShB,KAAK4K,0BADlB,gC,GA5TJlK,aA8UTI,gBARS,SAACxI,GACrB,MAAO,CACHe,MAAOf,EAAMe,MAAMiB,aACnB+K,UAAW/M,EAAMqC,OAAOjC,YACxBqC,OAAQzC,EAAMyC,OAAON,iBAIdqG,CAAyBH,cAhZzB,SAAAC,GAAK,MAAK,CACrB6C,QAAS,CACLqC,OAAQ,uBAEZqF,KAAM,CACFN,QAAS,UAEblF,WAAY,CACR9E,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,oBAEZF,aAAc,CACVG,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,oBAEZoF,WAAY,CACRrK,MAAO,QACPgF,gBAAiB,UACjBuF,WAAW,OAEfnG,WAAY,CACRa,OAAQ,sBACRE,MAAO,QACPnF,MAAO,UACPiH,SAAU,QAEdkD,SAAU,CACNlF,OAAQ,sBACRE,MAAO,QACPnF,MAAO,UACPiH,SAAU,QAEdmD,SAAU,CACNnF,OAAQ,sBACRE,MAAO,QACPnF,MAAO,UACPiH,SAAU,QAEdrG,YAAa,CACTqE,OAAQ,sBACRE,MAAO,UAEXT,MAAO,CACHO,OAAQ,uBAEZR,WAAY,CACRQ,OAAQ,sBACRE,MAAO,OAEXjB,MAAO,CACHlE,MAAO,UACPiH,SAAU,QAEd5F,aAAc,CACVrB,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,sBAEZN,WAAY,CACRM,OAAQ,UAkVwBnF,CAAmB6J,K,6jBCjZ3D,IA+CMa,G,8MAmBF/S,MAAQ,CACJqF,GAAI,EAAK8B,MAAM8B,MAAMC,OAAO7D,GAC5B4C,KAAM,GACNkB,YAAa,GACb6J,aAAe,GACfC,cAAe,GACfC,cAAe,GACfvB,QAAS,GACTN,KAAM,GACN8B,YAAa,EACb5B,cAAe,OACf3H,cAAc,EACdD,WAAY,I,EAIhByJ,kBAAoB,SAAC9L,EAAcvG,GAC/B,EAAKwG,SAAL,MACO,EAAKvH,MADZ,eAEKsH,EAAevG,EAAMyG,OAAOC,U,EAKrC4L,sBAAwB,SAAC/L,EAAcvG,GACnC,EAAKoG,MAAMC,SAAS,CAChBlH,KAAM,yBACNK,QAAQ,eACH+G,EAAevG,EAAMyG,OAAOC,U,EAMzC6L,qBAAuB,SAACC,EAAeC,EAAezS,GAAW,IAAD,IAC5D,EAAKwG,SAAL,MACO,EAAKvH,OADZ,mBAEKuT,EAAgBxS,EAAMyG,OAAOC,MAAMpC,IAFxC,cAGKmO,EAAgBzS,EAAMyG,OAAOC,MAAMQ,MAHxC,KAKA,EAAKd,MAAMC,SAAS,CAChBlH,KAAM,yBACNK,SAAO,mBACFgT,EAAgBxS,EAAMyG,OAAOC,MAAMpC,IADjC,cAEFmO,EAAgBzS,EAAMyG,OAAOC,MAAMQ,MAFjC,M,EAQf8B,iBAAmB,WACfvE,KAAKC,KAAK,CACNuE,MAAO,gBACPtE,KAAM,gCACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACpBC,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMzD,QAAQ0O,a,EAM/B7H,mBAAqB,WACjB,IAAIlF,EAAK,EAAK8B,MAAM8B,MAAMC,OAAO7D,GACjCG,KAAKC,KAAK,CACNuE,MAAO,WACPtE,KAAM,8DACNxF,KAAM,UACNkK,kBAAmB,KACnBF,mBAAoB,YACrBG,MAAK,SAACC,GACDA,EAAO7C,QACP,EAAKN,MAAMC,SAAS,CAChBlH,KAAM,iBACNK,QAAS,EAAK4G,MAAMyG,WAAW/L,UAAUA,UAAU,KAEvD,EAAKsF,MAAMC,SAAS,CAChBlH,KAAM,gBACNK,QAAS8E,IAEb,EAAK8B,MAAMzD,QAAQ0O,c,EAM/BrH,mBAAqB,WACjB,EAAKxD,SAAS,CACVqC,cAAc,K,EAKtBoB,mBAAqB,WACjB,EAAKzD,SAAS,CACVqC,cAAc,K,EAKtBa,oBAAsB,SAAC1J,GACnB,IAAI2J,EAAO3J,EAAMyG,OAAOmD,MAAM,GAC9B,EAAKpD,SAAS,CACVoC,WAAYe,K,EAKpBE,iBAAmB,WACf,IAAM3G,EAAO,IAAI4G,SACjB5G,EAAK6G,OAAO,OAAQ,EAAK9K,MAAM2J,YAC/B,EAAKxC,MAAMC,SAAS,CAChBlH,KAAM,eACNK,QAAS0D,IAEb,EAAKsD,SAAS,CACVqC,cAAc,K,qFAzIlBlC,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,gBACNK,QAASmH,KAAKP,MAAM8B,MAAMC,OAAO7D,O,yCAKtB4F,GACXvD,KAAKP,MAAMyG,WAAWnL,OAAON,gBAAkB8I,EAAU2C,WAAWnL,OAAON,eAC3EuF,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,yBACNK,QAAS,CAAE8Q,KAAM3J,KAAKP,MAAMyG,WAAWnL,OAAON,cAAc+I,S,+BAmI9D,IAAD,OACDuI,EAAe,CACfC,qBAAsB,CAClBrO,GAAI,EACJ4C,KAAM,yBAEV0L,cAAe,CACXtO,GAAI,EACJ4C,KAAM,kBAEV2L,OAAQ,CACJvO,GAAI,EACJ4C,KAAM,UAEV4L,MAAO,CACHxO,GAAI,EACJ4C,KAAM,UAIV6L,EAAmBpM,KAAKP,MAAMyG,WAAW/L,UAAUA,UAAU,GAGjE,OACI,yBAAK8F,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,wBAAIxD,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,8BAEA,uBAAGxG,UAAWD,KAAKP,MAAMW,QAAQiM,WAAjC,iKAIAD,GACA,6BACA,kBAAC1I,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACkB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAO,uBAAuBgG,aAAeqB,EAAiBE,eAC/H9L,YAAY,uBAAuByD,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,iBAAkBtS,MAC1H,6BACQ,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQqB,YAAasJ,aAAcqB,EAAiB3K,YAAajJ,KAAK,OAAOgI,YAAY,2BAA2BuE,MAAM,2BAA2Bd,QAAQ,WAAWkB,WAAS,EAACC,KAAK,IAAI3E,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,cAAetS,QAK7S,kBAACqK,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAEH,kBAACkB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAY8F,aAAcqB,EAAiBd,aAAc9S,KAAK,OAAOgI,YAAY,wBAAwBuE,MAAM,wBAAwBd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,eAAgBtS,MAC7Q,6BACQ,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAY8F,aAAcqB,EAAiBb,cAAe/S,KAAK,OAAOgI,YAAY,yBAAyBuE,MAAM,yBAAyBd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,gBAAiBtS,MACjR,6BACI,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAY8F,aAAcqB,EAAiBZ,cAAehT,KAAK,OAAOgI,YAAY,yBAAyBuE,MAAM,yBAAyBd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,gBAAiBtS,MAC7Q,6BACI,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAY8F,aAAcqB,EAAiBnC,QAASzR,KAAK,OAAOgI,YAAY,2BAA2BuE,MAAM,2BAA2Bd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,UAAWtS,MACrQ,6BAEK2G,KAAK1H,MAAM4J,aACR,yBAAKjC,UAAWD,KAAKP,MAAMW,QAAQ6E,YAC/B,2BAAOzM,KAAK,OAAO+H,KAAK,OAAOE,SAAUT,KAAK+C,sBAC9C,4BAAQ9C,UAAWD,KAAKP,MAAMW,QAAQoF,WAAYxE,QAAShB,KAAKkD,kBAAhE,UACA,4BAAQjD,UAAWD,KAAKP,MAAMW,QAAQoF,WAAYxE,QAAShB,KAAKsD,oBAAhE,WAGJ,oCACI,kBAAC0B,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuH,MAAOqM,EAAiBzC,KAAMnJ,YAAY,wBAAwBuE,MAAM,wBAAwBd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,OAAQtS,MAC9O,kBAACqM,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8B,aAClClB,QAAShB,KAAKqD,oBADlB,WAMZ,8BAEJ,kBAACK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAEP,kBAACkB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAY8F,aAAcqB,EAAiB1K,QAASlJ,KAAK,OAAOgI,YAAY,iBAAiBuE,MAAM,iBAAiBd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,UAAWtS,MAC7O,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAY8F,aAAcqB,EAAiBzK,KAAMnJ,KAAK,OAAOgI,YAAY,OAAOuE,MAAM,OAAOd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,OAAQtS,MACnN,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAY8F,aAAcqB,EAAiB9T,MAAOE,KAAK,OAAOgI,YAAY,QAAQuE,MAAM,QAAQd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,QAAStS,MACvN,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuS,aAAcqB,EAAiBxK,SAAUpB,YAAY,WAAWuE,MAAM,WAAWd,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKsS,sBAAsB,WAAYtS,MACnO,6BACA,kBAAC2K,GAAA,EAAD,CAAaC,QAAQ,UACjB,kBAACC,GAAA,EAAD,CAAYjE,UAAWD,KAAKP,MAAMW,QAAQmM,YAA1C,gCAGA,kBAACpI,GAAA,EAAD,CACIlE,UAAWD,KAAKP,MAAMW,QAAQgE,YAAarE,MAAOC,KAAK1H,MAAMuR,cAAepJ,SAAU,SAACpH,GAAY,EAAKuS,qBAAqB,cAAe,gBAAiBvS,KAC7J,kBAACgL,GAAA,EAAD,CAAUtE,MAAOC,KAAK1H,MAAMuR,eACxB,4BAAK7J,KAAK1H,MAAMuR,gBAEpB,kBAACxF,GAAA,EAAD,CAAUtE,MAAOgM,EAAaC,sBAA9B,yBACA,kBAAC3H,GAAA,EAAD,CAAUtE,MAAOgM,EAAaG,QAA9B,UACA,kBAAC7H,GAAA,EAAD,CAAUtE,MAAOgM,EAAaE,eAA9B,kBACA,kBAAC5H,GAAA,EAAD,CAAUtE,MAAOgM,EAAaI,OAA9B,aAKpB,kBAACzI,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC4B,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQuF,WAAY3E,QAAShB,KAAKqC,iBAAmB4B,QAAQ,aAA3F,QACA,kBAACyB,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQwF,aAAc5E,QAAShB,KAAK6C,mBAAoBoB,QAAQ,aAA9F,kB,GAvPIvD,aAuQbC,iBAtTA,SAAAC,GAAK,MAAK,CACrB6F,QAAS,CACL5F,MAAO,WAEX8E,WAAY,CACR9E,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,uBAEZF,aAAc,CACVG,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,wBAEZb,WAAY,CACRa,OAAQ,sBACRE,MAAO,SAEXvE,YAAa,CACTqE,OAAQ,sBACRE,MAAO,SAEX5B,YAAa,CACT0B,OAAQ,sBACRE,MAAO,SAEXuG,WAAY,CACRzG,OAAQ,uBAEZrC,QAAS,CACLqC,OAAQ,uBAEZuG,UAAW,CACPvG,OAAQ,sBAEZ5D,aAAc,CACVrB,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,sBAEZN,WAAY,CACRM,OAAQ,UA4QDnF,CAAmBG,aANV,SAAAoF,GACpB,MAAO,CACHA,gBAI0BpF,CAAyBuK,K,oBCrTrDzD,I,OAAkBjH,cAAW,SAAAC,GAAK,MAAK,CACzCiH,KAAM,CACFhC,gBAAiB,UACjBhF,MAAO,QACPiH,SAAU,IAEdC,KAAM,CACFD,SAAU,OAPMnH,CASpBqH,OA4BEwE,G,8MAUFC,YAAc,SAAC9O,GACX,EAAK8B,MAAMzD,QAAQpC,KAAnB,kBAAmC+D,K,EAIvC+O,kBAAoB,WAChB,IAAI/O,EAAK,EAAK8B,MAAM8B,MAAMC,OAAO7D,GACjC,EAAK8B,MAAMzD,QAAQpC,KAAnB,yBAA0C+D,K,EAI9CgP,gBAAkB,WACd,IAAIhP,EAAK,EAAK8B,MAAM8B,MAAMC,OAAO7D,GACjC,EAAK8B,MAAMzD,QAAQpC,KAAnB,qBAAsC+D,K,qFApBtCqC,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,oBACNK,QAASmH,KAAKP,MAAM8B,MAAMC,OAAO7D,O,+BAqB/B,IAAD,OACDiP,EAAgB5M,KAAKP,MAAMtF,UAAU,IAAM,IAE/C,OACI,yBAAK8F,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAErB,kBAACF,GAAA,EAAD,CAAMzD,UAAWD,KAAKP,MAAMW,QAAQyM,kBAAmBhJ,MAAI,EAACC,GAAI,IAE5D,kBAACC,GAAA,EAAD,KACI,yBAAK2F,IAAK1J,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGwP,KAAMC,IAAI,iBAAiB5D,MAAM,SAGlG,kBAACjC,GAAA,EAAD,KACI,wBAAI9D,UAAU,QAAQD,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGmS,gBACzE,6BAASrM,UAAU,WACdD,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGuH,QADxD,IACiE,6BAC5D1B,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGwH,KAFxD,OAGH3B,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAG7B,MAHhD,OAIH0H,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGyH,aAK5D,kBAAC8B,GAAA,EAAD,CAAMoJ,YAAU,EAAClJ,QAAS,GAEtB,kBAACF,GAAA,EAAD,CAAMzD,UAAWD,KAAKP,MAAMW,QAAQyM,kBAAmBhJ,MAAI,EAACC,GAAI,IAG5D,kBAACJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAEX,kBAACC,GAAA,EAAD,KACK/D,KAAKP,MAAMpG,MAAMiB,aAAaiK,KAAI,SAAAwI,GAAI,OACnC,oCACI,4BAAKA,EAAKxM,MACV,+BACI,+BACI,4BACI,4BAAI,kBAACyM,GAAA,EAAD,KAAY,sCAAhB,KACA,4BAAI,kBAACA,GAAA,EAAD,KAAazT,IAAOwT,EAAKlL,YAAYpI,OAAO,iBAEpD,4BACI,wBAAIwT,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,uCAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAazT,IAAOwT,EAAKjL,WAAY,SAASrI,OAAO,MAArD,MAA+DF,IAAOwT,EAAKhL,SAAU,SAAStI,OAAO,SAE7G,4BACI,wBAAIwT,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,2CAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAY,iCACXD,EAAKrL,QAAQ,6BACbqL,EAAKpL,KAFM,QAEOoL,EAAKzU,MAFZ,OAEyByU,EAAKnL,aAGlD,4BACI,wBAAIqL,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,0CAC7B,4BAAI,kBAACA,GAAA,EAAD,SAAc,EAAKvN,MAAMtF,UAAU,IAAM,EAAKsF,MAAMtF,UAAU,GAAGoR,cAAjE,SAIhB,iCACA,kBAACyB,GAAA,EAAD,KAAaD,EAAKtL,iBAGzBmL,EAAcN,iBAAmBtM,KAAKP,MAAM7E,KAAK2F,MAAQ,kBAACmF,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8M,OAAQlM,QAAShB,KAAK2M,iBAA5D,UAOlE,kBAACjJ,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,CAAa9D,UAAWD,KAAKP,MAAMW,QAAQ+M,OACtCnN,KAAKP,MAAMpG,MAAMiB,aAAaiK,KAAI,SAAAwI,GAAI,OACnC,yBAAKrD,IAAKqD,EAAK/K,UAAW4H,IAAI,aAAa5D,MAAM,cAYjE,kBAACtC,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,wBAAI7D,UAAU,UAAd,2CACA,kBAAC0I,GAAA,EAAD,CAAO1I,UAAWD,KAAKP,MAAMW,QAAQwI,MACjC,kBAACM,GAAA,EAAD,CAAOjJ,UAAWD,KAAKP,MAAMW,QAAQgN,OACjC,kBAAChE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,aACA,kBAAC,GAAD,CAAiBC,MAAM,SAAvB,SACA,kBAAC,GAAD,CAAiBA,MAAM,SAAvB,uBAGR,kBAACC,GAAA,EAAD,KAEQvJ,KAAKP,MAAM4N,WAAWvT,kBAAkByK,KAAI,SAAC+I,GACzC,OAAQ,oCACJ,kBAACjE,GAAA,EAAD,CAAU5E,IAAK6I,EAAO3P,IAClB,kBAAC,GAAD,KAAkB2P,EAAO/M,MACzB,kBAAC,GAAD,CAAiB+I,MAAM,SAClB/P,IAAO+T,EAAOxL,WAAY,SAASrI,OAAO,MAD/C,MACyDF,IAAO+T,EAAOvL,SAAU,SAAStI,OAAO,OAEjG,kBAAC,GAAD,CAAiB6P,MAAM,SAAQ,kBAACiE,GAAA,EAAD,CAAMC,UAAU,SAC3CvJ,QAAQ,QACRjD,QAAS,WAAQ,EAAKyL,YAAYa,EAAO3P,MAFd,qBAEwC2P,EAAOlH,cAF/C,gBAanE,6BACA,6BACA,kBAAC1C,GAAA,EAAD,CAAMC,WAAS,EAACkH,QAAQ,UACnB+B,EAAcN,iBAAmBtM,KAAKP,MAAM7E,KAAK2F,MAAQ,kBAACmF,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8M,OAAQlM,QAAShB,KAAK0M,mBAA5D,0B,GAlJnDhM,aAkKZI,gBATS,SAACxI,GACrB,MAAO,CACHe,MAAOf,EAAMe,MACbc,UAAW7B,EAAM6B,UAAUA,UAC3BkT,WAAY/U,EAAMwC,UAClBF,KAAMtC,EAAMsC,QAILkG,CAAyBH,cA3LzB,SAAAC,GAAK,MAAK,CACrB6C,QAAS,CACLqC,OAAQ,sBACRsE,UAAW,QAEfxB,KAAM,CACF5C,MAAO,OACPyH,UAAW,QAEfL,MAAO,CACHM,SAAU,KAEdR,OAAQ,CACJrM,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,QAEZ+G,kBAAmB,CACfc,QAAS,eAEbR,MAAO,CACH5C,UAAW,aAsKqB5J,CAAmB6L,KC9LrDoB,G,8MAGNC,aAAe,WACb,EAAKpO,MAAMzD,QAAQpC,KAAK,e,EAI1BkU,gBAAkB,WAChB,EAAKrO,MAAMzD,QAAQpC,KAAK,c,EAI1BmU,gBAAkB,WACZ,EAAKtO,MAAM7E,KAAK+C,GAClB,EAAK8B,MAAMzD,QAAQpC,KAAnB,4BAA6C,EAAK6F,MAAM7E,KAAK+C,MAE7D,EAAK8B,MAAMC,SAAS,CAAElH,KAAM,yBAC5B,EAAKiH,MAAMzD,QAAQpC,KAAnB,W,EAKJoU,uBAAyB,WACrBlQ,KAAKC,KAAK,CACRuE,MAAO,aACPtE,KAAM,sLACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBE,kBAAmB,Q,0EAKb,IAAD,OACP,OACE,yBAAKzC,UAAU,gBACZD,KAAKP,MAAM9E,OAAOtC,cACjB,wBACE4H,UAAU,QACVC,KAAK,SAEJF,KAAKP,MAAM9E,OAAOtC,eAGU,IAAhC2H,KAAKP,MAAM7E,KAAKqT,aAAyBjO,KAAKgO,yBAC/C,yBAAK/N,UAAU,WACf,6BACE,gCACA,wBAAIA,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,6BACA,wBAAIxG,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,oDACA,kBAACf,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8N,QAASjK,QAAQ,YAC/CjD,QAAShB,KAAK6N,cADtB,qBAEA,kBAACnI,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8N,QAASjK,QAAQ,YAC/CjD,QAAShB,KAAK8N,iBADtB,yBAIF,6BACE,gCACA,wBAAI7N,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,oEACI,kBAACf,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8N,QAASjK,QAAQ,YACrDjD,QAAS,kBAAM,EAAK+M,oBADtB,2B,GA7DKrN,aAgFJC,iBA3FA,SAAAC,GAAK,MAAK,CACvBsN,QAAS,CACPrN,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,oBAEVW,QAAS,CACP5F,MAAO,cAoFIF,CAAoBG,aALX,SAAAxI,GAAK,MAAK,CAChCqC,OAAQrC,EAAMqC,OACdC,KAAMtC,EAAMsC,QAGqBkG,CAAyB8M,KCnF7CO,GARE,kBACf,6BACE,0C,UC4BEC,G,8MAOFC,kBAAoB,WAChB,EAAK5O,MAAMC,SAAS,CAChBlH,KAAM,4B,EAKd8V,sBAAwB,WACpB,EAAK7O,MAAMzD,QAAQpC,KAAK,e,EAI5B2U,oBAAsB,SAAC5Q,GACnBG,KAAKC,KAAK,CACNuE,MAAO,WACPtE,KAAM,sBACNxF,KAAM,UACNkK,kBAAmB,KACnBF,mBAAoB,YACrBG,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMC,SAAS,CAChBlH,KAAM,oBACNK,QAAS8E,Q,EAQzB6Q,oBAAsB,SAAC7Q,GACnBG,KAAKC,KAAK,CACNuE,MAAO,gBACPtE,KAAM,uCACNxF,KAAM,UACN+J,kBAAkB,EAElBE,kBAAmB,OACnBC,kBAAmB,KACnBF,mBAAoB,YACrBG,MAAK,SAACC,GACDA,EAAO7C,OACP,EAAKN,MAAMC,SAAS,CAChBlH,KAAM,oBACNK,QAAS8E,Q,qFAjDrBqC,KAAKqO,sB,+BAwDE,IAAD,OAEN,OACI,6BACI,wBAAIpO,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,wBAEA,kBAACf,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQqO,gBAAiBzN,QAAShB,KAAKsO,sBAAuBrK,QAAQ,aAApG,aAEA,kBAACP,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAEpB5D,KAAKP,MAAMlF,MAAM,GAAKyF,KAAKP,MAAMlF,MAAMgK,KAAI,SAAApK,GAAS,OAEjD,kBAACuU,GAAA,EAAD,CAAMzO,UAAW,EAAKR,MAAMW,QAAQuO,MAChC,kBAAC5K,GAAA,EAAD,CAAaU,IAAKtK,EAAUwD,IACxB,yCADJ,IACuBxD,EAAUoG,KAC7B,6BACA,2CAHJ,IAGyBpG,EAAUsH,YAC/B,6BACA,uCALJ,IAKqBtH,EAAUmR,aAC3B,6BACA,qCAPJ,IAOmBnR,EAAUoR,cACzB,6BACA,wCATJ,IASsBpR,EAAUuH,QAC5B,6BACA,oCAXJ,IAWkBvH,EAAUwH,KACxB,6BACA,sCAbJ,IAaoBxH,EAAU7B,MAC1B,6BACA,wCAfJ,IAesB6B,EAAUyH,SAC5B,6BACI,kBAAC8D,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQwO,cAAe3K,QAAQ,YACzDjD,QAAS,SAAC3H,GAAD,OAAW,EAAKkV,oBAAoBpU,EAAUwD,MAD3D,WAEA,kBAAC+H,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQyO,cAAe5K,QAAQ,YACzDjD,QAAS,SAAC3H,GAAD,OAAW,EAAKmV,oBAAoBrU,EAAUwD,MAD3D,gBAOZ,wBAAIsC,UAAU,kBAAd,yC,GAlGUS,aAiHnBC,iBA/IA,SAAAC,GAAK,MAAK,CACrB+N,KAAM,CACF3I,MAAO,QACPC,OAAQ,QACRH,OAAQ,uBACRuE,UAAW,UAEfuE,cAAe,CACX/N,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,uBAEZ+I,cAAe,CACX9I,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,uBAEZ2I,gBAAiB,CACb1I,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,wBAEZW,QAAS,CACLX,OAAQ,sBACRjF,MAAO,cAqHAF,CAAmBG,aAPV,SAAAoF,GACpB,MAAO,CACH3L,MAAO2L,EAAW3L,MAAMA,SAKEuG,CAA0BsN,KC3ItDxG,I,OAAkBjH,cAAW,SAAAC,GAAK,MAAK,CACzCiH,KAAM,CACFhC,gBAAiB,UACjBhF,MAAO,QACPiH,SAAU,IAEdC,KAAM,CACFD,SAAU,OAPMnH,CASpBqH,OAoBE8G,G,8MAaFC,qBAAuB,SAACpR,GACpB,EAAK8B,MAAMzD,QAAQpC,KAAnB,wBAAyC+D,K,EAI7CqR,kBAAoB,WAChB,IAAIrR,EAAK,EAAK8B,MAAM8B,MAAMC,OAAO7D,GACjC,EAAK8B,MAAMzD,QAAQpC,KAAnB,yBAA0C+D,K,EAI9CsR,yBAA2B,SAACtR,GACxB,EAAK8B,MAAMzD,QAAQpC,KAAnB,yBAA0C+D,K,EAI9CuR,gBAAkB,SAACvR,GACf,EAAK8B,MAAMzD,QAAQpC,KAAnB,qBAAsC+D,K,EAI1CwR,eAAiB,WACb,GAAI,EAAK1P,MAAM7E,KAAKqT,YAAa,CAC7B,IAAItQ,EAAK,EAAK8B,MAAM8B,MAAMC,OAAO7D,GACjC,EAAK8B,MAAMzD,QAAQpC,KAAnB,oBAAqC+D,SAErCG,KAAKC,KAAK,CACNuE,MAAO,QACPtE,KAAM,sLACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBE,kBAAmB,Q,EAM/B0M,YAAc,SAACzR,GAAQ,IAAD,uBAClB,YAAgB,EAAK8B,MAAMpF,WAA3B,+CAAuC,CAAC,IAA/BgV,EAA8B,QACnC,GAAGA,EAAI1R,KAAOA,EACV,OAAO0R,EAAI9O,MAHD,oF,qFAhDlBP,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,gBACNK,QAASmH,KAAKP,MAAM8B,MAAMC,OAAO7D,KAErCqC,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,qB,+BAmDJ,IAAD,OACDoU,EAAgB5M,KAAKP,MAAMtF,UAAU,IAAM,IAC/C,OACI,yBAAK8F,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAEP,wBAAI7D,UAAU,QAAQD,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGmS,gBACzE,6BAASrM,UAAU,WAClBD,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGuH,QAAQ,6BAC3D1B,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGwH,KAFpD,OAGC3B,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAG7B,MAHpD,OAIC0H,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGyH,UAC1C,6BAEVgL,EAAcnB,aAAe,yBAAKxL,UAAU,OAAf,oBACPD,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKoP,YAAYpP,KAAKP,MAAMtF,UAAU,GAAGsR,eAKlG,kBAAC/H,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACX,kBAACC,GAAA,EAAD,KACI,yBAAK2F,IAAK1J,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGwP,KAAMC,IAAI,iBAAiB5D,MAAM,WAM1G,+BACA,+BACA,4BACA,4BAAI,kBAACgH,GAAA,EAAD,KAAY,yCAAhB,KACA,4BAAI,kBAACA,GAAA,EAAD,KAAahN,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGmR,gBAGpE,4BACA,4BAAI,kBAAC0B,GAAA,EAAD,KAAY,uCAAhB,KACA,4BAAI,kBAACA,GAAA,EAAD,KAAahN,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGqR,iBAGpE,4BACA,4BAAI,kBAACwB,GAAA,EAAD,KAAY,uCAAhB,KACA,4BAAI,kBAACA,GAAA,EAAD,KAAahN,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGoR,mBAKpE,iCACCvL,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGsH,YAAY,6BAAK,6BACrE,kBAAC8L,GAAA,EAAD,CAAMtJ,QAAQ,QAAQ7C,KAAMpB,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAG8P,QAASnK,OAAO,SAASuB,IAAI,uBAA5G,mBAAwJ,6BAEvJuL,EAAcN,iBAAmBtM,KAAKP,MAAM7E,KAAK2F,MAAQ,kBAACmF,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8M,OAAQlM,QAAShB,KAAKgP,mBAA5D,gBAC1D,kBAACtL,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAChC,2CAEJ,kBAACnH,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAAC+E,GAAA,EAAD,CAAO1I,UAAWD,KAAKP,MAAMW,QAAQwI,MACjC,kBAACM,GAAA,EAAD,CAAOjJ,UAAWD,KAAKP,MAAMW,QAAQgN,OACjC,kBAAChE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,aACA,kBAAC,GAAD,CAAiBC,MAAM,SAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,SAAvB,cACA,kBAAC,GAAD,CAAiBA,MAAM,YAG/B,kBAACC,GAAA,EAAD,KAEQvJ,KAAKP,MAAMtF,UAAUoK,KAAI,SAACwI,GACtB,GAAIxT,IAAOwT,EAAKlL,YAAYpI,OAAO,YAAcF,MAASE,OAAO,YAAa,CAC1E,IAAIyT,EAAS,GACb,GAAIH,EAAKT,iBAAmB,EAAK7M,MAAM7E,KAAK2F,KAAM,CAC9C,IAAI+O,EAAI,mBAAevC,EAAKhO,UACxBwQ,EAAI,cAAUxC,EAAKhO,UACvBmO,EAAS,oCACL,kBAACxH,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQ8M,OAClClM,QAAS,kBAAM,EAAKiO,yBAAyBlC,EAAKhO,WAAW0F,IAAK6K,GADtE,kBADK,QAIT,kBAAC5J,GAAA,EAAD,CAAQjB,IAAK8K,EACLtP,UAAW,EAAKR,MAAMW,QAAQ8M,OAAQlM,QAAS,kBAAM,EAAKkO,gBAAgBnC,EAAKhO,YADvF,SAKJ,GAAIgO,EAAKhO,SAAU,CACf,IAAIuQ,EAAI,mBAAevC,EAAKpP,IAC5B,OACI,kBAAC0L,GAAA,EAAD,CAAU5E,IAAKsI,EAAKpP,IAChB,kBAAC,GAAD,KAAkBoP,EAAKyC,YACvB,kBAAC,GAAD,CAAiBlG,MAAM,SAAS/P,IAAOwT,EAAKlL,YAAYpI,OAAO,eAC/D,kBAAC,GAAD,CAAiB6P,MAAM,SAAS/P,IAAOwT,EAAKjL,WAAN,QAA0BrI,OAAO,OACvE,kBAAC,GAAD,CAAiB6P,MAAM,SAAQ,kBAAC5D,GAAA,EAAD,CAAQzF,UAAW,EAAKR,MAAMW,QAAQ8M,OAAQzI,IAAK6K,EAC9EtO,QAAS,WAAQ,EAAK+N,qBAAqBhC,EAAKhO,YADrB,aAA/B,SAC4FmO,IAIpG,OAAO,kBAAC7D,GAAA,EAAD,KAAU,kBAAC,GAAD,0BAGrB,OAAO,SAQnC,6BACA,kBAAC3F,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAC/B+B,EAAcN,iBAAmBtM,KAAKP,MAAM7E,KAAK2F,MAAQ,kBAACmF,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8M,OAAQlM,QAAShB,KAAKmP,gBAA5D,mB,GAxK/CzO,aAwLhBI,gBATS,SAACxI,GACrB,MAAO,CACH6B,UAAW7B,EAAM6B,UAAUA,UAC3BS,KAAMtC,EAAMsC,KACZP,WAAY/B,EAAM6B,UAAUE,cAKrByG,CAAyBH,cAzMzB,SAAAC,GAAK,MAAK,CACrB6C,QAAS,CACLqC,OAAQ,uBAEZ8C,KAAM,CACF5C,MAAO,OACPyH,UAAW,QAEfL,MAAO,CACHM,SAAU,KAEdR,OAAQ,CACJrM,MAAO,QACPgF,gBAAiB,cA4LelF,CAAmBmO,K,wlBCtN3D,IA2CMW,G,8MACJnX,MAAQ,CACNkD,SAAU,GACVC,SAAU,GACVgG,YAAa,GACbC,QAAS,GACTC,KAAM,GACNC,SAAU,GACVtJ,MAAO,GACPgT,aAAc,GACdC,cAAe,GACfC,cAAe,GACfvB,QAAS,GACTN,KAAM,GACN8B,YAAa,GACb5B,cAAe,OACf3H,cAAc,EACdD,WAAY,I,EAkBd/F,aAAe,SAAC7C,GACdA,EAAMmG,kBAEwC,IAA1C,EAAKlH,MAAM2R,QAAQyF,WAAW,SAChC,EAAK7P,SAAL,MACK,EAAKvH,MADV,CAEE2R,QAJU,WAIO0F,OAAO,GAAI,EAAKrX,MAAM2R,YAG3C2F,YAAW,WACL,EAAKtX,MAAMkD,UAAY,EAAKlD,MAAMmD,UAAY,EAAKnD,MAAMoJ,SAAW,EAAKpJ,MAAMqJ,MAAQ,EAAKrJ,MAAMsJ,UAAY,EAAKtJ,MAAMA,OAAS,EAAKA,MAAMiT,eAC5I,EAAKjT,MAAMkT,eAAiB,EAAKlT,MAAM2R,QAC1C,EAAKxK,MAAMC,SAAS,CAClBlH,KAAM,WACNK,QAAS,EAAKP,QAGhB,EAAKmH,MAAMC,SAAS,CAAElH,KAAM,+BAE7B,M,EAILkT,kBAAoB,SAAC9L,EAAcvG,GACjC,EAAKwG,SAAL,eACGD,EAAevG,EAAMyG,OAAOC,S,EAKjC6L,qBAAuB,SAACC,EAAeC,EAAezS,GAAW,IAAD,EAC9D,EAAKwG,SAAL,MACK,EAAKvH,OADV,mBAEGuT,EAAgBxS,EAAMyG,OAAOC,MAAMpC,IAFtC,cAGGmO,EAAgBzS,EAAMyG,OAAOC,MAAMQ,MAHtC,M,EAQF8B,iBAAmB,WACjBvE,KAAKC,KAAK,CACRuE,MAAO,gBACPtE,KAAM,gCACNxF,KAAM,UACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OAClBC,MAAK,SAACC,GACHA,EAAO7C,OACT,EAAKN,MAAMzD,QAAQ0O,a,EAMzBrH,mBAAqB,WACnB,EAAKxD,SAAS,CACZqC,cAAc,K,EAKlBoB,mBAAqB,WACnB,EAAKzD,SAAS,CACZqC,cAAc,K,EAKlBa,oBAAsB,SAAC1J,GACrB,IAAI2J,EAAO3J,EAAMyG,OAAOmD,MAAM,GAC9B,EAAKpD,SAAS,CACZoC,WAAYe,K,EAKhBE,iBAAmB,WACjB,IAAM3G,EAAO,IAAI4G,SACjB5G,EAAK6G,OAAO,OAAQ,EAAK9K,MAAM2J,YAC/B,EAAKxC,MAAMC,SAAS,CAClBlH,KAAM,eACNK,QAAS0D,IAEX,EAAKsD,SAAS,CACZqC,cAAc,K,qFApGhBlC,KAAKP,MAAMC,SAAS,CAAElH,KAAM,qB,yCAIX+K,GACbvD,KAAKP,MAAM1E,SAAWwI,EAAUxI,QAClCiF,KAAKH,SAAS,CACZ8J,KAAM3J,KAAKP,MAAM1E,OAAOyI,Q,+BAiGpB,IAAD,OACP,OACE,yBAAKvD,UAAWD,KAAKP,MAAMW,QAAQqD,SAChCzD,KAAKP,MAAM9E,OAAOlC,qBACjB,wBACEwH,UAAU,QACVC,KAAK,SAEJF,KAAKP,MAAM9E,OAAOlC,qBAGvB,wBAAIwH,UAAWD,KAAKP,MAAMW,QAAQqG,QAASzF,QAAS,kBAAM,EAAK6O,iBAA/D,gFACA,kBAACnM,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,2BAAOxD,QAAQ,qBACb,kBAAC0E,GAAA,EAAD,CAAWE,UAAQ,EACjBjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAC9BF,MAAM,oBACNd,QAAQ,WACRzL,KAAK,OACL+H,KAAK,OACLR,MAAOC,KAAK1H,MAAMkD,SAClBiF,SAAU,SAACpH,GAAD,OAAW,EAAKqS,kBAAkB,WAAYrS,OAG5D,6BACA,2BAAOiH,QAAQ,YAEb,kBAAC0E,GAAA,EAAD,CAAWE,UAAQ,EACjBjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAC9BF,MAAM,WACNd,QAAQ,WACRzL,KAAK,WACL+H,KAAK,WACLR,MAAOC,KAAK1H,MAAMmD,SAClBgF,SAAU,SAACpH,GAAD,OAAW,EAAKqS,kBAAkB,WAAYrS,OAG5D,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQqB,YAAajJ,KAAK,OAAOgI,YAAY,2BAA2BuE,MAAM,2BAA2Bd,QAAQ,WAAWkB,WAAS,EAACC,KAAK,IAAI3E,SAAU,SAACpH,GAAY,EAAKqS,kBAAkB,cAAerS,IAAU0G,MAAOC,KAAK1H,MAAMmJ,gBAG7Q,kBAACiC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,wBAAI7D,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,uBAGA,kBAACzB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOgI,YAAY,wBAAwBuE,MAAM,eACzGhF,MAAOC,KAAK1H,MAAMgT,aAAcrH,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKqS,kBAAkB,eAAgBrS,MACnH,6BACA,kBAAC2L,GAAA,EAAD,CAAWE,UAAQ,EAACjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOgI,YAAY,yBAAyBuE,MAAM,gBACnHhF,MAAOC,KAAK1H,MAAMiT,cAAetH,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKqS,kBAAkB,gBAAiBrS,MACrH,6BACC2G,KAAK1H,MAAM4J,aACV,yBAAKjC,UAAWD,KAAKP,MAAMW,QAAQ6E,YACjC,2BAAOzM,KAAK,OAAO+H,KAAK,OAAOE,SAAUT,KAAK+C,sBAC9C,4BAAQ9C,UAAWD,KAAKP,MAAMW,QAAQoF,WAAYxE,QAAShB,KAAKkD,kBAAhE,UACA,4BAAQjD,UAAWD,KAAKP,MAAMW,QAAQoF,WAAYxE,QAAShB,KAAKsD,oBAAhE,WAGF,oCACE,kBAAC0B,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQqF,cAAejN,KAAK,OAAOgI,YAAY,wBAAwBuE,MAAM,WAC5GhF,MAAOC,KAAK1H,MAAMqR,KAAM1F,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKqS,kBAAkB,OAAQrS,MACnG,kBAACqM,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ8B,aACpClB,QAAShB,KAAKqD,oBADhB,WAKJ,6BACA,kBAAC2B,GAAA,EAAD,CAAWE,UAAQ,EAACjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOgI,YAAY,2BAA2BuE,MAAM,UACrHhF,MAAOC,KAAK1H,MAAM2R,QAAShG,QAAQ,WAAWxD,SAAU,SAACpH,GAAY,EAAKqS,kBAAkB,UAAWrS,MACzG,6BACA,kBAAC2K,GAAA,EAAD,CAAaC,QAAQ,UACnB,kBAACC,GAAA,EAAD,qCAGA,kBAACC,GAAA,EAAD,CACElE,UAAWD,KAAKP,MAAMW,QAAQgE,YAAarE,MAAOC,KAAK1H,MAAMuR,cAC7DpJ,SAAU,SAACpH,GAAY,EAAKuS,qBAAqB,cAAe,gBAAiBvS,KACjF,kBAACgL,GAAA,EAAD,CAAUtE,MAAOC,KAAK1H,MAAMuR,eAC1B,4BAAK7J,KAAK1H,MAAMuR,gBAEjB7J,KAAKP,MAAMpF,WAAWkK,KAAI,SAAAuL,GAAQ,OACjC,kBAACzL,GAAA,EAAD,CAAUI,IAAKqL,EAASnS,GAAIoC,MAAO+P,GAChCA,EAASvP,WAIlB,8BAIF,kBAACmD,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,wBAAI7D,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,wBACA,kBAACzB,GAAA,EAAD,CAAWE,UAAQ,EAACjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,iBAAiBd,QAAQ,WACvGlE,MAAOC,KAAK1H,MAAMoJ,QAASjB,SAAU,SAACpH,GAAD,OAAW,EAAKqS,kBAAkB,UAAWrS,MACpF,6BACA,kBAAC2L,GAAA,EAAD,CAAWE,UAAQ,EAACjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,OAAOd,QAAQ,WAC7FlE,MAAOC,KAAK1H,MAAMqJ,KAAMlB,SAAU,SAACpH,GAAD,OAAW,EAAKqS,kBAAkB,OAAQrS,MAC9E,6BACA,kBAAC2L,GAAA,EAAD,CAAWE,UAAQ,EAACjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,QAAQd,QAAQ,WAC9FlE,MAAOC,KAAK1H,MAAMA,MAAOmI,SAAU,SAACpH,GAAD,OAAW,EAAKqS,kBAAkB,QAASrS,MAChF,6BACA,kBAAC2L,GAAA,EAAD,CAAWE,UAAQ,EAACjF,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOuM,MAAM,WAAWd,QAAQ,WACjGlE,MAAOC,KAAK1H,MAAMsJ,SAAUnB,SAAU,SAACpH,GAAD,OAAW,EAAKqS,kBAAkB,WAAYrS,MACtF,6BACA,kBAAC,KAAD,CAAY0W,aAAa,OAAOC,QAAQ,KAAKC,MAAO,CAAEC,SAAU,SAC9D1P,YAAY,qBACZT,MAAOC,KAAK1H,MAAMkT,cAClB/K,SAAU,SAAAV,GAAK,OAAI,EAAKF,SAAL,MAAmB,EAAKvH,MAAxB,CAA+BkT,cAAezL,UAGvE,kBAAC2D,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACb,kBAAC4B,GAAA,EAAD,CACElN,KAAK,SACLyH,UAAWD,KAAKP,MAAMW,QAAQuF,WAC9B3E,QAAS,WAAQ,EAAKvB,MAAMC,SAAS,CAAElH,KAAM,wBAH/C,QAOA,kBAACkN,GAAA,EAAD,CACEzF,UAAWD,KAAKP,MAAMW,QAAQwF,aAC9B5E,QAAShB,KAAK9D,aACdqE,KAAK,SACLR,MAAM,YAJR,mB,GArPeW,aA2QZC,iBAtTA,SAAAC,GAAK,MAAK,CACvB6F,QAAS,CACP5F,MAAO,WAET8E,WAAY,CACV9E,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,uBAEVF,aAAc,CACZG,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,wBAEVb,WAAY,CACVa,OAAQ,sBACRE,MAAO,SAETvE,YAAa,CACXqE,OAAQ,sBACRE,MAAO,UAET5B,YAAa,CACX4B,MAAO,SAETvC,QAAS,CACPqC,OAAQ,uBAEVL,cAAe,CACbK,OAAQ,sBACRE,MAAO,SAET9D,aAAc,CACZrB,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,sBAEVN,WAAY,CACVM,OAAQ,UA+QGnF,CAAmBG,aANV,SAAAxI,GAAK,MAAK,CAChCqC,OAAQrC,EAAMqC,OACdN,WAAY/B,EAAM6B,UAAUE,WAC5BU,OAAQzC,EAAMyC,OAAON,iBAGWqG,CAAyB2O,KC9P5C3O,gBAPS,SAACxI,GACvB,MAAO,CACLsC,KAAMtC,EAAMsC,KACZjC,UAAWL,EAAMK,aAINmI,EAjDQ,SAACrB,GAAU,IAW5B0Q,EANSC,EAIT3Q,EAJF+N,UACA5S,EAGE6E,EAHF7E,KACAjC,EAEE8G,EAFF9G,UACG0X,EAR2B,aAS5B5Q,EAT4B,kCA4BhC,OAZE0Q,EAHCvV,EAAK+C,GAGYyS,EACK,UAAdzX,EAGSiV,GAIA6B,GAKhB,kBAAC,KAAD,iBAGMY,EAHN,CAIE7C,UAAW2C,QCzCbvI,GAAkBjH,cAAW,SAAAC,GAAK,MAAK,CACzCiH,KAAM,CACFhC,gBAAiB,UACjBhF,MAAO,QACPiH,SAAU,IAEdC,KAAM,CACFD,SAAU,OAPMnH,CASpBqH,MAwBEsI,G,8MA0BF7D,YAAc,WACV,EAAKhN,MAAMzD,QAAQ0O,U,qFAxBnB1K,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,oBACNK,QAASmH,KAAKP,MAAM8B,MAAMC,OAAO7D,KAEjCqC,KAAKP,MAAM8Q,WACXvQ,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,0BACNK,QAAS,CAAE8E,GAAIqC,KAAKP,MAAM8B,MAAMC,OAAO7D,GAAImB,MAAOkB,KAAKP,MAAM8Q,UAAUtT,kB,yCAMhEsG,IACVA,EAAUgN,WAAavQ,KAAKP,MAAM8Q,WACnCvQ,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,0BACNK,QAAS,CAAE8E,GAAIqC,KAAKP,MAAM8B,MAAMC,OAAO7D,GAAImB,MAAOkB,KAAKP,MAAM8Q,UAAUtT,kB,+BAWzE,IACEmD,EAAYJ,KAAKP,MAAjBW,QACR,OACI,yBAAKH,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAE5B7K,KAAKP,MAAMpG,MAAMkL,KAAI,SAAChE,GAClB,OAAO,wBAAIkE,IAAKlE,EAAK5C,IAAd,4BAA4C4C,EAAKA,UAIpE,kBAACmD,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAAC+E,GAAA,EAAD,CAAO1I,UAAWG,EAAQwI,MACtB,kBAACM,GAAA,EAAD,CAAOjJ,UAAWG,EAAQgN,OACtB,kBAAChE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,aACA,kBAAC,GAAD,CAAiBC,MAAM,SAAvB,kBACA,kBAAC,GAAD,CAAiBA,MAAM,SAAvB,YACA,kBAAC,GAAD,CAAiBA,MAAM,SAAvB,yBAGR,kBAACC,GAAA,EAAD,KAEQvJ,KAAKP,MAAM3E,UAAUyJ,KAAI,SAACiM,GACtB,OAAO,oCACH,kBAACnH,GAAA,EAAD,CAAU5E,IAAK+L,EAAI7S,IACf,kBAAC,GAAD,KAAkB6S,EAAIC,WACtB,kBAAC,GAAD,CAAiBnH,MAAM,SAASkH,EAAIjQ,KAApC,IAA2ChH,IAAOiX,EAAI1O,WAAY,SAASrI,OAAO,MAAlF,IAA0FF,IAAOiX,EAAIzO,SAAU,SAAStI,OAAO,OAC/H,kBAAC,GAAD,CAAiB6P,MAAM,SAASkH,EAAIE,UACpC,kBAAC,GAAD,CAAiBpH,MAAM,SAAvB,UAAuCkH,EAAIG,MAA3C,WAA0DH,EAAII,uBAS9F,6BACA,kBAAClN,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGiH,QAAQ,UAChC,kBAACnF,GAAA,EAAD,CAAQzF,UAAWG,EAAQ8M,OAAQlM,QAAShB,KAAKyM,aAAjD,c,GAxEQ/L,aAwFbI,gBARS,SAAAxI,GACpB,MAAO,CACHwC,UAAWxC,EAAMwC,UAAUf,cAC3BV,MAAOf,EAAMe,MAAMiB,aACnBiW,UAAWjY,EAAM6B,UAAUA,UAAU,MAI9B2G,CAAyBH,cA7GzB,SAAAC,GAAK,MAAK,CACrB6C,QAAS,CACLqC,OAAQ,uBAEZ8C,KAAM,CACF5C,MAAO,OACPyH,UAAW,QAEfL,MAAO,CACHM,SAAU,KAEdR,OAAQ,CACJrM,MAAO,QACPgF,gBAAiB,WAErBgL,aAAc,CACVhG,QAAS,aA6FuBlK,CAAmB2P,K,6jBCzH3D,IAsBMQ,G,8MAEFxY,MAAQ,CACJiI,KAAM,GACNvB,QAAS,EAAKS,MAAMsR,OACpBjP,WAAY,GACZC,SAAU,GACV2O,SAAU,GACVC,MAAO,GACPC,aAAc,GACdlP,QAAS,GACTC,KAAM,GACNrJ,MAAO,GACPsJ,SAAU,I,EAKdO,aAAe,SAACvC,EAAcvG,GAAW,IAAD,EACpC,EAAKwG,SAAL,MACO,EAAKvH,OADZ,mBAEKsH,EAAevG,EAAMyG,OAAOC,OAFjC,2BAGgB,EAAKN,MAAMS,KAAK4B,YAHhC,yBAIc,EAAKrC,MAAMS,KAAK6B,UAJ9B,M,EASJiP,mBAAqB,SAACrT,GAClB,EAAK8B,MAAMC,SAAS,CAChBlH,KAAM,iBACNK,QAAS,EAAKP,QAGlB,EAAKuH,SAAU,CACXU,KAAM,GACNvB,QAAS,EAAKS,MAAMsR,OACpBjP,WAAY,EAAKrC,MAAMS,KAAK4B,WAC5BC,SAAU,EAAKtC,MAAMS,KAAK6B,SAC1B2O,SAAU,GACVC,MAAO,GACPC,aAAc,GACdlP,QAAS,GACTC,KAAM,GACNrJ,MAAO,GACPsJ,SAAU,KAEd9D,KAAKC,KAAK,CACNuE,MAAO,WACPtE,KAAK,0HACLxF,KAAM,UACNkK,kBAAmB,KACnBF,mBAAoB,a,0EAKjB,IAAD,OAEN,OAEI,6BACI,wBAAIxB,QAAS,kBAAI,EAAKiQ,mBAAtB,eACA,kBAACvC,GAAA,EAAD,CAAMzO,UAAWD,KAAKP,MAAMW,QAAQuO,MACpC,kBAAC5K,GAAA,EAAD,KACI,kBAACiB,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOgI,YAAY,YAAYyD,QAAQ,WAAWc,MAAM,YACtGhF,MAAOC,KAAK1H,MAAMiI,KAAME,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,MACnF,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOgI,YAAY,QAAQyD,QAAQ,WAAWc,MAAM,QAC1GhF,MAAOC,KAAK1H,MAAMqY,MAAOlQ,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,QAAS9I,MAC7E,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOgI,YAAY,UAAUyD,QAAQ,WAAWc,MAAM,UAC5GhF,MAAOC,KAAK1H,MAAMoJ,QAASjB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,UAAW9I,MACjF,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ6E,WAAYzM,KAAK,OAAOgI,YAAY,OAAOyD,QAAQ,WAAWc,MAAM,OACzGhF,MAAOC,KAAK1H,MAAMqJ,KAAMlB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,OAAQ9I,MAC3E,6BACA,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ8Q,cAAe1Y,KAAK,OAAOgI,YAAY,QAAQyD,QAAQ,WAAWc,MAAM,QAC7GhF,MAAOC,KAAK1H,MAAMA,MAAOmI,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,QAAS9I,MAC7E,kBAAC2L,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ8Q,cAAe1Y,KAAK,OAAOgI,YAAY,UAAUyD,QAAQ,WAAWc,MAAM,WAC/GhF,MAAOC,KAAK1H,MAAMsJ,SAAUnB,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,MAInF,kBAAC,KAAD,CAAY0W,cAAY,EAACC,QAAQ,KAAKC,MAAO,CAACC,SAAU,SACpD1P,YAAY,qBACZT,MAAOC,KAAK1H,MAAMsY,aAClBnQ,SAAU,SAAAV,GAAK,OAAI,EAAKF,SAAL,MAAmB,EAAKvH,MAAxB,CAA+BsY,aAAc7Q,QACpE,6BACA,kBAACiF,GAAA,EAAD,CAAW/E,UAAWD,KAAKP,MAAMW,QAAQ+Q,aAAc3Y,KAAK,OACxDgI,YAAY,mFACZyD,QAAQ,WAAWc,MAAM,sBAAsBI,WAAS,EAACC,KAAM,EAC/DrF,MAAOC,KAAK1H,MAAMoY,SAAUjQ,SAAU,SAACpH,GAAD,OAAW,EAAK8I,aAAa,WAAY9I,MAAU,6BACzF,wBAAI2H,QAAS,kBAAM,EAAKoQ,mBAAxB,4BACJ,kBAAC1L,GAAA,EAAD,CAAQzB,QAAQ,YAAYhE,UAAWD,KAAKP,MAAMW,QAAQiR,WAClDrQ,QAAShB,KAAKgR,oBADtB,mB,GA5FKtQ,aA8GVC,iBApIA,SAAAC,GAAK,MAAK,CACrBqE,WAAY,CACRa,OAAQ,sBACRE,MAAO,SAEXmL,aAAc,CACVrL,OAAQ,sBACRE,MAAO,SAEXqL,WAAY,CACRxQ,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,uBAEZoL,cAAe,CACXpL,OAAQ,sBAEZ6I,KAAM,CACF3I,MAAO,YAkHArF,CAAoBG,aAPX,SAAAoF,GACpB,MAAO,CACHhG,KAAMgG,EAAWpL,UAAUb,gBAKA6G,CAA0BgQ,KC3HvDQ,G,iMAEEtR,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,oBACNK,QAASmH,KAAKP,MAAMS,KAAKnB,a,+BAS7B,OACI,oCAEY,yBAAKkB,UAAWD,KAAKP,MAAMW,QAAQwM,eAC/B,yBAAK3M,UAAWD,KAAKP,MAAMW,QAAQuJ,KAAMD,IAAK1J,KAAKP,MAAMtF,UAAU,GAAGwP,KAAMC,IAAI,mBACxF,kBAACoD,GAAA,EAAD,KACKhN,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGmS,eAAe,6BAClEtM,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGuH,QAAQ,6BAC3D1B,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGwH,KAHxD,IAIK3B,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAG7B,MACnD0H,KAAKP,MAAMtF,UAAU,IAAM6F,KAAKP,MAAMtF,UAAU,GAAGyH,SAAS,+BAEvD,kC,GAzBClB,aA0ChBC,iBAtDA,SAAAC,GAAK,MAAK,CACrBgM,cAAe,CACXe,QAAS,cACTrD,QAAS,QAEbX,KAAM,CACF1D,OAAQ,OACRH,OAAQ,WA+CDnF,CAAoBG,aARX,SAAAoF,GACpB,MAAO,CACH/L,UAAW+L,EAAW/L,UAAUA,UAChC+F,KAAMgG,EAAWpL,UAAUb,aAC3BW,KAAMsL,EAAWtL,QAIUkG,CAA0BwQ,KCrBvDC,G,8MAUFlP,iBAAmB,WACfvE,KAAKC,KAAK,CACNuE,MAAO,gBACPtE,KAAM,uCACNxF,KAAM,WACN+J,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,OACpBC,MAAK,SAACC,GACDA,EAAO7C,QACP,EAAKN,MAAMC,SAAS,CAChBlH,KAAM,sBAEV,EAAKiH,MAAMzD,QAAQ0O,c,EAM/BnE,iBAAmB,WACf,EAAK9G,MAAMC,SAAS,CAChBlH,KAAM,mBACNK,QAAS,EAAK4G,MAAM+R,WAExB,EAAK/R,MAAMC,SAAS,CAChBlH,KAAM,sBAEV,IAAImF,EAAK,EAAK8B,MAAMS,KAAKnB,SACzB,EAAKU,MAAMzD,QAAQpC,KAAnB,wBAAyC+D,K,qFApCzCqC,KAAKP,MAAMC,SAAS,CAChBlH,KAAM,8BACNK,QAASmH,KAAKP,MAAM8B,MAAMC,OAAO7D,O,+BAqC/B,IAAD,OAEL,OAEI,yBAAKsC,UAAWD,KAAKP,MAAMW,QAAQqD,SAC/B,wBAAIxD,UAAWD,KAAKP,MAAMW,QAAQqG,SAAlC,sBACA,kBAAC/C,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACI,kBAAC,GAAD,QAIR,kBAACL,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KAEK/D,KAAKP,MAAMpG,MAAMkL,KAAI,SAACV,GACnB,IAAI4N,EAAYlY,IAAOsK,EAAKhC,YAAYpI,OAAO,kBAC3CH,EAAUC,IAAOsK,EAAKrK,UAAUC,OAAO,kBAC3C,OACI,oCACA,4BAAKoK,EAAKtD,MACN,+BACI,+BACI,4BACI,wBAAI0M,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,sCAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAayE,EAAb,MAA2BnY,KAEnC,4BACI,wBAAI2T,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,0CAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAanJ,EAAKnC,QAAQ,6BACzBmC,EAAKlC,KADN,QACmBkC,EAAKvL,MADxB,OACqCuL,EAAKjC,cAI1D,iCACA,kBAACoL,GAAA,EAAD,KAAanJ,EAAKpC,kBAKlC,kBAACsC,GAAA,EAAD,KACI,6BACI,+BACI,+BACI,4BACI,wBAAIkJ,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,sCAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAahN,KAAKP,MAAMS,KAAKK,KAA7B,KAAqCP,KAAKP,MAAMS,KAAKkG,cAArD,yBAER,4BACI,wBAAI6G,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,6CAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAahN,KAAKP,MAAMS,KAAKuB,eAErC,4BACI,wBAAIwL,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,sCAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAazT,IAAOyG,KAAKP,MAAMS,KAAKmG,MAAM5M,OAAO,kBAAjD,OAER,4BACI,wBAAIwT,OAAO,OAAM,kBAACD,GAAA,EAAD,KAAY,sCAC7B,4BAAI,kBAACA,GAAA,EAAD,KAAazT,IAAOyG,KAAKP,MAAMS,KAAK4B,WAAY,SAASrI,OAAO,MAAhE,MAA0EF,IAAOyG,KAAKP,MAAMS,KAAK6B,SAAU,SAAStI,OAAO,MAA3H,YAS5B,kBAACiK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC,GAAD,CAAYiN,OAAQ/Q,KAAKP,MAAM8B,MAAMC,OAAO7D,MAGhD,kBAAC+F,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACK/D,KAAKP,MAAM+R,SAASE,OAAS,EAC1B,oCACI,+GAEC1R,KAAKP,MAAM+R,SAASjN,KAAI,SAACzJ,GAGtB,OACI,kBAACiJ,GAAA,EAAD,CAAa9D,UAAW,EAAKR,MAAMW,QAAQuR,aACvC,kBAAC3E,GAAA,EAAD,KAAY,oCAAZ,IAA0BlS,EAAUyF,KAApC,KAAuD,6BACvD,kBAACyM,GAAA,EAAD,KAAY,qCAAZ,IAA2B4E,aAAkB9W,EAAU8V,cAAvD,KAAmF,6BACnF,kBAAC5D,GAAA,EAAD,KAAY,yCAAZ,IAA+BzT,IAAOuB,EAAUuL,MAAM5M,OAAO,kBAA7D,SAAsFF,IAAOuB,EAAUgH,WAAY,SAASrI,OAAO,MAAnI,MAA6IF,IAAOuB,EAAUiH,SAAU,SAAStI,OAAO,OAAmB,kCAI9M,iCAIzB,kBAACiK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACC,GAAA,EAAD,KACI,kBAAC2B,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQuF,WAAY1B,QAAQ,YACtDjD,QAAShB,KAAKqC,kBADlB,QAEA,kBAACqD,GAAA,EAAD,CAAQzF,UAAWD,KAAKP,MAAMW,QAAQ2G,WAAY9C,QAAQ,YACtDjD,QAAShB,KAAKuG,kBADlB,gB,GA3IE7F,aAkKfC,iBA3LA,SAAAC,GAAK,MAAK,CACrB6C,QAAS,CACLqC,OAAQ,uBAEZW,QAAS,CACL5F,MAAO,WAEX8E,WAAY,CACRI,MAAO,OACPlF,MAAO,QACPgF,gBAAiB,WAErBkB,WAAY,CACRhB,MAAO,QACPlF,MAAO,QACPgF,gBAAiB,UACjBC,OAAQ,qBAEZ6L,YAAa,CACT7L,OAAQ,WAwKDnF,CAAmBG,aAbV,SAAAoF,GACpB,MAAO,CACH7M,MAAO6M,EAAW7M,MAAMiB,aACxBM,KAAMsL,EAAWtL,KACjBsF,KAAMgG,EAAWpL,UAAUb,aAC3B4X,MAAO3L,EAAWpL,UAAUd,gBAC5BwX,SAAUtL,EAAWpL,UAAUZ,mBAC/BC,UAAW+L,EAAW/L,UAAUA,aAMN2G,CAAyByQ,KC3KrDO,G,iMAEF9R,KAAKP,MAAMC,SAAS,CAAElH,KAAM,iB,+BAI5B,OACE,kBAAC,KAAD,KACE,6BACE,kBAAC,GAAD,MACA,kBAAC,KAAD,KAEE,kBAAC,KAAD,CAAUuZ,OAAK,EAACC,KAAK,IAAI/Q,GAAG,UAI5B,kBAAC,KAAD,CACE8Q,OAAK,EACLxK,KAAK,YACLiG,UAAWxG,KAGb,kBAAC,KAAD,CACE+K,OAAK,EACLxK,KAAK,cACLiG,UAAW+D,KAGb,kBAAC,GAAD,CACEQ,OAAK,EACLxK,KAAK,gBACLiG,UAAWlM,KAEb,kBAAC,GAAD,CACEyQ,OAAK,EACLxK,KAAK,qBACLiG,UAAWrH,KAGb,kBAAC,GAAD,CACE4L,OAAK,EACLxK,KAAK,iBACLiG,UAAWhD,KAGb,kBAAC,GAAD,CACEuH,OAAK,EACLxK,KAAK,qBACLiG,UAAWnC,KAGb,kBAAC,KAAD,CACE0G,OAAK,EACLxK,KAAK,aACLiG,UAAWvF,KAGb,kBAAC,GAAD,CACE8J,OAAK,EACLxK,KAAK,cACLiG,UAAWY,KAGb,kBAAC,GAAD,CACE2D,OAAK,EACLxK,KAAK,qBACLiG,UAAW8C,KAIb,kBAAC,KAAD,CACEyB,OAAK,EACLxK,KAAK,wBACLiG,UAAWsB,KAGb,kBAAC,KAAD,CACEiD,OAAK,EACLxK,KAAK,oBACLiG,UAAWhB,KAMb,kBAAC,GAAD,CACEuF,OAAK,EACLxK,KAAK,QACLiG,UAAWI,KAIb,kBAAC,GAAD,CACEmE,OAAK,EACLxK,KAAK,QACLiG,UAAWW,KAGb,kBAAC,KAAD,CAAO8D,OAAQ,kBAAM,uCAEvB,kBAAC,GAAD,Y,GApGQvR,aA6GHI,iBAAUgR,IC/HnBI,GAAiBC,cAKjBC,GAEJ,CAACF,IAEG9K,GAAQiL,YAGZ3X,EAEA4X,IAAe,WAAf,EAAmBF,KAKrBF,GAAeK,IAAIpT,IAEnBqT,IAASP,OACP,kBAAC,IAAD,CAAU7K,MAAOA,IACf,kBAAC,GAAD,OAEFqL,SAASC,eAAe,iB","file":"static/js/main.17bc3602.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/woodbury-CF-logo.e3925a90.png\";","import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Oops! Please make sure all required fields are filled out!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\nconst formMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'DATE_ERROR':\n      return 'Oops! You entered an invalid start/end date!';\n    case 'REQUIRED_ERROR':\n      return 'Oops! Please make sure all required fields are filled out!';\n    default:\n      return '';\n  }\n}\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n  formMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","\nconst nonprofitList = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_DIRECTORY':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default nonprofitList;","import moment from 'moment';\nimport { combineReducers } from 'redux';\n\nconst calendar = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_CALENDAR':\n      let calendar = { lastMonth: [], lastWeek: [], currentWeek: [], nextWeek: [], future: [] }\n      for (const event of action.payload) {\n        let endDate = moment(event.end_date).format('YYYYMMDD');\n        let now = moment().format('YYYYMMDD');\n        if (endDate < moment().subtract(8, 'days').format('YYYYMMDD')){\n          calendar.lastMonth.push(event);\n        } else if (endDate < now && endDate >= moment().subtract(7, 'days').format('YYYYMMDD')) {\n          calendar.lastWeek.push(event);\n        } else if (endDate >= now && endDate < moment().add(7, 'days').format('YYYYMMDD')) {\n          calendar.currentWeek.push(event);\n        } else if (endDate > moment().add(7, 'days').format('YYYYMMDD') && endDate < moment().add(13, 'days').format('YYYYMMDD')) {\n          calendar.nextWeek.push(event);\n        } else {\n          calendar.future.push(event);\n        }\n      }\n      return calendar;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  calendar,\n});","import { combineReducers } from 'redux';\n\nconst volunteerRoleList = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VOLUNTEER_ROLES':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst volunteerList = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SPECIFIC_VOLUNTEERS':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nconst specificRole = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SPECIFIC_ROLES' :\n      return action.payload;\n    default:\n      return state\n  }\n}\n\nconst previousSignUps = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_SIGNUP':\n      return [...state, action.payload];\n    case 'CLEAR_SIGNUP_LIST':\n      return [];\n    default:\n      return state;\n  }\n}\n\nconst signedUpVolunteers = (state = [], action) => {\n  switch(action.type) {\n    case 'SAVE_VOLUNTEER' :\n      return [...state, action.payload];\n    case 'CLEAR_VOLUNTEER' :\n      return []\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  volunteerRoleList,\n  volunteerList,\n  previousSignUps,\n  specificRole,\n  // savedVolunteers\n  signedUpVolunteers,\n});","import { combineReducers } from \"redux\";\n\nconst nonprofit = ((state = [], action) => {\n    switch (action.type) {\n        case 'SET_SPECIFIC_NONPROFIT' :\n            return action.payload;\n        case 'SET_EDITS_TO_NONPROFIT':\n            return [{\n                ...state[0],\n                ...action.payload\n            }]\n            \n        default :\n            return state;\n    }\n});\n\nconst nonprofitPastEvents = ((state = [], action) => {\n    switch (action.type) {\n        case 'SET_PAST_EVENTS':\n            return action.payload;\n        default:\n            return state;\n    }\n});\n\nconst categories = ((state = [], action) => {\n    switch (action.type) {\n        case 'SET_CATEGORIES':\n            return action.payload;\n        default:\n            return state;\n    }\n})\n\nexport default combineReducers({\n    nonprofit,\n    nonprofitPastEvents,\n    categories,\n});\n","import { combineReducers } from 'redux';\n\nconst eventDetails = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_EVENT_DETAILS':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  eventDetails,\n});","import { combineReducers } from \"redux\";\n\nconst admin = (state = [], action) => {\n    switch(action.type) {\n        case 'SET_REQUESTS' :\n            return action.payload;\n        default :\n            return state;\n    }\n}\n\nconst adminDirectory = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ADMIN_DIRECTORY':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    admin,\n    adminDirectory,\n});","import { combineReducers } from \"redux\";\n\nconst uploadedImage = ((state=[], action) => {\n    switch(action.type) {\n        case 'SET_UPLOADED_FILE' :\n            return action.payload\n        default :\n            return state;\n    }\n})\n\nexport default combineReducers({\n    uploadedImage,\n})","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport directory from './directoryReducer';\nimport calendar from './calendarReducer';\nimport volunteer from './volunteerReducer';\nimport nonprofit from './nonprofitReducer';\nimport event from './eventReducer';\nimport admin from './adminReducer';\nimport upload from './uploadReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  directory, // will contain list of all approved nonprofits\n  calendar, // will contain list of future events\n  volunteer, // will contain all volunteer roles for a specific event, volunteer lists for events, \n  //and volunteers who have signed up for a specific event\n  nonprofit, //will contain the specific nonprofits information\n  event, // will contain details for a specific event as well as new events and editing events\n  admin, //will contain the requests for approving or denying a new nonprofit and a list of nonprofits\n  upload, //will contain the uploaded images for an event or nonprofit and sets state in client with URL\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    let loginCredentials = {username: action.payload.username, password: action.payload.password};\n    console.log(loginCredentials);\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', loginCredentials, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n    yield action.history.push('/home'); \n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//worker saga: requests all approved nonprofits from the database and sends the list to the directory reducer\nfunction* getDirectory() {\n  try {\n    let response = yield axios.get('/api/directory');\n    yield put({ type: 'SET_DIRECTORY', payload: response.data});\n  } catch (error) {\n    console.log('error in getDirectory', error);\n  }\n}\n\nfunction* search(action) {\n  try {\n    let response = yield axios.get(`/api/directory?q=${action.payload}`);\n    yield put({\n      type: 'SET_DIRECTORY',\n      payload: response.data\n    });\n    yield put({ type: 'SET_ADMIN_DIRECTORY', payload: response.data });\n  } catch (error) {\n    console.log('error in search request', error);\n  }\n}\n\n//root saga\nfunction* directorySaga(){\n  yield takeLatest('GET_DIRECTORY', getDirectory);\n  yield takeLatest('SEARCH', search);\n}\n\nexport default directorySaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//gets a specific nonprofit from the database\nfunction* getNonprofit(action) {\n    try {\n        let response = yield axios.get(`/api/nonprofit/${action.payload}`);\n        yield put({\n            type: 'SET_SPECIFIC_NONPROFIT',\n            payload: response.data\n        });\n    }catch(error) {\n        console.log('error in getNonprofit', error)\n    }\n}\n\n//gets the past events for a specific nonprofit\nfunction* getPastEvents(action) {\n    try {\n        let response = yield axios.get(`/api/event/nonprofit/${action.payload}`)\n        yield put ({\n            type: 'SET_PAST_EVENTS',\n            payload: response.data\n        })\n    } catch (error) {\n        console.log('error on getting past events', error)\n    }\n}\n\n//worker saga: requests editable information for a specific nonprofit\nfunction* getNonprofitEdit(action) {\n    try {\n        let response = yield axios.get(`/api/nonprofit/edit/${action.payload}`);\n        yield put({ type: 'SET_SPECIFIC_NONPROFIT', payload: response.data });\n    } catch (error) {\n        console.log('error in getNonprofitEdit', error);\n    }\n}\n\n//edits nonprofits information for specific nonprofit\nfunction* editNonprofit(action) {\n    try {\n        yield axios.put(`/api/nonprofit/editNonprofit`, action.payload)\n        yield put ({\n            payload: action.payload.nonprofit_id,\n            type: 'GET_NONPROFIT',\n        })\n    }\n    catch (error) {\n        console.log('error in editNonprofit', error)\n    }\n}\n\n//worker saga: requests list of all categories\nfunction* getCategories () {\n    try {\n        let response = yield axios.get('/api/nonprofit/all/categories');\n        yield put({ type: 'SET_CATEGORIES', payload: response.data });\n    } catch (error) {\n        console.log('error in getCategories', error);\n    }\n}\n\n//root saga\nfunction* nonprofitSaga() {\n    yield takeLatest('GET_NONPROFIT', getNonprofit);\n    yield takeLatest('GET_PAST_EVENTS', getPastEvents);\n    yield takeLatest('GET_NONPROFIT_EDIT', getNonprofitEdit);\n    yield takeLatest('EDIT_NONPROFIT', editNonprofit);\n    yield takeLatest('GET_CATEGORIES', getCategories);\n}\n\nexport default nonprofitSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//worker saga: requests all events that are no older than 30 days\nfunction* getCalendar() {\n  try {\n    let response = yield axios.get('/api/event/calendar');\n    yield put({ type: 'SET_CALENDAR', payload: response.data });\n  } catch (error) {\n    console.log('error in get calander', error)\n  }\n}\n\n//root saga\nfunction* calendarSaga() {\n  yield takeLatest('GET_CALENDAR', getCalendar);\n}\n\nexport default calendarSaga;","import { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\n//worker Saga: requests all details on a specific event\nfunction* getEventDetails (action){\n  try {\n    let response = yield axios.get(`/api/event/${action.payload}`);\n    yield put ({ type: 'SET_EVENT_DETAILS', payload: response.data });\n    yield put({ type: 'GET_NONPROFIT', payload: response.data[0].non_profit_id });\n  } catch (error) {\n    console.log('error in getEventDetails', error);\n  }\n}\n\n//adds a new event for a specific nonprofit\nfunction* addEvent(action) {\n  try{\n    let response = yield axios.post(`/api/event/addEvent`, action.payload);\n    if (action.payload.volunteers_needed === true) {\n      yield action.history.push(`/addvolunteers/${response.data[0].id}`)\n    }\n    yield put({\n      type: 'GET_EVENT_DETAILS',\n      payload: response.data[0].id\n    })\n  }\n  catch(error) {\n    console.log('error in addEvent', error);\n  }\n}\n\n//updates a past event with new information for a \"new\" event\nfunction* addPastEvent(action) {\n  try {\n    let response = yield axios.post('/api/event/addEvent', action.payload);\n    if(action.payload.volunteers_needed === true) {\n      yield action.history.push(`/addvolunteers/${response.data[0].id}`);\n    } else {\n      yield action.history.push(`/eventDetails/${response.data[0].id}`);\n    }\n    yield put ({\n      type: 'GET_EVENT_DETAILS',\n      payload: response.data[0].id\n    });\n    yield put({\n      type: 'GET_VOLUNTEER_ROLES',\n      payload: action.payload.past_event_id\n    });\n    yield axios.delete(`/api/event/${action.payload.past_event_id}/${action.payload.non_profit_id}`);\n  } catch (error) {\n    console.log('error in addPastEvent saga');\n  }\n}\n\n//edits event information\nfunction* editEvent(action) {\n  try{\n    yield axios.put(`/api/event/editEvent`, action.payload)\n    Swal.fire({\n      type: 'success',\n      text: 'Your event has been updated!'\n    })\n  }\n  catch(error) {\n    console.log('error in editEvent', error)\n    Swal.fire({\n      type: 'error',\n      text: 'Your event could not be updated at this time, please try again later!'\n    })\n  }\n} \n\n\n\n//root saga\nfunction* eventSaga(){\n  yield takeEvery('GET_EVENT_DETAILS', getEventDetails);\n  yield takeLatest('ADD_EVENT', addEvent);\n  yield takeLatest('EDIT_EVENT', editEvent);\n  yield takeLatest('ADD_PAST_EVENT', addPastEvent);\n}\n\nexport default eventSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// approves nonprofits\nfunction* approveNonprofit (action) {\n    try {\n        yield axios.put(`/api/admin/approve/${action.payload}`);\n        yield put({\n            type: 'GET_NONPROFIT_REQUESTS'\n        });\n    } catch (error) {\n        console.log('error in approveNonprofit PUT', error)\n    }\n}\n\n//deletes declined nonprofit requests\nfunction* declineNonprofit(action) {\n    try {\n        yield axios.delete(`/api/admin/decline/${action.payload}`);\n        yield put({\n            type: 'GET_NONPROFIT_REQUESTS'\n        });\n        yield put({ type: 'GET_ADMIN_DIRECTORY', });\n    }\n    catch(error) {\n        console.log('error in declineNonprofit', error)\n    }\n}\n\n//gets the nonprofit requests that are still pending\nfunction* getNonprofitRequests() {\n    try {\n        let response = yield axios.get(`/api/admin/requests`);\n        yield put({\n            type: 'SET_REQUESTS',\n            payload: response.data\n        })\n    }\n    catch(error) {\n        console.log('error on getNonprofits', error)\n    }\n}\n\n//worker saga: requests all nonprofits from database, ordered by when they were last updated\nfunction* getAdminDirectory() {\n    try {\n        let response = yield axios.get('/api/admin/directory');\n        yield put({ type: 'SET_ADMIN_DIRECTORY', payload: response.data })\n    } catch (error) {\n        console.log('error in getNonprofitDirectory', error);\n    }\n}\n\n//root saga\nfunction* adminSaga () {\n    yield takeLatest('APPROVE_NONPROFIT', approveNonprofit);\n    yield takeLatest('DECLINE_NONPROFIT', declineNonprofit);\n    yield takeLatest('GET_NONPROFIT_REQUESTS', getNonprofitRequests);\n    yield takeLatest('GET_ADMIN_DIRECTORY', getAdminDirectory);\n}\n\nexport default adminSaga;","import { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//worker saga: requests all volunteer roles for this specific event.\nfunction* getVolunteerRoles(action) {\n  try {\n    let response = yield axios.get(`/api/volunteer/role/${action.payload}`);\n    yield put({ type: 'SET_VOLUNTEER_ROLES', payload: response.data });\n  } catch (error) {\n    console.log('error in getVolunteerRoles', error);\n  }\n}\n\n//requests all the volunteers that are signed up for this specific event\nfunction* getSpecificVolunteers(action) {\n  try{\n    let response = yield axios.get(`/api/volunteer/eventVolunteers/${action.payload.id}/${action.payload.np_id}`)\n    yield put({\n      type: 'SET_SPECIFIC_VOLUNTEERS',\n      payload: response.data\n    })\n  }\n  catch (error) {\n    console.log('error in getSpecificVolunteers', error)\n  }\n}\n\n//adds a new volunteers for specific event\nfunction* addVolunteers(action) {\n  try {\n    yield axios.post(`/api/volunteer/addVolunteers`, action.payload);\n    yield put({\n      type: 'GET_EVENT_DETAILS',\n      payload: action.payload.event_id\n    })\n  }\n  catch (error) {\n    console.log('error in addVoluteers', error)\n  }\n}\n\n//worker saga: request that new volunteer be added to the database and request for email data/calendar event to be sent out\nfunction* volunteerSignUp(action) {\n  try {\n    yield axios.post(`/api/volunteer/signup`, action.payload);\n    yield put({\n      type: 'ADD_SIGNUP',\n      payload: action.payload\n    })\n    yield put({\n      type: 'CLEAR_VOLUNTEER'\n    })\n  } catch (error) {\n    console.log('error in volunteerSignUp', error);\n  }\n}\n\nfunction* getSpecificVolunteerRole(action) {\n  try {\n    let response = yield axios.get(`api/volunteer/specificrole/${action.payload}`)\n    console.log('what is the response?', response);\n    yield put ({\n      type: 'SET_SPECIFIC_ROLES',\n      payload: response.data[0]\n    })\n  } catch (error) {\n    console.log('in getSpecificVolunteerRole error');\n    \n  }\n}\n\nfunction* deleteRole(action) {\n  try {\n    console.log('DELETE ROLE PAYLOAD:', action.payload);\n    \n    yield axios.delete(`/api/volunteer/deleteRole/${action.payload.role_id}`)\n    yield put ({\n      type: 'GET_EVENT_DETAILS',\n      payload: action.payload.event_id\n    })\n  } catch (error) {\n    console.log('in deleteRole saga error');\n  }\n}\n\n//root saga\nfunction* volunteerSaga() {\n  yield takeEvery('GET_EVENT_DETAILS', getVolunteerRoles);\n  yield takeEvery('GET_VOLUNTEER_ROLES', getVolunteerRoles);\n  yield takeLatest('GET_SPECIFIC_VOLUNTEERS', getSpecificVolunteers);\n  yield takeLatest('GET_SPECIFIC_VOLUNTEER_ROLE', getSpecificVolunteerRole)\n  yield takeLatest('ADD_VOLUNTEERS', addVolunteers);\n  yield takeLatest('VOLUNTEER_SIGNUP', volunteerSignUp);\n  yield takeLatest('DELETE_ROLE', deleteRole);\n}\n\nexport default volunteerSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* imageUpload(action) {\n    try {\n        let response = yield axios.post('/api/upload', action.payload)\n        console.log('uploaded image URL is:', response.data);\n        yield put({\n            type: 'SET_UPLOADED_FILE',\n            payload: response.data\n        })\n    } catch (error) {\n        console.log('error in imageUpload saga:', error);\n    }\n}\n\n\n//root saga\nfunction* uploadSaga() {\n    yield takeLatest('IMAGE_UPLOAD', imageUpload);\n}\n\nexport default uploadSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport directorySaga from './directorySaga';\nimport nonprofitSaga from './nonprofitSaga';\nimport calendarSaga from './calendarSaga';\nimport eventSaga from './eventSaga';\nimport adminSaga from './adminSaga';\nimport volunteerSaga from './volunteerSaga';\nimport uploadSaga from './uploadSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    directorySaga(),\n    nonprofitSaga(),\n    calendarSaga(),\n    eventSaga(),\n    adminSaga(),\n    volunteerSaga(),\n    uploadSaga(),\n  ]);\n}\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    &copy; Woodbury Community Foundation\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\n\n\n//MATERIAL UI STYLES\nconst styles = theme => ({\n    loginDiv: {\n        color: 'white',\n    }\n})\n\nclass NavLogin extends Component {\n    state = {\n        username: '',\n        password: '',\n    };\n\n    //ONCLICK LOG IN USER WITH VERIFIED CREDENTIALS OR DISPLAY LOGIN ERROR;\n    login = (event) => {\n        event.preventDefault();\n\n        if (this.state.username && this.state.password) {\n            this.props.dispatch({\n                type: 'LOGIN',\n                payload: {\n                    username: this.state.username,\n                    password: this.state.password,\n                },\n            });\n        } else {\n            this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n        }\n    }\n\n    //SETSTATE FOR INPUT CHANGES;\n    handleInputChangeFor = propertyName => (event) => {\n        this.setState({\n            [propertyName]: event.target.value,\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.errors.loginMessage && (\n                    <h2\n                        className=\"alert\"\n                        role=\"alert\"\n                    >\n                        {this.props.errors.loginMessage}\n                    </h2>\n                )}\n\n                <form onSubmit={this.login}>\n                    <div className={this.props.classes.loginDiv} >\n                        <span>Already signed up?</span>\n                        <label htmlFor=\"username\">\n   \n                            <input\n                                type=\"text\"\n                                name=\"username\"\n                                placeholder=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleInputChangeFor('username')}\n                            />\n                        </label>\n            \n                        <label htmlFor=\"password\">\n        \n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"password\"\n                                value={this.state.password}\n                                onChange={this.handleInputChangeFor('password')}\n                            />\n                        </label>\n \n                        <input\n\n                            className=\"log-in\"\n                            type=\"submit\"\n                            name=\"submit\"\n                            value=\"Log In\"\n                        />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n    errors: state.errors,\n});\n\nexport default withStyles(styles) (connect(mapStateToProps)(NavLogin));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter} from 'react-router-dom';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() =>{ props.dispatch({ type: 'LOGOUT', history: props.history });}}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default withRouter(connect()(LogOutButton));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport NavLogin from '../NavLogin/NavLogin';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\nimport logo from './woodbury-CF-logo.png';\n\nconst Nav = (props) => {\n  \n  function routeDecider(){\n    let homeRoute;\n    if(props.user.name === 'Admin'){\n      homeRoute = `/validation`;\n    } else {\n      homeRoute = `/organizationHome/${props.user.id}`;\n    }\n    return <Link className=\"nav-link\" to={homeRoute}>Home</Link>;\n  }\n  \n  return (\n    <div className=\"nav\">\n      <Link to=\"/home\">\n      <h2 className=\"nav-title\">Contribute Woodbury</h2>\n      {/* <img className=\"woodbury-logo\" src={logo} alt=\"Three leaves with the words Woodbury Community Foundation next to them\"></img> */}\n      </Link>\n      \n        \n      \n      <div className=\"nav-right\">\n\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        {/* {props.user.id ? 'Home' : 'Login / Register'} */}\n        {props.user.id ? routeDecider() : <NavLogin className=\"nav-link\" />}\n\n        <Link className=\"nav-link\" to=\"/calendar\">\n          Calendar\n      </Link>\n        <Link className=\"nav-link\" to=\"/directory\">\n          Directory\n      </Link>\n        <a className=\"nav-link\" target=\"_blank\" href=\"https://www.woodburyfoundation.org\" rel=\"noopener noreferrer\">\n          WCF Main\n        </a>\n\n        {/* Show the link to the info page and the logout button if the user is logged in */}\n        {props.user.id && (\n          <>\n            {/* <Link className=\"nav-link\" to=\"/info\">\n              Info Page\n          </Link> */}\n            <LogOutButton className=\"nav-link\" />\n          </>\n        )}\n        {/* Always show this link since the about page is not protected */}\n        {/* <Link className=\"nav-link\" to=\"/about\">\n          About\n      </Link> */}\n      </div>\n    </div>\n  );\n}\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, CardContent, Grid, InputLabel, MenuItem, FormControlLabel, Checkbox, FormControl, Select, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Swal from 'sweetalert2';\nimport moment from 'moment';\n\n\n//MATERAIL UI STYLES;\nconst styles = theme => ({\n    backButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 0px 0px 30px'\n    },\n    submitButton: {\n        float: 'right',\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 130px 0px 0px'\n    },\n    dropdownBox: {\n        width: '500px'\n    },\n    checkbox: {\n        margin: '0px 0px 10px 0px',\n    },\n    rootDiv: {\n        margin: '0px 100px 0px 100px'\n    },\n    textFields: {\n        margin: '10px 10px 10px 30px',\n        width: '400px'\n    },\n    dateFields: {\n        margin: '10px 10px 10px 30px',\n        width: '40%'\n    },\n    description: {\n        margin: '10px 10px 10px 30px',\n        width: '1030px'\n    },\n    times: {\n        margin: '10px 10px 10px 30px',\n        width: '40%'\n    },\n    uploadFile: {\n        height: '300px'\n    },\n    uploadButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '20px 10px 0px 10px'\n    },\n    regButtons: {\n        margin: '5px'\n    },\n    logoTextField: {\n        margin: '10px 10px 10px 30px',\n        width: '300px'\n    },\n\n})\n\n\nclass AddEvent extends Component {\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_PAST_EVENTS',\n            payload: +(this.props.match.params.id)\n        })\n    }\n    //UPDATE IMAGE UPLOAD URL IN TEXTFIELD/INPUT;\n    componentDidUpdate(prevProps) {\n        if (this.props.upload !== prevProps.upload) {\n            this.setState({\n                event_url: this.props.upload.url\n            })\n        }\n    }\n\n    state = {\n        name: '',\n        non_profit_id: +(this.props.match.params.id),\n        description: '',\n        address: '',\n        city: '',\n        state: '',\n        zip_code: '',\n        start_date: '',\n        end_date: '',\n        start_time: '',\n        end_time: '',\n        event_url: '',\n        past_event_id: '',\n        volunteers_needed: true,\n        uploadFile: '',\n        uploadButton: false\n    }\n\n    //SET STATE FOR INPUT CHANGES;\n    handleChange = (propertyName, event) => {\n        this.setState({\n            [propertyName]: event.target.value\n        })\n    }\n\n    //SET STATE FOR 'VOLUNTEERS NEEDED' CHECKBOX;\n    handleVolunteerChange = () => {\n        if (this.state.volunteers_needed === true) {\n            this.setState({\n                volunteers_needed: false,\n            })\n        } else {\n            this.setState({\n                volunteers_needed: true\n            })\n        }\n    }\n\n    //BACK BUTTON CLICKED AND ALERT OPTIONS AND PUSH TO CORRECT PAGE VIEW;\n    handleBackButton = (id) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"The event has not been saved.\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK',\n        }).then((result) => {\n            if (result.value) {\n                this.props.history.push(`/organizationHome/${id}`)\n            }\n        })\n    }\n\n    //FORM WAS SUBMITTED; DISPATCH STATE TO REDUX AND SERVER;\n    handleSubmitButton = () => {\n        //RETURN ERROR IF START DATE DOES NOT OCCUR BEFORE END DATE;\n        if (moment(this.state.end_date).format('YYYYMMDD') < moment(this.state.start_date).format('YYYYMMDD')) {\n            this.props.dispatch({ type: 'DATE_ERROR' });\n            return false;\n        } else if (this.state.name && this.state.description && this.state.start_date && this.state.end_date && this.state.start_time && this.state.end_time\n            && this.state.address && this.state.city && this.state.state && this.state.zip_code) {\n            //IF THIS IS A BRAND NEW EVENT DISPATCH STATE; POSTS IN SERVER;\n            if (!this.state.past_event_id) {\n                this.props.dispatch({\n                    type: 'ADD_EVENT',\n                    payload: this.state,\n                    history: this.props.history\n                })\n            } else {\n                //IF THIS IS AN OLD EVENT BEING USED DISPATCH WITH DIFFERENT TYPE; POSTS THEN DELETES IN SERVER;\n                this.props.dispatch({\n                    type: 'ADD_PAST_EVENT',\n                    payload: this.state,\n                    history: this.props.history\n                })\n            }\n        } else {\n            this.props.dispatch({ type: 'REQUIRED_ERROR' });\n            return false;\n        }\n        Swal.fire({\n            title: 'Success!',\n            text: 'Your event was submitted.',\n            type: 'success',\n            confirmButtonText: 'OK',\n            confirmButtonColor: '#457736'\n        })\n    }\n\n    // SET STATE FOR SELECTED PAST EVENT;\n    handleChangeFor = (event) => {\n        this.setState({\n            name: event.target.value.name,\n            non_profit_id: this.props.match.params.id,\n            description: event.target.value.description,\n            address: event.target.value.address,\n            city: event.target.value.city,\n            state: event.target.value.state,\n            zip_code: event.target.value.zip_code,\n            start_time: event.target.value.start_time,\n            end_time: event.target.value.end_time,\n            event_url: event.target.value.event_url,\n            past_event_id: event.target.value.id\n        })\n    }\n\n    //SET STATE FOR SELECTED FILE TO UPLOAD;\n    handleFileSelection = (event) => {\n        let file = event.target.files[0]\n        this.setState({\n            uploadFile: file\n        })\n    }\n\n    //DISPATCH THE UPLOADED FILE/IMAGE TO REDUX AND SERVER THEN CLOUDINARY; TOGGLE UPLOAD BUTTON TO FALSE;\n    handleFileUpload = () => {\n        const data = new FormData();\n        data.append('file', this.state.uploadFile)\n        this.props.dispatch({\n            type: 'IMAGE_UPLOAD',\n            payload: data\n        })\n        this.setState({\n            uploadButton: false\n        })\n    }\n\n    //TOGGLE UPLOAD BUTTON TO TRUE; DISPLAY UPLOAD OPTIONS;\n    handleUploadButton = () => {\n        this.setState({\n            uploadButton: true\n        })\n    }\n\n    //TOGGLE UPLOAD BUTTON TO FALSE; DISPLAY INPUT FIELDS\n    handleCancelUpload = () => {\n        this.setState({\n            uploadButton: false\n        })\n    }\n\n    render() {\n\n\n        return (\n\n            <div className={this.props.classes.rootDiv}>\n                <h1>Add Event</h1>\n\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <h2>Advertise your upcoming event</h2>\n                            <p>Please complete the required fields to add your event. <br />\n                                Select from the dropdown list to reuse information from a previous event. <br />\n                                Leave the \"Volunteers Needed\" checkbox unchecked if you do not want to add volunteer opportunities at this time for the event.\n                            </p>\n                            <FormControl variant=\"filled\">\n                                <InputLabel >\n                                    Re-Use previous event\n                                </InputLabel>\n                                <Select\n                                    className={this.props.classes.dropdownBox}\n                                    onChange={(event) => this.handleChangeFor(event)}\n                                    value={this.state.name}>\n                                    <MenuItem value={this.state.name}>\n                                        <em>{this.state.past_event_id ? this.state.name : 'Re-Use previous event'} </em>\n                                    </MenuItem>\n                                    {this.props.pastEvents.map(each => (\n                                        <MenuItem key={each.id} value={each} >{each.name}</MenuItem>\n                                    ))}\n                                </Select>\n\n                                <FormControlLabel\n                                    className={this.props.classes.checkbox}\n                                    control={\n                                        <Checkbox\n                                            defaultChecked\n                                            onChange={this.handleVolunteerChange}\n                                            color=\"primary\" />\n                                    }\n                                    label=\"Volunteers Needed\"\n                                />\n\n                                <TextField className={this.props.classes.textFields} type=\"text\" label=\"Enter the event Name\" variant=\"outlined\" required={true}\n                                    value={this.state.name} onChange={(event) => this.handleChange('name', event)} />\n\n                                <TextField className={this.props.classes.description} type=\"text\"\n                                    placeholder=\"Enter the event description and any links where tickets can be purchased if required to attend\"\n                                    label=\"description\" required={true}\n                                    variant=\"outlined\" multiline rows=\"4\"\n                                    value={this.state.description} onChange={(event) => this.handleChange('description', event)} />\n                            </FormControl>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n                {this.props.formError &&\n                    <h2\n                        className=\"alert\"\n                        role=\"alert\">\n                        {this.props.formError}\n                    </h2>}\n\n                <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                        <CardContent>\n\n                            <h2>Date and Time:</h2>\n                            <TextField className={this.props.classes.dateFields} type=\"date\" placeholder=\"Start\" required={true}\n                                variant=\"outlined\" value={this.state.start_date} onChange={(event) => this.handleChange('start_date', event)} />\n                            <TextField className={this.props.classes.dateFields} type=\"date\" placeholder=\"End\" variant=\"outlined\"\n                                value={this.state.end_date} onChange={(event) => this.handleChange('end_date', event)} />\n                            <br />\n\n                            <TextField className={this.props.classes.times} type=\"time\" placeholder=\"Start Time\" required={true}\n                                variant=\"outlined\" value={this.state.start_time} onChange={(event) => this.handleChange('start_time', event)} />\n                            <TextField className={this.props.classes.times} type=\"time\" placeholder=\"End Time\" required={true}\n                                variant=\"outlined\" value={this.state.end_time} onChange={(event) => this.handleChange('end_time', event)} />\n                            <br />\n\n                            <br />\n                            {this.state.uploadButton ?\n                                <div className={this.props.classes.textFields} >\n                                    <input type=\"file\" name=\"file\" onChange={this.handleFileSelection} />\n                                    <button className={this.props.classes.regButtons} onClick={this.handleFileUpload}>Upload</button>\n                                    <button className={this.props.classes.regButtons} onClick={this.handleCancelUpload} >Cancel</button>\n                                </div>\n                                :\n                                <>\n                                    <TextField className={this.props.classes.logoTextField} type=\"text\" placeholder=\"Image URL here or upload an image\" label=\"image\"\n                                        value={this.state.event_url} variant=\"outlined\" onChange={(event) => { this.handleChange('event_url', event) }} />\n                                    <Button className={this.props.classes.uploadButton}\n                                        onClick={this.handleUploadButton} >Upload</Button>\n                                </>\n\n                            }\n                            <br />\n\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <CardContent>\n                            <h2>Location:</h2>\n                            <TextField className={this.props.classes.textFields} type=\"text\" label=\"Address\" variant=\"outlined\" required={true}\n                                value={this.state.address} onChange={(event) => this.handleChange('address', event)} />\n                            <br />\n                            <TextField className={this.props.classes.textFields} type=\"text\" label=\"City\" variant=\"outlined\" required={true}\n                                value={this.state.city} onChange={(event) => this.handleChange('city', event)} />\n                            <br />\n                            <TextField className={this.props.classes.textFields} type=\"text\" label=\"State\" variant=\"outlined\" required={true}\n                                value={this.state.state} onChange={(event) => this.handleChange('state', event)} />\n                            <br />\n                            <TextField className={this.props.classes.textFields} type=\"text\" label=\"Zip Code\" variant=\"outlined\" required={true}\n                                value={this.state.zip_code} onChange={(event) => this.handleChange('zip_code', event)} />\n                            <br />\n\n                        </CardContent>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <Button className={this.props.classes.backButton} variant=\"contained\"\n                                onClick={() => this.handleBackButton(this.props.match.params.id)} >Back</Button>\n                            <Button className={this.props.classes.submitButton} variant=\"contained\"\n                                onClick={this.handleSubmitButton} >Submit</Button>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        nonprofit: reduxStore.nonprofit.nonprofit,\n        pastEvents: reduxStore.nonprofit.nonprofitPastEvents,\n        formError: reduxStore.errors.formMessage,\n        upload: reduxStore.upload.uploadedImage\n    }\n}\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(AddEvent));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, CardContent, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Swal from 'sweetalert2';\nimport moment from 'moment';\n\n//MATERAIL UI STYLES;\nconst styles = theme => ({\n    rootDiv: {\n        margin: '0px 100px 0px 100px'\n    },\n    heading: {\n        color: '#714723'\n    },\n    textFields: {\n        margin: '10px 10px 10px 30px',\n        width: '500px'\n    },\n    times: {\n        margin: '10px 10px 10px 30px',\n    },\n    addRolesButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        float: 'right',\n        margin: '20px 690px 0px 0px'\n    },\n    backButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 0px 0px 30px'\n    },\n    doneButton: {\n        float: 'right',\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 130px 0px 0px'\n    },\n    removeButton: {\n        color: 'white',\n        backgroundColor: '#999898',\n        margin: '0px 0px 0px 30px',\n    },\n    displayRoles: {\n        margin: '10px 10px 10px 30px'\n    }\n})\n\n\n\nclass AddVolunteerRoles extends Component {\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_VOLUNTEER_ROLES',\n            payload: this.props.match.params.id\n        });\n    }\n\n    state = {\n        name: '',\n        description: '',\n        number_needed: '',\n        start_time: '',\n        end_time: '',\n        date: '',\n        event_id: this.props.match.params.id,\n    }\n\n    //SET STATE FOR INPUT CHANGES;\n    handleChange = (propertyName, event) => {\n        this.setState({\n            [propertyName]: event.target.value\n        });\n    }\n\n    //ONCLICK DISPATCH STATE THEN CLEAR STATE;\n    handleAddRolesButton = () => {\n        if (this.state.name && this.state.description && this.state.number_needed && this.state.start_time && this.state.end_time\n            && this.state.date) {\n            this.props.dispatch({\n                type: 'ADD_VOLUNTEERS',\n                payload: this.state\n            })\n            this.setState({\n                name: '',\n                description: '',\n                number_needed: '',\n                start_time: '',\n                end_time: '',\n                date: ''\n            })\n        } else {\n            this.props.dispatch({ type: 'REQUIRED_ERROR' })\n            return false;\n        }\n    }\n\n\n    //ONCLICK ALERT WITH WARNING THEN PUSH TO CORRECT URL;\n    handleBackButton = () => {\n        Swal.fire({\n            text: \"Only your saved roles have been saved. Do you wish to go back?\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK',\n        }).then((result) => {\n            if (result.value) {\n                this.props.history.push(`/editEvent/${this.props.match.params.id}`);\n            }\n        })\n    }\n\n    //ONCLICK ALERT THEN PUSH TO EVENT DETAILS URL;\n    handleDoneButton = () => {\n        Swal.fire({\n            title: 'Success!',\n            text: `You're done!`,\n            type: 'success',\n            confirmButtonText: 'OK',\n            confirmButtonColor: '#457736'\n        })\n        this.props.history.push(`/eventDetails/${this.props.match.params.id}`)\n    }\n\n    //ONCLICK ALERT THEN DISPATCH AND DELETE THE ROLE TO REMOVE FROM SERVER\n    handleRemoveRole = (id) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"This role will be deleted forever.\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK',\n        }).then((result) => {\n            if (result.value) {\n                this.props.dispatch({\n                    type: 'DELETE_ROLE',\n                    payload: { role_id: id, event_id: this.props.match.params.id }\n                })\n            }\n        })\n    }\n\n\n    render() {\n\n\n        return (\n            <div className={this.props.classes.rootDiv} >\n                <h1 className={this.props.classes.heading} >\n                    <span >Add Volunteer</span>\n                    <span > Roles</span></h1>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <p>Please enter the required information for each volunteer role for your event. <br />\n                                Add as many roles as you would like. <br />\n                                The roles will be displayed on your event page.\n                                </p>\n                        </CardContent>\n                    </Grid>\n                    {this.props.reduxStore.errors.formMessage &&\n                        <h2\n                            className=\"alert\"\n                            role=\"alert\">\n                            {this.props.reduxStore.errors.formMessage}\n                        </h2>}\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <h2 className={this.props.classes.heading} >What do you need volunteers to help with?</h2>\n                            <TextField className={this.props.classes.textFields} type=\"text\" label=\"Role\" variant=\"outlined\" required={true}\n                                value={this.state.name} onChange={(event) => this.handleChange('name', event)} />\n                            <TextField className={this.props.classes.textFields} type=\"date\" variant=\"outlined\" required={true}\n                                value={this.state.date} onChange={(event) => this.handleChange('date', event)} />\n                            <br />\n                            <TextField className={this.props.classes.textFields} type=\"text\" label=\"Description\" variant=\"outlined\" required={true} multiline rows=\"4\"\n                                value={this.state.description} onChange={(event) => this.handleChange('description', event)} />\n                            <TextField className={this.props.classes.textFields} type=\"number\" label=\"Number of volunteers needed\" required={true} variant=\"outlined\"\n                                value={this.state.number_needed} onChange={(event) => this.handleChange('number_needed', event)} />\n                            <br />\n                            <TextField className={this.props.classes.times} type=\"time\" variant=\"outlined\" required={true}\n                                value={this.state.start_time} onChange={(event) => this.handleChange('start_time', event)} />\n                            <TextField className={this.props.classes.times} type=\"time\" variant=\"outlined\" required={true}\n                                value={this.state.end_time} onChange={(event) => this.handleChange('end_time', event)} />\n                            <Button className={this.props.classes.addRolesButton} variant=\"contained\" size=\"small\"\n                                onClick={this.handleAddRolesButton} >Add role(s)</Button>\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <CardContent className={this.props.classes.displayRoles} >\n\n                            <h3>Current Volunteer Roles:</h3>\n\n                            {this.props.reduxStore.volunteer.volunteerRoleList.map(roleInfo => (\n                                <>\n                                    <CardContent>\n                                        <span><b>Role: </b>{roleInfo.name}</span><br />\n                                        <span><b>Description: </b>{roleInfo.description}</span><br />\n                                        <span><b>Volunteers needed: </b>{roleInfo.number_needed}</span><br />\n                                        <span><b>Date: </b>{moment(roleInfo.date).format('MMM Do YYYY')}</span><br />\n                                        <span><b>Time: </b>{roleInfo.start_time} - {roleInfo.end_time} </span><br />\n                                        <Button className={this.props.classes.removeButton} onClick={() => this.handleRemoveRole(roleInfo.id)} >Remove</Button>\n                                    </CardContent>\n                                </>\n                            ))}\n\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item xs={12}>\n\n                        <CardContent>\n                            <Button className={this.props.classes.backButton} variant=\"contained\"\n                                onClick={this.handleBackButton} >Back</Button>\n                            <Button className={this.props.classes.doneButton} variant=\"contained\"\n                                onClick={this.handleDoneButton} >Done</Button>\n                        </CardContent>\n\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        reduxStore\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(AddVolunteerRoles));","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport './calendar.css';\n\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n  const eventList = useSelector(store => store.calendar.calendar);\n  const npList = useSelector(store => store.directory);\n  React.useEffect(() => {\n    dispatch({ type: 'GET_CALENDAR' });\n    dispatch({ type: 'GET_DIRECTORY' })\n  }, [])\n\n  //RETURN NONPROFIT;\n  function findName(id) {\n    for (let nonprofit of npList) {\n      if (+(id) === nonprofit.id) {\n        return nonprofit.name\n      }\n    }\n  }\n\n  //RETURN EVENT ITEMS WITH EVENT DATES\n  function eventItem(event) {\n    let path = `/eventDetails/${event.id}`;\n    return (\n      <div key={event.id}>\n        <Grid item md={12} > <b>Event:</b> {event.name} &nbsp;\n          <Link to={path}>Learn More</Link>\n        </Grid>\n        <Grid item md={12} ><b> Organization: </b> {findName(event.non_profit_id)}\n          <br /> <b>Dates: </b>\n          {moment(event.start_date).format('MMM Do YYYY')} - {moment(event.end_date).format('MMM Do YYYY')}\n        </Grid> <br />\n      </div>);\n  }\n\n  return (\n    <div className=\"calendarPage\">\n      <div className=\"calendarHeader\"><h1>Calendar</h1></div>\n      <Grid container spacing={4}>\n        <Grid item md={6} xs={12}>\n          <h4 className=\"calendarDividers\">{moment().subtract(30, 'days').calendar()} - {moment().subtract(8, 'days').calendar()}</h4>\n          <ul>\n            {eventList.lastMonth ? eventList.lastMonth.map(event => eventItem(event)) : 'No Events'}\n          </ul>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <h4 className=\"calendarDividers\">{moment().subtract(7, 'days').calendar()} - {moment().subtract(1, 'days').calendar('MM/DD/YYYY')}</h4>\n          <ul>\n            {eventList.lastWeek ? eventList.lastWeek.map(event => eventItem(event)) : 'No Events this week'}\n          </ul>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <h4 className=\"calendarDividers\">{moment().format('MM/DD/YYYY')} - {moment().add(6, 'days').calendar('MM/DD/YYYY')}</h4>\n          <ul>\n            {eventList.currentWeek ? eventList.currentWeek.map(event => eventItem(event)) : 'No Events this week'}\n          </ul>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <h4 className=\"calendarDividers\">{moment().add(7, 'days').calendar()} - {moment().add(13, 'days').calendar()}</h4>\n          <ul>\n            {eventList.nextWeek ? eventList.nextWeek.map(event => eventItem(event)) : 'No Events this week'}\n          </ul>\n        </Grid>\n        <Grid item md={6} xs={12}>\n          <h4 className=\"calendarDividers\">Future Events</h4>\n          <ul>\n            {eventList.nextWeek ? eventList.future.map(event => eventItem(event)) : 'No Events this week'}\n          </ul>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Calendar;\n\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport{ Button, Divider, IconButton, InputBase, Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { AssistantPhoto } from '@material-ui/icons';\n\n\n//MATERIAL UI TABLE STYLES\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: '#878787',\n        color: 'white',\n        fontSize: 24\n    },\n    body: {\n        fontSize: 18,\n    }\n}))(TableCell);\n\n//OTHER MATERIAL UI STYLES\nconst styles = theme => ({\n    backButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 0px 0px 30px'\n    },\n    backButtonText: {\n        color: 'white',\n        textDecoration: 'none',\n    },\n    root: {\n        maxHeight: '1000px',\n        width: '90%',\n        marginTop: theme.spacing(3),\n        overflowY: 'scroll',\n        margin: 'auto',\n    },\n    search: {\n        float: 'right',\n        width: '25%',\n        margin: theme.spacing(3),\n    },\n    rows: {\n        height: '100px',\n    },\n    flag: {\n        color: 'red'\n    },\n    heading: {\n        color: '#714723'\n    },\n    rootDiv: {\n        backgroundColor: '#f1f5f9',\n        padding: '30px',\n        textAlign: 'center',\n    },\n\n})\n\n\nclass DirectoryPage extends Component {\n\n    state = {\n        searchbar: ''\n    }\n\n    componentDidMount() {\n        this.getOrganizationDetails();\n    }\n\n    //GETS THE DIRECTORY FOR ADMIN VIEW;\n    componentDidUpdate(prevProps) {\n        if (this.props.reduxStore.user.name === 'Admin' && prevProps.reduxStore.user.name !== this.props.reduxStore.user.name) {\n            this.props.dispatch({\n                type: 'GET_ADMIN_DIRECTORY'\n            });\n        }\n    }\n\n    //GETS ALL ORGANIZATIONS IN DATABASE TO DISPLAY ON DOM\n    getOrganizationDetails = () => {\n        this.props.dispatch({\n            type: 'GET_DIRECTORY'\n        });\n        this.props.dispatch({\n            type: 'GET_ADMIN_DIRECTORY'\n        });\n    }\n\n    //ONCLICK PUSH TO NONPROFIT HOME PAGE\n    handleVolunteerButton = (id) => {\n        this.props.history.push(`/organizationhome/${id}`)\n    }\n\n    //SEARCH BAR; SEARCH FOR NONPROFITS IN DATABASE\n    searchbarInput = (event) => {\n        this.setState({\n            searchbar: event.target.value\n        });\n    }\n\n    //ONCLICK DISPATCH SEARCH QUERY;\n    searchSubmit = (event) => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'SEARCH', payload: this.state.searchbar });\n    }\n\n    //ONCLICK ALERT USER AND DISPATCH ID TO BE DELETED FROM DATABASE;\n    handleDelete = (id, orgName) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: `You are about to delete ${orgName}. Do you wish to continue?`,\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK',\n        }).then((result) => {\n            if (result.value) {\n                this.props.dispatch({ type: 'DECLINE_NONPROFIT', payload: id });\n            }\n        });\n    }\n\n    render() {\n\n        const nonprofitName = this.props.reduxStore.user.name;\n        let sixMonthsBeforeTodaysDate = moment().subtract(6, \"months\").format(\"YYYY-MM-DD\");\n\n        return (\n            <div className={this.props.classes.rootDiv} >\n                <h1 className={this.props.classes.heading} >\n                    Directory\n                </h1>\n\n                <Paper className={this.props.classes.root}>\n\n                    <div className={this.props.classes.search}>\n                        <Paper elevation={1}>\n                            <form onSubmit={this.searchSubmit}>\n                                <IconButton aria-label=\"Search\" onClick={this.searchSubmit} >\n                                    <SearchIcon />\n                                </IconButton>\n                                <InputBase placeholder=\"Search Nonprofits\" onChange={this.searchbarInput} value={this.state.searchbar} />\n                            </form>\n                            <Divider />\n                        </Paper>\n                    </div>\n\n\n                    <Table hover=\"true\" size=\"medium\">\n\n                        {/* conditional rendering of the COLUMN HEADINGS based on the user being an admin or not */}\n                        {\n                            nonprofitName === 'Admin' ?\n                                <TableHead>\n                                    <TableRow className={this.props.classes.rows}>\n                                        <CustomTableCell align=\"left\">Image</CustomTableCell>\n                                        <CustomTableCell align=\"left\">Agency</CustomTableCell>\n                                        <CustomTableCell align=\"left\">Category</CustomTableCell>\n                                        <CustomTableCell align=\"left\">Flagged</CustomTableCell>\n                                        <CustomTableCell align=\"center\"></CustomTableCell>\n                                    </TableRow>\n                                </TableHead>\n\n                                :\n\n                                <TableHead>\n                                    <TableRow className={this.props.classes.rows}>\n                                        <CustomTableCell align=\"left\">Image</CustomTableCell>\n                                        <CustomTableCell align=\"left\">Agency</CustomTableCell>\n                                        <CustomTableCell align=\"left\">Category</CustomTableCell>\n                                        <CustomTableCell align=\"left\">Volunteer Opportunities</CustomTableCell>\n                                        <CustomTableCell align=\"center\">Website Link</CustomTableCell>\n                                    </TableRow>\n                                </TableHead>\n                        }\n\n                        {/* conditional rendering of the TABLE ROWS based on the user being an admin or not */}\n                        {\n                            nonprofitName === 'Admin' ?\n                                <TableBody>\n                                    {this.props.reduxStore.admin.adminDirectory &&\n                                        this.props.reduxStore.admin.adminDirectory.map(nonprofit => {\n                                            let lastConfirmed = moment(nonprofit.last_confirmed).format(\"YYYY-MM-DD\");\n                                            if (nonprofit.name !== 'Admin') {\n                                                return (\n                                                    <TableRow key={nonprofit.id} className={this.props.classes.rows} hover={true}>\n                                                        <CustomTableCell align=\"left\"><img src={nonprofit.logo} alt=\"Nonprofit Logo\" width=\"300\" height=\"200\" /></CustomTableCell>\n                                                        <CustomTableCell align=\"left\">{nonprofit.name}<br />\n                                                            {nonprofit.address}<br />\n                                                            {nonprofit.city},\n                                                              {nonprofit.state}\n                                                            {nonprofit.zip_code}  </CustomTableCell>\n                                                        <CustomTableCell align=\"left\" >{nonprofit.category_name}</CustomTableCell>\n\n                                                        <CustomTableCell align=\"left\">\n                                                            {lastConfirmed < sixMonthsBeforeTodaysDate &&\n                                                                <div>\n                                                                    {/* conditionally show this if date of lastConfirmed is <6months */}\n                                                                    <AssistantPhoto fontSize=\"large\" className={this.props.classes.flag} />\n                                                                </div>\n                                                            }\n                                                        </CustomTableCell>\n\n                                                        <CustomTableCell align=\"center\">\n                                                            <Button className={this.props.classes.backButton} variant=\"contained\"\n                                                                onClick={() => { this.handleDelete(nonprofit.id, nonprofit.name) }}> Delete\n                                                        </Button>\n                                                        </CustomTableCell>\n                                                    </TableRow>\n                                                )\n                                            } else { return false; }\n                                        })}\n                                </TableBody>\n\n                                :\n\n                                <TableBody>\n\n                                    {this.props.reduxStore.directory.map((nonprofit) => {\n                                        if (nonprofit.name !== 'Admin') {\n                                            return (\n                                                <TableRow key={nonprofit.id} className={this.props.classes.rows} hover={true}\n                                                    onClick={() => this.handleVolunteerButton(nonprofit.id)}>\n                                                    <CustomTableCell align=\"left\"><img src={nonprofit.logo} alt=\"Nonprofit Logo\" width=\"300\" height=\"200\" /></CustomTableCell>\n                                                    <CustomTableCell align=\"left\">{nonprofit.name}<br />\n                                                        {nonprofit.address}<br />\n                                                        {nonprofit.city},&nbsp;{nonprofit.state}&nbsp;\n                                                        {nonprofit.zip_code}  </CustomTableCell>\n                                                    <CustomTableCell align=\"left\">{nonprofit.category_name}</CustomTableCell>\n                                                    <CustomTableCell align=\"left\"><Button className={this.props.classes.backButton} variant=\"contained\"\n                                                        onClick={() => this.handleVolunteerButton(nonprofit.id)} >Volunteer</Button></CustomTableCell>\n                                                    <CustomTableCell align=\"center\"><Button className={this.props.classes.backButton} variant=\"contained\">\n                                                        <a className={this.props.classes.backButtonText} href={nonprofit.website} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                            Website\n                                                        </a></Button></CustomTableCell>\n                                                </TableRow>\n                                            )\n                                        } else { return false; }\n                                    })}\n\n                                </TableBody>\n                        }\n                    </Table>\n                </Paper>\n            </div >\n        )\n\n\n    }\n\n\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        reduxStore\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(DirectoryPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { withStyles } from '@material-ui/styles';\nimport { CardContent, Grid, FormControl, TextField, Button } from '@material-ui/core';\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    rootDiv: {\n        margin: '0px 100px 0px 100px'\n    },\n    grid: {\n        justify: 'center'\n    },\n    backButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 0px 0px 30px'\n    },\n    submitButton: {\n        float: 'right',\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 50px 0px 0px'\n    },\n    editButton: {\n        color: 'white',\n        backgroundColor: '#714723',\n        marginLeft:'34%'\n    },\n    textFields: {\n        margin: '10px 10px 10px 30px',\n        width: '400px',\n        color: '#714723',\n        fontSize: '20px'\n    },\n    urlField: {\n        margin: '10px 10px 10px 30px',\n        width: '200px',\n        color: '#714723',\n        fontSize: '20px'\n    },\n    stateZip: {\n        margin: '10px 10px 10px 30px',\n        width: '178px',\n        color: '#714723',\n        fontSize: '20px'\n    },\n    description: {\n        margin: '10px 10px 10px 30px',\n        width: '1045px'\n    },\n    times: {\n        margin: '10px 10px 10px 30px'\n    },\n    dateFields: {\n        margin: '10px 10px 10px 30px',\n        width: '40%'\n    },\n    label: {\n        color: '#714723',\n        fontSize: '20px'\n    },\n    uploadButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '20px 10px 0px 10px'\n    },\n    regButtons: {\n        margin: '5px'\n    }\n})\n\nclass EditEvent extends Component {\n\n    state = {\n        id: Number(this.props.match.params.id),\n        uploadButton: false,\n        uploadFile: '',\n    }\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_EVENT_DETAILS',\n            payload: Number(this.props.match.params.id)\n        })\n    }\n\n    //ON UPLOAD OF NEW IMAGE UPDATE THE INPUT FIELD WITH NEW URL;\n    componentDidUpdate(prevProps) {\n        if (this.props.upload !== prevProps.upload) {\n            this.setState({\n                event_url: this.props.upload.url\n            })\n        }\n    }\n\n    //SET STATE FOR INPUT CHANGES;\n    handleChange = (propertyName, event) => {\n        this.setState({\n            [propertyName]: event.target.value,\n            id: this.props.match.params.id,\n            non_profit_id: this.props.event[0].non_profit_id\n        })\n    }\n\n    //ONCLICK ALERT THEN PUSH TO PREVIOUS URL;\n    handleBackButton = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"If any changes have been made they won't be saved!\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK'\n        }).then((result) => {\n            if (result.value) {\n                this.props.history.goBack()\n            }\n        })\n    }\n\n    //ONCLICK RETURN ERROR IF END DATE PRECEEDS START DATE THEN DISPATCH STATE AND RETURN TO PREVIOUS PAGE URL\n    handleSubmitButton = () => {\n        let end_date = this.state.end_date || this.props.event[0].end_date;\n        let start_date = this.state.start_date || this.props.event[0].start_date;\n        if (moment(end_date).format('YYYYMMDD') < moment(start_date).format('YYYYMMDD')) {\n            this.props.dispatch({ type: 'DATE_ERROR' });\n            return false;\n        } else {\n            this.props.dispatch({\n                type: 'EDIT_EVENT',\n                payload: {\n                    name: this.state.name || this.props.event[0].name,\n                    description: this.state.description || this.props.event[0].description,\n                    address: this.state.address || this.props.event[0].address,\n                    city: this.state.city || this.props.event[0].city,\n                    zip_code: this.state.zip_code || this.props.event[0].zip_code,\n                    event_url: this.state.event_url || this.props.event[0].event_url,\n                    start_date: this.state.start_date || this.props.event[0].start_date,\n                    end_date: this.state.end_date || this.props.event[0].end_date,\n                    states: this.state.states || this.props.event[0].state,\n                    start_time: this.state.start_time || this.props.event[0].start_time,\n                    end_time: this.state.end_time || this.props.event[0].end_time,\n                    non_profit_id: this.props.event[0].non_profit_id,\n                    id: Number(this.props.match.params.id)\n                }\n            });\n            this.props.history.goBack()\n        }\n    }//end handleSubmitButton\n\n    //ONCLICK PUSH TO EDIT VOLUNTEERS URL\n    handleEditVolunteerRoles = () => {\n        this.props.history.push(`/addvolunteers/${this.props.match.params.id}`)\n    }\n\n    //TOGGLES UPLOAD BUTTON TO TRUE AND DISPLAY UPLOAD OPTIONS;\n    handleUploadButton = () => {\n        this.setState({\n            uploadButton: true\n        })\n    }\n\n    //ONCLICK TOGGLES UPLOAD BUTTON TO FALSE AND DISPLAY INPUT FIELD;\n    handleCancelUpload = () => {\n        this.setState({\n            uploadButton: false\n        })\n    }\n\n    //ONCLICK SET STATE WITH SELECTED FILE TO UPLOAD\n    handleFileSelection = (event) => {\n        let file = event.target.files[0]\n        this.setState({\n            uploadFile: file\n        })\n    }\n\n    //ONCLICK DISPATCH FILE TO UPLOAD AND TOGGLE UPLOAD BUTTON TO FALSE TO DISPLAY INPUT FIELD\n    handleFileUpload = () => {\n        const data = new FormData();\n        data.append('file', this.state.uploadFile)\n        this.props.dispatch({\n            type: 'IMAGE_UPLOAD',\n            payload: data\n        })\n        this.setState({\n            uploadButton: false\n        })\n    }\n\n    render() {\n        return (\n            <div className={this.props.classes.rootDiv}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <h1>Edit Your Event: {this.props.event.map(event => (<span>{event.name}</span>))}</h1>\n                        <p>Make changes to your event here. Click submit to save the changes.</p>\n                    </Grid>\n                </Grid>\n                {this.props.formError &&\n                    <h2\n                        className=\"alert\"\n                        role=\"alert\">\n                        {this.props.formError}\n                    </h2>}\n                <Grid container spacing={3} justify=\"center\">\n                    <Grid item xs={12}>\n                        <CardContent>\n\n                            <FormControl variant=\"outlined\">\n                                {\n                                    this.props.event.map((ev) => {\n                                        return <>\n                                            <Grid container spacing={3} justify=\"center\">\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        <label className={this.props.classes.textFields} key={ev.id}>Event Name</label><br/>\n                                                        <TextField\n                                                            className={this.props.classes.textFields}\n                                                            type=\"text\"\n                                                            label=\"Event name\"\n                                                            placeholder={ev.name}\n                                                            defaultValue={ev.name}\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange('name', event)}\n                                                        />\n                                                    </CardContent>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        <label className={this.props.classes.textFields}>Change the event description</label><br/>\n                                                        <TextField\n                                                            className={this.props.classes.textFields}\n                                                            type=\"text\"\n                                                            label=\"Event Description\"\n                                                            placeholder={ev.description}\n                                                            defaultValue={ev.description}\n                                                            variant=\"outlined\"\n                                                            multiline rows=\"4\"\n                                                            onChange={(event) => this.handleChange('description', event)}\n                                                        />\n                                                    </CardContent>\n                                                </Grid>\n                                            </Grid>\n                                            \n\n                                            <Grid container spacing={3}>\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        <label className={this.props.classes.textFields}>The current start date is: {moment(ev.start_date).format(\"MM/DD/YYYY\")}</label><br/>\n                                                        <TextField\n                                                            className={this.props.classes.dateFields}\n                                                            type=\"date\"\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange(('start_date'), event)}\n                                                        />\n                                                    </CardContent>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        <label className={this.props.classes.textFields}>The current end date is: {moment(ev.end_date).format(\"MM/DD/YYYY\")}</label><br/>\n                                                        <TextField\n                                                            className={this.props.classes.dateFields}\n                                                            type=\"date\"\n                                                            placeholder=\"End\"\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange(('end_date'), event)}\n                                                        />\n                                                    </CardContent>\n                                                </Grid>\n                                            </Grid>\n                                            <Grid container spacing={3} justify=\"center\">\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        \n                                                        <TextField\n                                                            className={this.props.classes.times}\n                                                            type=\"time\"\n                                                            placeholder=\"Start Time\"\n                                                            label=\"Start Time\"\n                                                            defaultValue={ev.start_time}\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange('start_time', event)}\n                                                        />\n                                                        \n                                                        <TextField\n                                                            className={this.props.classes.times}\n                                                            type=\"time\"\n                                                            placeholder=\"End Time\"\n                                                            label=\"End Time\"\n                                                            defaultValue={ev.end_time}\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange('end_time', event)}\n                                                        />\n                                                    </CardContent>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        <label className={this.props.classes.textFields}>Address</label><br />\n                                                        <TextField\n                                                            className={this.props.classes.textFields}\n                                                            type=\"text\"\n                                                            placeholder=\"Address\"\n                                                            label=\"Address\"\n                                                            defaultValue={ev.address}\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange('address', event)}\n                                                        />\n                                                       \n                                                    </CardContent>\n                                                </Grid>\n\n                                            </Grid>\n                                            <Grid container spacing={3} justify=\"center\">\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        <label className={this.props.classes.textFields}>Change event image url</label><br/>\n                                                        \n                                                        {this.state.uploadButton ?\n                                                            <div  >\n                                                                <input type=\"file\" name=\"file\" onChange={this.handleFileSelection} />\n                                                                <button className={this.props.classes.regButtons} onClick={this.handleFileUpload}>Upload</button>\n                                                                <button className={this.props.classes.regButtons} onClick={this.handleCancelUpload} >Cancel</button>\n                                                            </div>\n                                                            :\n                                                            <>\n                                                                <TextField className={this.props.classes.urlField} type=\"text\" defaultValue={ev.event_url} placeholder=\"Image URL\" label=\"Image URL\" variant=\"outlined\" onChange={(event) => { this.handleChange('event_url', event) }} />\n                                                                <Button className={this.props.classes.uploadButton}\n                                                                    onClick={this.handleUploadButton} >Upload</Button>\n                                                            </>\n\n                                                        }\n                                                        \n                                                    </CardContent>\n                                                </Grid>\n                                                <Grid item xs={6}>\n                                                    <CardContent>\n                                                        <label className={this.props.classes.textFields}>City</label><br/>\n                                                        <TextField\n                                                            className={this.props.classes.textFields}\n                                                            type=\"text\"\n                                                            placeholder=\"City\"\n                                                            label=\"City\"\n                                                            defaultValue={ev.city}\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange('city', event)}\n                                                        />\n                                                        <label className={this.props.classes.textFields}>State and Zip Code</label><br />\n                                                        <TextField\n                                                            className={this.props.classes.stateZip}\n                                                            type=\"text\"\n                                                            placeholder=\"State\"\n                                                            label=\"State\"\n                                                            defaultValue={ev.state}\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange('states', event)}\n                                                        />\n                                                        <TextField\n                                                            className={this.props.classes.stateZip}\n                                                            type=\"number\"\n                                                            placeholder=\"Zip Code\"\n                                                            label=\"Zip Code\"\n                                                            defaultValue={ev.zip_code}\n                                                            variant=\"outlined\"\n                                                            onChange={(event) => this.handleChange('zip_code', event)}\n                                                        />\n                                                    </CardContent>\n                                                </Grid>\n                                            </Grid>\n                                        </>\n                                    })\n                                }\n\n                            </FormControl>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <Button className={this.props.classes.backButton} variant=\"contained\"\n                                onClick={this.handleBackButton}>Back</Button>\n\n                            <Button className={this.props.classes.submitButton} variant=\"contained\"\n                                onClick={this.handleSubmitButton}>Submit</Button>\n\n                            <Button className={this.props.classes.editButton} variant=\"contained\"\n                                onClick={this.handleEditVolunteerRoles}>Edit Volunteer Roles</Button>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        event: state.event.eventDetails,\n        formError: state.errors.formMessage,\n        upload: state.upload.uploadedImage\n    }\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(EditEvent));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Swal from 'sweetalert2';\nimport FormControl from '@material-ui/core/FormControl';\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    heading: {\n        color: '#714723',\n    },\n    backButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '50px 10px 10px 30px'\n    },\n    submitButton: {\n        float: 'right',\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '50px 250px 10px 30px'\n    }, \n    textFields: {\n        margin: '10px 10px 10px 30px',\n        width: '400px'\n    },\n    description: {\n        margin: '10px 10px 10px 30px',\n        width: '900px'\n    },\n    dropdownBox: {\n        margin: '10px 10px 10px 30px',\n        width: '400px'\n    },\n    inputLabel: {\n        margin: '10px 10px 10px 30px'\n    },\n    rootDiv: {\n        margin: '0px 100px 0px 100px',\n    },\n    paragraph: {\n        margin: '10px 10px 0px 30px'\n    },\n    uploadButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '20px 10px 0px 10px'\n    },\n    regButtons: {\n        margin: '5px'\n    }\n})\n\n\nclass EditNonprofit extends Component {\n\n    componentDidMount () {\n        this.props.dispatch({\n            type: 'GET_NONPROFIT',\n            payload: this.props.match.params.id\n        })\n    }\n\n    //UPDATE INPUT FIELD WITH NEW UPLOADED IMAGE URL;\n    componentDidUpdate(prevProps) {\n        if (this.props.reduxStore.upload.uploadedImage !== prevProps.reduxStore.upload.uploadedImage) {\n            this.props.dispatch({\n                type: 'SET_EDITS_TO_NONPROFIT',\n                payload: { logo: this.props.reduxStore.upload.uploadedImage.url}\n            })           \n        }\n    }\n\n    state = {\n        id: this.props.match.params.id,\n        name: '',\n        description: '',\n        contact_name:  '',\n        contact_email: '',\n        contact_phone: '',\n        website: '',\n        logo: '',\n        category_id: 1,\n        category_name: 'NONE',\n        uploadButton: false,\n        uploadFile: '',\n    }\n\n    //SET STATE FOR INPUT CHANGES;\n    handleInputChange = (propertyName, event) => {\n        this.setState({\n            ...this.state,\n            [propertyName]: event.target.value,\n        });\n    }\n\n    //SET STATE FOR CHANGES TO INPUT;\n    handleEditInputChange = (propertyName, event) => {\n        this.props.dispatch({\n            type: 'SET_EDITS_TO_NONPROFIT',\n            payload: {\n                [propertyName]: event.target.value\n            }\n        });\n    }\n\n    //SET STATE FOR DROPDOWN SELECTION;\n    handleDropdownChange = (propertyName1, propertyName2, event) => { \n        this.setState({\n            ...this.state,\n            [propertyName1]: event.target.value.id,\n            [propertyName2]: event.target.value.name\n        });\n        this.props.dispatch({\n            type: 'SET_EDITS_TO_NONPROFIT',\n            payload: {\n                [propertyName1]: event.target.value.id,\n                [propertyName2]: event.target.value.name\n            }\n        });\n    }\n\n    //ONCLICK ALERT THEN PUSH TO CORRECT URL;\n    handleBackButton = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"Your data has not been saved.\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK',\n        }).then((result) => {\n            if (result.value) {\n                this.props.history.goBack()\n            }\n        })\n    }\n\n    //ONCLICK ALERT THEN DISPATCH STATE TO SAGA AND PUSH TO PREVIOUS PAGE;\n    handleSubmitButton = () => {\n        let id = this.props.match.params.id\n        Swal.fire({\n            title: 'Success!',\n            text: 'The changes you made to your nonprofit have been submitted.',\n            type: 'success',\n            confirmButtonText: 'OK',\n            confirmButtonColor: '#457736'\n        }).then((result) => {\n            if (result.value) {\n                this.props.dispatch({\n                    type: 'EDIT_NONPROFIT',\n                    payload: this.props.reduxStore.nonprofit.nonprofit[0]\n                })\n                this.props.dispatch({\n                    type: 'GET_NONPROFIT',\n                    payload: id\n                })\n                this.props.history.goBack()\n            }\n        })\n    }\n\n    //ONCLICK TOGGLE UPLOAD BUTTON TO TRUE; DISPLAY UPLOAD OPTIONS ON DOM;\n    handleUploadButton = () => {\n        this.setState({\n            uploadButton: true\n        })\n    }\n\n    //ONCLICK TOGGLE UPLOAD BUTTON TO FALSE; DISPLAY INPUT FIELD;\n    handleCancelUpload = () => {\n        this.setState({\n            uploadButton: false\n        })\n    }\n\n    //SET STATE WITH FILE TO UPLOAD\n    handleFileSelection = (event) => {\n        let file = event.target.files[0]\n        this.setState({\n            uploadFile: file\n        })\n    }\n\n    //DISPATCH STATE WITH FILE TO UPLOAD;\n    handleFileUpload = () => {\n        const data = new FormData();\n        data.append('file', this.state.uploadFile)\n        this.props.dispatch({\n            type: 'IMAGE_UPLOAD',\n            payload: data\n        })\n        this.setState({\n            uploadButton: false\n        })\n    }\n\n\n    render() {\n        let dropdownMenu = {\n            communityDevelopment: {\n                id: 1,\n                name: 'Community Development'\n            },\n            humanServices: {\n                id: 2,\n                name: 'Human Services'\n            },\n            health: {\n                id: 3,\n                name: 'Health'\n            },\n            youth: {\n                id: 4,\n                name: 'Youth'\n            },\n        }\n\n        let currentNonProfit = this.props.reduxStore.nonprofit.nonprofit[0];\n\n\n        return(\n            <div className={this.props.classes.rootDiv}>\n                <h1 className={this.props.classes.heading}>Edit Nonprofit Information</h1>\n                \n                <p className={this.props.classes.paragraph}>Please change any information about your organization below. After you submit your changes, your new information will be displayed in your organization page.</p>\n\n            {/* Below is conditionally rendered based on the existance of the currentNonProfit information in the reducer */}\n\n            {   currentNonProfit &&\n                <div>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <TextField className={this.props.classes.textFields} type=\"text\" label= \"Name of Organization\" defaultValue= {currentNonProfit.nonprofit_name}\n                        placeholder=\"Name of Organization\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('nonprofit_name', event) }}/>\n                        <br/>\n                                <TextField className={this.props.classes.description} defaultValue={currentNonProfit.description} type=\"text\" placeholder=\"Organization Description\" label=\"Organization Description\" variant=\"outlined\" multiline rows=\"4\" onChange={(event) => { this.handleEditInputChange('description', event) }}/>\n                    </Grid>\n\n                </Grid>\n\n                <Grid container spacing={3}>\n                    <Grid item xs={6}>\n                        \n                                <TextField className={this.props.classes.textFields} defaultValue={currentNonProfit.contact_name} type=\"text\" placeholder=\"Point of Contact Name\" label=\"Point of Contact Name\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('contact_name', event) }}/>\n                        <br />\n                                <TextField className={this.props.classes.textFields} defaultValue={currentNonProfit.contact_email} type=\"text\" placeholder=\"Point of Contact Email\" label=\"Point of Contact Email\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('contact_email', event) }}/>\n                        <br />\n                            <TextField className={this.props.classes.textFields} defaultValue={currentNonProfit.contact_phone} type=\"text\" placeholder=\"Point of Contact Phone\" label=\"Point of Contact Phone\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('contact_phone', event) }}/>\n                        <br />\n                            <TextField className={this.props.classes.textFields} defaultValue={currentNonProfit.website} type=\"text\" placeholder=\"Organization Website URL\" label=\"Organization Website URL\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('website', event) }}/>\n                        <br />\n\n                            {this.state.uploadButton ?\n                                <div className={this.props.classes.textFields} >\n                                    <input type=\"file\" name=\"file\" onChange={this.handleFileSelection} />\n                                    <button className={this.props.classes.regButtons} onClick={this.handleFileUpload}>Upload</button>\n                                    <button className={this.props.classes.regButtons} onClick={this.handleCancelUpload} >Cancel</button>\n                                </div>\n                                :\n                                <>\n                                    <TextField className={this.props.classes.textFields} type=\"text\" value={currentNonProfit.logo} placeholder=\"Organization Logo URL\" label=\"Organization Logo URL\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('logo', event) }} />\n                                    <Button className={this.props.classes.uploadButton}\n                                        onClick={this.handleUploadButton} >Upload</Button>\n                                </>\n\n                            }\n\n                        <br />\n                    </Grid>\n                    <Grid item xs={6}>\n                        \n                            <TextField className={this.props.classes.textFields} defaultValue={currentNonProfit.address} type=\"text\" placeholder=\"Street Address\" label=\"Street Address\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('address', event) }} />\n                            <br />\n                            <TextField className={this.props.classes.textFields} defaultValue={currentNonProfit.city} type=\"text\" placeholder=\"City\" label=\"City\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('city', event) }} />\n                            <br />\n                            <TextField className={this.props.classes.textFields} defaultValue={currentNonProfit.state} type=\"text\" placeholder=\"State\" label=\"State\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('state', event) }} />\n                            <br />\n                            <TextField className={this.props.classes.textFields} type=\"text\" defaultValue={currentNonProfit.zip_code} placeholder=\"Zip Code\" label=\"Zip Code\" variant=\"outlined\" onChange={(event) => { this.handleEditInputChange('zip_code', event) }} />\n                            <br />\n                            <FormControl variant=\"filled\">\n                                <InputLabel className={this.props.classes.inputLabel}>\n                                    Choose Organization Category\n                                </InputLabel>\n                                <Select\n                                    className={this.props.classes.dropdownBox} value={this.state.category_name} onChange={(event) => { this.handleDropdownChange('category_id', 'category_name', event) }}>\n                                    <MenuItem value={this.state.category_name}>\n                                        <em>{this.state.category_name}</em>\n                                    </MenuItem>\n                                    <MenuItem value={dropdownMenu.communityDevelopment}>Community Development</MenuItem>\n                                    <MenuItem value={dropdownMenu.health}>Health</MenuItem>\n                                    <MenuItem value={dropdownMenu.humanServices}>Human Services</MenuItem>\n                                    <MenuItem value={dropdownMenu.youth}>Youth</MenuItem>\n                                </Select>\n                            </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <Button className={this.props.classes.backButton} onClick={this.handleBackButton}  variant=\"contained\">Back</Button>\n                        <Button className={this.props.classes.submitButton} onClick={this.handleSubmitButton} variant=\"contained\">Submit</Button>\n                    </Grid>\n                </Grid>\n                </div>\n            }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        reduxStore\n    }\n}\n\nexport default withStyles(styles)(connect(mapStateToProps)(EditNonprofit));","import React, { Component } from 'react';\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { Button, Paper, Link, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport moment from 'moment';\nimport './EventDetails.css';\n\n//MATERIAL UI TABLE STYLES;\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: '#878787',\n        color: 'white',\n        fontSize: 24,\n    },\n    body: {\n        fontSize: 20\n    }\n}))(TableCell);\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    rootDiv: {\n        margin: '0px 100px 0px 100px',\n        marginTop: '50px',\n    },\n    root: {\n        width: '100%',\n        overfloxX: 'auto'\n    },\n    table: {\n        minWidth: 700,\n    },\n    button: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '10px'\n    },\n    nonprofitLogoGrid: {\n        display: 'inline-flex'\n    },\n    image: {\n        textAlign: 'center'\n    }\n})\n\nclass EventDetails extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_EVENT_DETAILS',\n            payload: this.props.match.params.id\n        })\n    }\n\n    //ONCLICK PUSH TO VOLUNTEERS SIGN UP URL;\n    handleClick = (id) => {\n        this.props.history.push(`/signup/${id}`)\n    }\n\n    //ONCLICK PUSH TO VOLUNTEERS LIST URL;\n    handleButtonClick = () => {\n        let id = this.props.match.params.id\n        this.props.history.push(`/volunteerList/${id}`)\n    }\n\n    //ONCLICK PUSH TO EDIT EVENT URL;\n    handleEditEvent = () => {\n        let id = this.props.match.params.id\n        this.props.history.push(`/editEvent/${id}`)\n    }\n\n    render() {\n        let nonprofitInfo = this.props.nonprofit[0] || 'a';\n\n        return (\n            <div className={this.props.classes.rootDiv}>\n                <Grid container spacing={3}>\n\n                    <Grid className={this.props.classes.nonprofitLogoGrid} item xs={12}>\n\n                        <CardContent>\n                            <img src={this.props.nonprofit[0] && this.props.nonprofit[0].logo} alt=\"nonprofit logo\" width=\"250\" />\n                        </CardContent>\n\n                        <CardContent>\n                            <h2 className=\"name\">{this.props.nonprofit[0] && this.props.nonprofit[0].nonprofit_name}</h2>\n                            <address className=\"address\">\n                                {this.props.nonprofit[0] && this.props.nonprofit[0].address} <br></br>\n                                {this.props.nonprofit[0] && this.props.nonprofit[0].city}&nbsp;\n                        {this.props.nonprofit[0] && this.props.nonprofit[0].state}&nbsp;\n                        {this.props.nonprofit[0] && this.props.nonprofit[0].zip_code}\n                            </address>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n                <Grid containter spacing={3}>\n\n                    <Grid className={this.props.classes.nonprofitLogoGrid} item xs={12}>\n\n\n                        <Grid item xs={6}>\n\n                            <CardContent>\n                                {this.props.event.eventDetails.map(info => (\n                                    <>\n                                        <h2>{info.name}</h2>\n                                        <table>\n                                            <tbody>\n                                                <tr>\n                                                    <td><Typography><b>Date: </b></Typography> </td>\n                                                    <td><Typography>{moment(info.start_date).format(\"MM/DD/YYYY\")}</Typography></td>\n                                                </tr>\n                                                <tr>\n                                                    <td valign=\"top\"><Typography><b>Time: </b></Typography></td>\n                                                    <td><Typography>{moment(info.start_time, 'hh:mm').format('LT')} - {moment(info.end_time, 'hh:mm').format('LT')}</Typography></td>\n                                                </tr>\n                                                <tr>\n                                                    <td valign=\"top\"><Typography><b>Location: </b></Typography></td>\n                                                    <td><Typography><address>\n                                                        {info.address}<br />\n                                                        {info.city},&nbsp;{info.state}&nbsp;{info.zip_code}\n                                                    </address></Typography></td>\n                                                </tr>\n                                                <tr>\n                                                    <td valign=\"top\"><Typography><b>Contact: </b></Typography></td>\n                                                    <td><Typography> {this.props.nonprofit[0] && this.props.nonprofit[0].contact_email} </Typography></td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <footer></footer>\n                                        <Typography>{info.description}</Typography>\n                                    </>\n                                ))}\n                                {nonprofitInfo.nonprofit_name === this.props.user.name && <Button className={this.props.classes.button} onClick={this.handleEditEvent}>Edit</Button>}\n\n                            </CardContent>\n\n\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <CardContent className={this.props.classes.image} >\n                                {this.props.event.eventDetails.map(info => (\n                                    <img src={info.event_url} alt=\"Event Logo\" width=\"400\" />\n                                ))}\n                                \n                            </CardContent>\n                        </Grid>\n\n\n\n                    </Grid>\n                    \n\n\n                    <Grid item xs={12}>\n                        <h3 className=\"header\">Volunteer Opportunities for this event:</h3>\n                        <Paper className={this.props.classes.root}>\n                            <Table className={this.props.classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <CustomTableCell>Name</CustomTableCell>\n                                        <CustomTableCell align=\"right\">Times</CustomTableCell>\n                                        <CustomTableCell align=\"right\">Volunteers Needed</CustomTableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n                                        this.props.volunteers.volunteerRoleList.map((person) => {\n                                            return (<>\n                                                <TableRow key={person.id}>\n                                                    <CustomTableCell>{person.name}</CustomTableCell>\n                                                    <CustomTableCell align=\"right\">\n                                                        {moment(person.start_time, \"hh:mm\").format('LT')} - {moment(person.end_time, \"hh:mm\").format('LT')}\n                                                    </CustomTableCell>\n                                                    <CustomTableCell align=\"right\"><Link component=\"button\"\n                                                        variant=\"body2\"\n                                                        onClick={() => { this.handleClick(person.id) }}>Volunteers Needed({person.number_needed})\n                                            </Link></CustomTableCell>\n                                                </TableRow>\n                                            </>)\n                                        })\n                                    }\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <br />\n                <br />\n                <Grid container justify='center'>\n                    {nonprofitInfo.nonprofit_name === this.props.user.name && <Button className={this.props.classes.button} onClick={this.handleButtonClick}> Volunteer List </Button>}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        event: state.event,\n        nonprofit: state.nonprofit.nonprofit,\n        volunteers: state.volunteer,\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(EventDetails));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Swal from 'sweetalert2';\n\n//MATERIAL UI STYLES\nconst styles = theme => ({\n  buttons: {\n    color: 'white',\n    backgroundColor: '#457736',\n    margin: '0px 0px 0px 30px'\n  },\n  heading: {\n    color: '#714723'\n  },\n})\n\nclass Home extends Component {\n \n//ONCLICK PUSH TO DIRECTORY URL;  \nhandleBrowse = () => {\n  this.props.history.push('/directory')\n}\n\n//ONCLICK PUSH TO CALENDAR'S URL;\nhandleSeeEvents = () => {\n  this.props.history.push('/calendar')\n}\n\n//ONCLICK PUSH TO REGISTRATION PAGE FOR NEW USERS IF NOT CURRENTLY LOGGED IN OR USER;\nhandleNonprofit = () => {\n  if (this.props.user.id) {\n    this.props.history.push(`/organizationHome/${this.props.user.id}`);\n  } else {\n    this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' });\n    this.props.history.push(`/home`);\n  }\n}\n\n//ALERT USER OF REGISTRATION COMPLETION;\nregistrationSuccessful = () => {\n    Swal.fire({\n      title: 'Thank You!',\n      text: 'Contribute Woodbury has recieved your request to join and will get back to you upon acceptance. Please wait for the email signalling your approval before trying to add any events.',\n      type: 'success',\n      showCancelButton: false,\n      confirmButtonColor: '#3085d6',\n      confirmButtonText: 'OK',\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"appJsRootDiv\">\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        {this.props.user.is_approved === false && this.registrationSuccessful()}\n        <div className=\"homeDiv\" >\n        <div>\n          <center>\n          <h1 className={this.props.classes.heading} >What are you looking for?</h1>\n          <h3 className={this.props.classes.heading}>I'm interested in participating or volunteering.</h3>\n          <Button className={this.props.classes.buttons} variant=\"contained\"\n                  onClick={this.handleBrowse} >Browse Nonprofits</Button>\n          <Button className={this.props.classes.buttons} variant=\"contained\"\n                  onClick={this.handleSeeEvents} >See Upcoming Events</Button>\n            </center>\n        </div>\n        <div>\n          <center>\n          <h3 className={this.props.classes.heading}>Are you a nonprofit? Share your upcoming events on our calendar!</h3>\n              <Button className={this.props.classes.buttons} variant=\"contained\"\n                onClick={() => this.handleNonprofit()}>\n                  I'm a nonprofit</Button>\n          </center>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  user: state.user\n});\n\nexport default withStyles(styles) (connect(mapStateToProps)(Home));\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>\n      Info Page\n    </p>\n  </div>\n);\n\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Card, CardContent, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Swal from 'sweetalert2';\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    card: {\n        width: '400px',\n        height: '400px',\n        margin: '40px 20px 10px 100px',\n        overflowY: 'scroll',\n    },\n    approveButton: {\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '40px 10px 10px 10px'\n    },\n    declineButton: {\n        float: 'right',\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '40px 10px 10px 10px'\n    },\n    directoryButton: {\n        float: 'right',\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '10px 150px 10px 10px'\n    },\n    heading: {\n        margin: '40px 10px 10px 40px',\n        color: '#714723'\n    }\n})\n\nclass NonprofitValidation extends Component {\n\n    componentDidMount() {\n        this.handleGetRequests();\n    }\n\n    //ON MOUNT GETS ALL NONPROFIT REQUESTS TO BE APPROVED;\n    handleGetRequests = ( ) => {\n        this.props.dispatch({\n            type: 'GET_NONPROFIT_REQUESTS'\n        })\n    }\n\n    //ONCLICK PUSH TO DIRECTORY URL;\n    handleDirectoryButton = () => {\n        this.props.history.push('/directory');\n    }\n\n    //ONCLICK ALERT USER AND DISPATCH STATE TO SAGA TO SERVER TO PUT;\n    handleApproveButton = (id) => {\n        Swal.fire({\n            title: 'Success!',\n            text: 'Nonprofit approved.',\n            type: 'success',\n            confirmButtonText: 'OK',\n            confirmButtonColor: '#457736'\n        }).then((result) => {\n            if (result.value) {\n                this.props.dispatch({\n                    type: 'APPROVE_NONPROFIT',\n                    payload: id\n                })\n                \n            }\n        })\n    }\n\n    //ONCLICK ALERT AND DISPATCH ID TO SAGA/SERVER FOR DELETE;\n    handleDeclineButton = (id) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"Declining will delete the nonprofit.\",\n            type: 'warning',\n            showCancelButton: true,\n            // confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK',\n            confirmButtonColor: '#457736'\n        }).then((result) => {\n            if (result.value) {\n                this.props.dispatch({\n                    type: 'DECLINE_NONPROFIT',\n                    payload: id\n                });\n            }\n        })\n    }\n\n\n    render () {\n\n        return (\n            <div>\n                <h1 className={this.props.classes.heading}>Nonprofit Validation</h1>\n                \n                <Button className={this.props.classes.directoryButton} onClick={this.handleDirectoryButton} variant=\"contained\">Directory</Button>\n                \n                <Grid container spacing={3}>\n                       \n                    {this.props.admin[0] ? this.props.admin.map(nonprofit => (\n                     \n                        <Card className={this.props.classes.card}>\n                            <CardContent key={nonprofit.id}>\n                                <b>Nonprofit:</b> {nonprofit.name}\n                                <br/>\n                                <b>Description:</b> {nonprofit.description}\n                                <br />\n                                <b>Contact </b> {nonprofit.contact_name}\n                                <br/>\n                                <b>Email:</b> {nonprofit.contact_email}\n                                <br />\n                                <b>Address: </b> {nonprofit.address}\n                                <br />\n                                <b>City:</b> {nonprofit.city}\n                                <br />\n                                <b>State: </b> {nonprofit.state}\n                                <br />\n                                <b>Zip Code:</b> {nonprofit.zip_code}\n                                <br/>\n                                    <Button className={this.props.classes.approveButton} variant=\"contained\"\n                                        onClick={(event) => this.handleApproveButton(nonprofit.id)} >Approve</Button>\n                                    <Button className={this.props.classes.declineButton} variant=\"contained\"\n                                        onClick={(event) => this.handleDeclineButton(nonprofit.id)} >Decline</Button>\n                            </CardContent>\n                            \n                        </Card>\n                    ))\n                :\n                        <h3 className=\"validationText\">No new nonprofits at this time.</h3>\n                }\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        admin: reduxStore.admin.admin,\n    }\n}\n\n\nexport default withStyles(styles)(connect(mapStateToProps) (NonprofitValidation));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { withStyles } from '@material-ui/styles';\nimport { Button, Link, CardContent, Grid, Typography, Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport './OrganizationHome.css';\n\n\n//MATERIAL UI TABLE STYLES;\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: '#878787',\n        color: 'white',\n        fontSize: 24,\n    },\n    body: {\n        fontSize: 20,\n    }\n}))(TableCell);\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    rootDiv: {\n        margin: '0px 100px 0px 100px'\n    },\n    root: {\n        width: '100%',\n        overfloxX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    button: {\n        color: 'white',\n        backgroundColor: '#457736'\n    }\n})\n\nclass OrganizationHome extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_NONPROFIT',\n            payload: this.props.match.params.id\n        })\n        this.props.dispatch({\n            type: 'GET_CATEGORIES',\n        })\n    }\n\n    //ONCLICK PUSH TO EVENT DETAILS URL;\n    handleVolunteerClick = (id) => {\n        this.props.history.push(`/eventDetails/${id}`);\n    }\n\n    //ONCLICK PUSH TO EDIT NONPROFIT URL;\n    handleEditDetails = () => {\n        let id = this.props.match.params.id\n        this.props.history.push(`/editNonprofit/${id}`)\n    }\n\n    //ONCLICK PUSH TO VOLUNTEERS LIST URL;\n    handleVolunteerListClick = (id) => {\n        this.props.history.push(`/volunteerList/${id}`)\n    }\n\n    //ONCLICK PUSH TO EDIT EVENT URL;\n    handleEditClick = (id) => {\n        this.props.history.push(`/editEvent/${id}`)\n    }\n\n    //ONCLICK CHECK TO SEE IF USER IS APPROVED AND ALERT OR PUSH TO ADD EVENT URL;\n    handleAddEvent = () => {\n        if (this.props.user.is_approved) {\n            let id = this.props.match.params.id\n            this.props.history.push(`/addEvent/${id}`)\n        } else {\n            Swal.fire({\n                title: 'Oops!',\n                text: 'Contribute Woodbury has recieved your request to join and will get back to you upon acceptance. Please wait for the email signalling your approval before trying to add any events.',\n                type: 'warning',\n                showCancelButton: false,\n                confirmButtonColor: '#3085d6',\n                confirmButtonText: 'OK',\n            });\n        }\n    }\n\n    //LOOP THROUGH THE NONPROFIT CATEGORIES TO GET THE CATEGORY NAME WITH CORRESPONDING ID;\n    getCategory = (id) => { \n        for (let cat of this.props.categories) {\n            if(cat.id === id) {\n                return cat.name\n            } \n        }\n    }\n\n    render() {\n        let nonprofitInfo = this.props.nonprofit[0] || 'a';\n        return (\n            <div className={this.props.classes.rootDiv}>\n                <Grid container spacing={1}>\n                    <Grid item xs={6}>\n                        \n                            <h1 className=\"name\">{this.props.nonprofit[0] && this.props.nonprofit[0].nonprofit_name}</h1>\n                            <address className=\"address\">\n                            {this.props.nonprofit[0] && this.props.nonprofit[0].address}<br></br>\n                            {this.props.nonprofit[0] && this.props.nonprofit[0].city}&nbsp;\n                            {this.props.nonprofit[0] && this.props.nonprofit[0].state}&nbsp;\n                            {this.props.nonprofit[0] && this.props.nonprofit[0].zip_code}\n                            </address><br></br>\n                            {\n                            nonprofitInfo.category_id && <div className=\"cat\">\n                                Area of service: {this.props.nonprofit[0] && this.getCategory(this.props.nonprofit[0].category_id)}\n                            </div>\n                            } \n                            \n                    </Grid>\n                    <Grid item xs={5}>\n                        <CardContent>\n                            <img src={this.props.nonprofit[0] && this.props.nonprofit[0].logo} alt=\"nonprofit logo\" width=\"400\" />\n                        </CardContent>\n                    </Grid>\n                </Grid>\n                \n\n                <table>\n                <tbody>\n                <tr>\n                <td><Typography><b>Contact: </b></Typography> </td>\n                <td><Typography>{this.props.nonprofit[0] && this.props.nonprofit[0].contact_name}</Typography></td>\n                </tr>\n\n                <tr>\n                <td><Typography><b>Phone: </b></Typography> </td>\n                <td><Typography>{this.props.nonprofit[0] && this.props.nonprofit[0].contact_phone}</Typography></td>\n                </tr>\n\n                <tr>\n                <td><Typography><b>Email: </b></Typography> </td>\n                <td><Typography>{this.props.nonprofit[0] && this.props.nonprofit[0].contact_email}</Typography></td>\n                </tr>\n\n                </tbody>\n                </table>\n                <footer></footer>\n                {this.props.nonprofit[0] && this.props.nonprofit[0].description}<br/><br/>\n                <Link variant=\"body1\" href={this.props.nonprofit[0] && this.props.nonprofit[0].website} target=\"_blank\" rel=\"noopener noreferrer\">Link To Website</Link><br/>\n\n                {nonprofitInfo.nonprofit_name === this.props.user.name && <Button className={this.props.classes.button} onClick={this.handleEditDetails}>Edit Details</Button>}\n                <Grid container spacing={1} justify=\"center\">\n                    <h2>Event List</h2>\n                </Grid>\n                <Grid container spacing={3}>\n                    <Paper className={this.props.classes.root}>\n                        <Table className={this.props.classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <CustomTableCell>Name</CustomTableCell>\n                                    <CustomTableCell align=\"right\">Event Date</CustomTableCell>\n                                    <CustomTableCell align=\"right\">Start Time</CustomTableCell>\n                                    <CustomTableCell align=\"right\"></CustomTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.props.nonprofit.map((info) => {\n                                        if (moment(info.start_date).format('YYYYMMDD') > moment().format('YYYYMMDD')) {\n                                            let button = '';\n                                            if (info.nonprofit_name === this.props.user.name) {\n                                                let vkey = `Volunteer${info.event_id}`;\n                                                let ekey = `Edit${info.event_id}`;\n                                                button = <>\n                                                    <Button className={this.props.classes.button}\n                                                        onClick={() => this.handleVolunteerListClick(info.event_id)} key={vkey}>Volunteer List\n                                                </Button> &nbsp;\n                                                <Button key={ekey}\n                                                        className={this.props.classes.button} onClick={() => this.handleEditClick(info.event_id)}>Edit\n                                                </Button>\n                                                </>\n                                            }\n                                            if (info.event_id) {\n                                                let vkey = `Volunteer${info.id}`;\n                                                return (\n                                                    <TableRow key={info.id}>\n                                                        <CustomTableCell>{info.event_name}</CustomTableCell>\n                                                        <CustomTableCell align=\"right\">{moment(info.start_date).format(\"MM/DD/YYYY\")}</CustomTableCell>\n                                                        <CustomTableCell align=\"right\">{moment(info.start_time, `hhmm`).format(\"LT\")}</CustomTableCell>\n                                                        <CustomTableCell align=\"right\"><Button className={this.props.classes.button} key={vkey}\n                                                            onClick={() => { this.handleVolunteerClick(info.event_id) }}>Volunteer</Button> &nbsp; {button}</CustomTableCell>\n                                                    </TableRow>\n                                                )\n                                            } else {\n                                                return <TableRow><CustomTableCell>No listed events</CustomTableCell></TableRow>\n                                            }\n                                        } else {\n                                            return false;\n                                        }\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <br></br>\n                <Grid container spacing={1} justify=\"center\">\n                    {nonprofitInfo.nonprofit_name === this.props.user.name && <Button className={this.props.classes.button} onClick={this.handleAddEvent}>Add Event</Button>}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        nonprofit: state.nonprofit.nonprofit,\n        user: state.user,\n        categories: state.nonprofit.categories\n    }\n}\n\n\nexport default connect(mapStateToProps)(withStyles(styles)(OrganizationHome));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Swal from 'sweetalert2';\nimport FormControl from '@material-ui/core/FormControl';\nimport 'react-phone-number-input/style.css';\nimport PhoneInput from 'react-phone-number-input';\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n  heading: {\n    color: '#714723',\n  },\n  backButton: {\n    color: 'white',\n    backgroundColor: '#457736',\n    margin: '50px 10px 10px 30px'\n  },\n  submitButton: {\n    float: 'right',\n    color: 'white',\n    backgroundColor: '#457736',\n    margin: '50px 250px 10px 30px'\n  },\n  textFields: {\n    margin: '10px 10px 10px 30px',\n    width: '400px'\n  },\n  description: {\n    margin: '10px 10px 10px 30px',\n    width: '1030px'\n  },\n  dropdownBox: {\n    width: '500px'\n  },\n  rootDiv: {\n    margin: '0px 100px 0px 100px'\n  },\n  logoTextField: {\n    margin: '10px 10px 10px 30px',\n    width: '300px'\n  },\n  uploadButton: {\n    color: 'white',\n    backgroundColor: '#457736',\n    margin: '20px 10px 0px 10px'\n  },\n  regButtons: {\n    margin: '5px'\n  }\n})\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    description: '',\n    address: '',\n    city: '',\n    zip_code: '',\n    state: '',\n    contact_name: '',\n    contact_email: '',\n    contact_phone: '',\n    website: '',\n    logo: '',\n    category_id: '',\n    category_name: 'NONE',\n    uploadButton: false,\n    uploadFile: '',\n  };\n\n  componentDidMount() {\n    this.props.dispatch({ type: 'GET_CATEGORIES' });\n  }\n\n  //UPDATE COMPONENT AND INPUT FIELD UPON FILE/IMAGE UPLOAD;\n  componentDidUpdate(prevProps) {\n    if (this.props.upload !== prevProps.upload) {\n      this.setState({\n        logo: this.props.upload.url\n      })\n    }\n  }\n\n\n  //ONCLICK CHECK WEBSITE INPUT FOR 'HTTPS://' THEN CHECK FOR ALL REQUIRED FIELDS THEN DISPATCH TO SAGA AND POST NEW USER;\n  registerUser = (event) => {\n    event.preventDefault();\n    let attempt = 'https://'\n    if (this.state.website.startsWith('http') === false) {\n      this.setState({\n        ...this.state,\n        website: attempt.concat(\"\", this.state.website)\n      })\n    }\n    setTimeout(() => {\n      if (this.state.username && this.state.password && this.state.address && this.state.city && this.state.zip_code && this.state.state && this.state.contact_email\n        && this.state.contact_phone && this.state.website) {\n        this.props.dispatch({\n          type: 'REGISTER',\n          payload: this.state\n        });\n      } else {\n        this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n      }\n    }, 200);\n  } \n\n  //ONCHANGE SET STATE TO INPUT PROPERTIES;\n  handleInputChange = (propertyName, event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  //ONCHANGE SET STATE TO DROPDOWN BOX SELECTION;\n  handleDropdownChange = (propertyName1, propertyName2, event) => {\n    this.setState({\n      ...this.state,\n      [propertyName1]: event.target.value.id,\n      [propertyName2]: event.target.value.name\n    });\n  }\n\n  //ONCLICK ALERT USER THEN PUSH TO PREVIOUS PAGE;\n  handleBackButton = () => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Your data has not been saved.\",\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'OK',\n    }).then((result) => {\n      if (result.value) {\n        this.props.history.goBack();\n      }\n    });\n  }\n\n  //ONCLICK TOGGLE UPLOAD BUTTON TO TRUE AND DISPLAY UPLOAD OPTIONS ON DOM;\n  handleUploadButton = () => {\n    this.setState({\n      uploadButton: true\n    })\n  }\n\n  //ONCLICK TOGGLE UPLOAD BUTTON TO FALSE AND DISPLAY URL INPUT FIELDS;\n  handleCancelUpload = () => {\n    this.setState({\n      uploadButton: false\n    })\n  }\n\n  //SET STATE TO SELECTED FILE TO UPLOAD;\n  handleFileSelection = (event) => {\n    let file = event.target.files[0]\n    this.setState({\n      uploadFile: file\n    })\n  }\n\n  //ONCLICK DISPATCH FILE TO UPLOAD TO SAGA THEN SERVER/CLOUDINARY;\n  handleFileUpload = () => {\n    const data = new FormData();\n    data.append('file', this.state.uploadFile)\n    this.props.dispatch({\n      type: 'IMAGE_UPLOAD',\n      payload: data\n    })\n    this.setState({\n      uploadButton: false\n    })\n  }\n\n  render() {\n    return (\n      <div className={this.props.classes.rootDiv}>\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <h1 className={this.props.classes.heading} onClick={() => this.demoRegister()}>Register your nonprofit organization to post and share your upcoming events!</h1>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <label htmlFor=\"Organization Name\">\n              <TextField required\n                className={this.props.classes.textFields}\n                label=\"Organization Name\"\n                variant=\"outlined\"\n                type=\"text\"\n                name=\"Name\"\n                value={this.state.username}\n                onChange={(event) => this.handleInputChange('username', event)}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"password\">\n      \n              <TextField required\n                className={this.props.classes.textFields}\n                label=\"Password\"\n                variant=\"outlined\"\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={(event) => this.handleInputChange('password', event)}\n              />\n            </label>\n            <TextField className={this.props.classes.description} type=\"text\" placeholder=\"Organization Description\" label=\"Organization Description\" variant=\"outlined\" multiline rows=\"4\" onChange={(event) => { this.handleInputChange('description', event) }} value={this.state.description}/>\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <h2 className={this.props.classes.heading} >\n              Contact Information\n                        </h2>\n            <TextField className={this.props.classes.textFields} type=\"text\" placeholder=\"Point of Contact Name\" label=\"Contact Name\"\n              value={this.state.contact_name} variant=\"outlined\" onChange={(event) => { this.handleInputChange('contact_name', event) }} />\n            <br />\n            <TextField required className={this.props.classes.textFields} type=\"text\" placeholder=\"Point of Contact Email\" label=\"Contact Email\"\n              value={this.state.contact_email} variant=\"outlined\" onChange={(event) => { this.handleInputChange('contact_email', event) }} />\n            <br />\n            {this.state.uploadButton ?\n              <div className={this.props.classes.textFields} >\n                <input type=\"file\" name=\"file\" onChange={this.handleFileSelection} />\n                <button className={this.props.classes.regButtons} onClick={this.handleFileUpload}>Upload</button>\n                <button className={this.props.classes.regButtons} onClick={this.handleCancelUpload} >cancel</button>\n              </div>\n              :\n              <>\n                <TextField className={this.props.classes.logoTextField} type=\"text\" placeholder=\"Organization Logo URL\" label=\"Logo URL\"\n                  value={this.state.logo} variant=\"outlined\" onChange={(event) => { this.handleInputChange('logo', event) }} />\n                <Button className={this.props.classes.uploadButton}\n                  onClick={this.handleUploadButton} >Upload</Button>\n              </>\n\n            }\n            <br />\n            <TextField required className={this.props.classes.textFields} type=\"text\" placeholder=\"Organization Website URL\" label=\"Website\"\n              value={this.state.website} variant=\"outlined\" onChange={(event) => { this.handleInputChange('website', event) }} />\n            <br />\n            <FormControl variant=\"filled\">\n              <InputLabel >\n                Choose Organization Category\n                            </InputLabel>\n              <Select\n                className={this.props.classes.dropdownBox} value={this.state.category_name}\n                onChange={(event) => { this.handleDropdownChange('category_id', 'category_name', event) }}>\n                <MenuItem value={this.state.category_name}>\n                  <em>{this.state.category_name}</em>\n                </MenuItem>\n                {this.props.categories.map(category =>\n                  <MenuItem key={category.id} value={category}>\n                    {category.name}\n                  </MenuItem>)}\n              </Select>\n            </FormControl>\n            <br />\n          </Grid>\n\n          {/* Right Column */}\n          <Grid item xs={6}>\n            <h2 className={this.props.classes.heading} >Organization Address</h2>\n            <TextField required className={this.props.classes.textFields} type=\"text\" label=\"Street Address\" variant=\"outlined\"\n              value={this.state.address} onChange={(event) => this.handleInputChange('address', event)} />\n            <br />\n            <TextField required className={this.props.classes.textFields} type=\"text\" label=\"City\" variant=\"outlined\"\n              value={this.state.city} onChange={(event) => this.handleInputChange('city', event)} />\n            <br />\n            <TextField required className={this.props.classes.textFields} type=\"text\" label=\"State\" variant=\"outlined\"\n              value={this.state.state} onChange={(event) => this.handleInputChange('state', event)} />\n            <br />\n            <TextField required className={this.props.classes.textFields} type=\"text\" label=\"Zip Code\" variant=\"outlined\"\n              value={this.state.zip_code} onChange={(event) => this.handleInputChange('zip_code', event)} />\n            <br />\n            <PhoneInput autoComplete=\"true\" country='US' style={{ maxWidth: '350px' }}\n              placeholder=\"Enter phone number\"\n              value={this.state.contact_phone}\n              onChange={value => this.setState({ ...this.state, contact_phone: value })} />\n          </Grid>\n        </Grid>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Button\n              type=\"button\"\n              className={this.props.classes.backButton}\n              onClick={() => { this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' }) }}\n            >\n              Back\n          </Button>\n            <Button\n              className={this.props.classes.submitButton}\n              onClick={this.registerUser}\n              name=\"submit\"\n              value=\"Register\"\n            >Register</Button>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  categories: state.nonprofit.categories,\n  upload: state.upload.uploadedImage\n});\n\nexport default withStyles(styles)(connect(mapStateToProps)(RegisterPage));\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport Home from '../Home/Home';\n// import NavLogin from '../NavLogin/NavLogin';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the Home page\n    ComponentToShow = Home;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport { Button, Paper, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport moment from 'moment';\n\n\n//MATERIAL UI TABLE STYLES;\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: '#878787',\n        color: 'white',\n        fontSize: 24,\n    },\n    body: {\n        fontSize: 20,\n    }\n}))(TableCell);\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    rootDiv: {\n        margin: '0px 100px 0px 100px'\n    },\n    root: {\n        width: '100%',\n        overfloxX: 'auto',\n    },\n    table: {\n        minWidth: 700\n    },\n    button: {\n        color: 'white',\n        backgroundColor: '#457736'\n    },\n    centerButton: {\n        justify: 'center'\n    }\n\n})\n\nclass VolunteerList extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_EVENT_DETAILS',\n            payload: this.props.match.params.id\n        });\n        if (this.props.nonProfit) {\n            this.props.dispatch({\n                type: 'GET_SPECIFIC_VOLUNTEERS',\n                payload: { id: this.props.match.params.id, np_id: this.props.nonProfit.nonprofit_id }\n            });\n        }\n    }\n\n    //UPDATE COMPONENT AND GET NEW VOLUNTEER INFORMATION ENTERED TO DISPLAY ON DOM;\n    componentDidUpdate(prevProps) {\n        if (!prevProps.nonProfit && this.props.nonProfit) {\n            this.props.dispatch({\n                type: 'GET_SPECIFIC_VOLUNTEERS',\n                payload: { id: this.props.match.params.id, np_id: this.props.nonProfit.nonprofit_id }\n            });\n        }\n    }\n\n    //ONCLICK PUSH TO PREVIOUS URL;\n    handleClick = () => {\n        this.props.history.goBack()\n    }\n\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={this.props.classes.rootDiv}>\n                <Grid container spacing={1} justify=\"center\">\n                    {\n                        this.props.event.map((name) => {\n                            return <h1 key={name.id}>Volunteers signed up for {name.name}</h1>\n                        })\n                    }\n                </Grid>\n                <Grid container spacing={1}>\n                    <Paper className={classes.root}>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <CustomTableCell>Role</CustomTableCell>\n                                    <CustomTableCell align=\"right\">Volunteer/Time</CustomTableCell>\n                                    <CustomTableCell align=\"right\">Comments</CustomTableCell>\n                                    <CustomTableCell align=\"right\">Contact Information</CustomTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.props.volunteer.map((vol) => {\n                                        return <>\n                                            <TableRow key={vol.id}>\n                                                <CustomTableCell>{vol.role_name}</CustomTableCell>\n                                                <CustomTableCell align=\"right\">{vol.name} {moment(vol.start_time, \"hh:mm\").format('LT')}-{moment(vol.end_time, \"hh:mm\").format('LT')}</CustomTableCell>\n                                                <CustomTableCell align=\"right\">{vol.comments}</CustomTableCell>\n                                                <CustomTableCell align=\"right\">Email: {vol.email} Phone: {vol.phone_number}</CustomTableCell>\n                                            </TableRow>\n                                        </>\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </Grid>\n                <br></br>\n                <Grid container spacing={1} justify=\"center\">\n                    <Button className={classes.button} onClick={this.handleClick}>Back</Button>\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        volunteer: state.volunteer.volunteerList,\n        event: state.event.eventDetails,\n        nonProfit: state.nonprofit.nonprofit[0]\n    }\n}\n\nexport default connect(mapStateToProps)(withStyles(styles)(VolunteerList));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardContent, TextField, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/styles';\nimport Swal from 'sweetalert2';\nimport 'react-phone-number-input/style.css';\nimport PhoneInput from 'react-phone-number-input';\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    textFields: {\n        margin: '10px 10px 10px 30px',\n        width: '300px'\n    },\n    messageInput: {\n        margin: '10px 10px 10px 30px',\n        width: '645px'\n    },\n    saveButton: {\n        color: 'white',\n        backgroundColor: '#714723',\n        margin: '10px 10px 10px 30px',\n    },\n    stateZipPhone: {\n        margin: '10px 0px 10px 30px'\n    },\n    card: {\n        width: '900px',\n    }\n})\n\nclass SignupForm extends Component {\n        \n    state = {\n        name: '',\n        role_id: this.props.roleId,\n        start_time: '', \n        end_time: '',\n        comments: '',\n        email: '',\n        phone_number: '',\n        address: '',\n        city: '',\n        state: '',\n        zip_code: ''\n    }\n\n\n    //SET STATE WITH VOLUNTEER INFORMATION\n    handleChange = (propertyName, event) => {\n        this.setState ({\n            ...this.state,\n            [propertyName]: event.target.value,\n            start_time: this.props.role.start_time,\n            end_time: this.props.role.end_time \n        })\n    }\n\n    //ALERT AND DISPATCH STATE WITH VOLUNTEER INFORMATION TO SAGA/SERVER POST;\n    handleAddVolunteer = (id) => {\n        this.props.dispatch({\n            type: 'SAVE_VOLUNTEER',\n            payload: this.state\n        })\n        // CLEAR FIELDS\n        this.setState ({\n            name: '',\n            role_id: this.props.roleId,\n            start_time: this.props.role.start_time,\n            end_time: this.props.role.end_time,\n            comments: '',\n            email: '',\n            phone_number: '',\n            address: '',\n            city: '',\n            state: '',\n            zip_code: ''\n        })\n        Swal.fire({\n            title: 'Success!',\n            text: `We've sent your information to the organization. Please reach out to the organization if you have additional questions.`,\n            type: 'success',\n            confirmButtonText: 'OK',\n            confirmButtonColor: '#457736'\n        })\n    }\n\n\n    render () {\n\n        return (\n\n            <div>\n                <h3 onClick={()=>this.demoVolunteer1()}>Sign me up!</h3>\n                <Card className={this.props.classes.card} >\n                <CardContent>\n                    <TextField className={this.props.classes.textFields} type=\"text\" placeholder=\"Full Name\" variant=\"outlined\" label=\"Full Name\"\n                                value={this.state.name} onChange={(event) => this.handleChange('name', event)} />\n                    <TextField className={this.props.classes.textFields} type=\"text\" placeholder=\"email\" variant=\"outlined\" label=\"email\" \n                        value={this.state.email} onChange={(event) => this.handleChange('email', event)} />\n                    <br />\n                    <TextField className={this.props.classes.textFields} type=\"text\" placeholder=\"address\" variant=\"outlined\" label=\"address\"\n                        value={this.state.address} onChange={(event) => this.handleChange('address', event)} />\n                    <TextField className={this.props.classes.textFields} type=\"text\" placeholder=\"city\" variant=\"outlined\" label=\"city\" \n                        value={this.state.city} onChange={(event) => this.handleChange('city', event)} />\n                    <br />\n                    <TextField className={this.props.classes.stateZipPhone} type=\"text\" placeholder=\"state\" variant=\"outlined\" label=\"state\"\n                        value={this.state.state} onChange={(event) => this.handleChange('state', event)} />\n                    <TextField className={this.props.classes.stateZipPhone} type=\"text\" placeholder=\"zipcode\" variant=\"outlined\" label=\"zip code\"\n                        value={this.state.zip_code} onChange={(event) => this.handleChange('zip_code', event)}/>\n                    {/* <br /> */}\n                    {/* <TextField className={this.props.classes.stateZipPhone} type=\"text\" placeholder=\"phone number\" variant=\"outlined\" label=\"phone number\"\n                        value={this.state.phone_number} onChange={(event) => this.handleChange('phone_number', event)} /> */}\n                    <PhoneInput autoComplete country='US' style={{maxWidth: '250px'}}\n                        placeholder=\"Enter phone number\"\n                        value={this.state.phone_number}\n                        onChange={value => this.setState({ ...this.state, phone_number: value })} />\n                    <br />\n                    <TextField className={this.props.classes.messageInput} type=\"text\"\n                        placeholder=\"Have a question or comment? Let the organization know by leaving a message here!\"\n                        variant=\"outlined\" label=\"Questions/Comments?\" multiline rows={4}\n                        value={this.state.comments} onChange={(event) => this.handleChange('comments', event)} /><br />\n                        <h4 onClick={() => this.demoVolunteer2()}>Thank you for your help!</h4>\n                    <Button variant=\"contained\" className={this.props.classes.saveButton}\n                            onClick={this.handleAddVolunteer} >Sign Up!</Button>\n                    \n                </CardContent>\n                </Card>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        role: reduxStore.volunteer.specificRole\n    }\n}\n\n\nexport default withStyles(styles) (connect(mapStateToProps) (SignupForm));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    nonprofitInfo: {\n        display: 'inline-flex',\n        padding: '20px',\n    },\n    logo: {\n        height: '80px',\n        margin: '10px'\n    },\n})\n\n\nclass NonprofitDetails extends Component {\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_EVENT_DETAILS',\n            payload: this.props.role.event_id\n        })\n    }\n\n\n    render () {\n\n\n\n        return (\n            <>\n\n                        <div className={this.props.classes.nonprofitInfo} >\n                            <img className={this.props.classes.logo} src={this.props.nonprofit[0].logo} alt=\"nonprofit logo\" />\n                    <Typography>\n                        {this.props.nonprofit[0] && this.props.nonprofit[0].nonprofit_name}<br />\n                        {this.props.nonprofit[0] && this.props.nonprofit[0].address}<br />\n                        {this.props.nonprofit[0] && this.props.nonprofit[0].city},\n                        {this.props.nonprofit[0] && this.props.nonprofit[0].state}\n                        {this.props.nonprofit[0] && this.props.nonprofit[0].zip_code}<br />\n                    </Typography>\n                        </div><br/>\n                        \n                        \n\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        nonprofit: reduxStore.nonprofit.nonprofit,\n        role: reduxStore.volunteer.specificRole,\n        user: reduxStore.user\n    }\n}\n\nexport default withStyles(styles) (connect(mapStateToProps) (NonprofitDetails));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\n\nimport { Button, Grid, CardContent, Typography } from '@material-ui/core';\nimport SignupForm from '../SignupForm/SignupForm';\nimport NonprofitDetails from '../NonprofitDetails/NonprofitDetails';\n\nimport { formatPhoneNumber } from 'react-phone-number-input';\n\n\n//MATERIAL UI STYLES;\nconst styles = theme => ({\n    rootDiv: {\n        margin: '0px 100px 0px 100px'\n    },\n    heading: {\n        color: '#714723'\n    },\n    backButton: {\n        float: 'left',\n        color: 'white',\n        backgroundColor: '#457736',\n    },\n    doneButton: {\n        float: 'right',\n        color: 'white',\n        backgroundColor: '#457736',\n        margin: '0px 550px 0px 0px'\n    },\n    cardContent: {\n        margin: '25px'\n    }\n\n})\n\n\nclass VolunteerSignup extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({\n            type: 'GET_SPECIFIC_VOLUNTEER_ROLE',\n            payload: this.props.match.params.id\n        })\n    }\n\n    //ONCLICK ALERT USER AND DISPATCH TO CLEAR THE SIGN UP LIST REDUCER THEN PUSH TO PREVIOUS PAGE;\n    handleBackButton = () => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"Your information has not been saved!\",\n            type: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'OK',\n        }).then((result) => {\n            if (result.value) {\n                this.props.dispatch({\n                    type: 'CLEAR_SIGNUP_LIST'\n                });\n                this.props.history.goBack();\n            }\n        })\n    }\n\n    //ONCLICK DISPATCH VOLUNTEER SIGNUP AND CLEAR VOLUNTEERS REDUCER THEN PUSH TO EVENT DETAILS URL;\n    handleDoneButton = () => {\n        this.props.dispatch({\n            type: 'VOLUNTEER_SIGNUP',\n            payload: this.props.signedup\n        });\n        this.props.dispatch({\n            type: 'CLEAR_SIGNUP_LIST'\n        });\n        let id = this.props.role.event_id;\n        this.props.history.push(`/eventDetails/${id}`);\n    }\n\n    render() {\n\n        return (\n\n            <div className={this.props.classes.rootDiv} >\n                <h1 className={this.props.classes.heading} >Volunteers Sign Up</h1>\n                <Grid container spacing={0}>\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <NonprofitDetails />\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <CardContent>\n                            {/* <h3>signup information goes here</h3> */}\n                            {this.props.event.map((item) => {\n                                let startDate = moment(item.start_date).format('MM[/]DD[/]YYYY')\n                                let endDate = moment(item.end_date).format('MM[/]DD[/]YYYY')\n                                return (\n                                    <>\n                                    <h2>{item.name}</h2>\n                                        <table>\n                                            <tbody>\n                                                <tr>\n                                                    <td valign=\"top\"><Typography><b>Date:</b></Typography></td>\n                                                    <td><Typography>{startDate} - {endDate}</Typography></td>\n                                                </tr>\n                                                <tr>\n                                                    <td valign=\"top\"><Typography><b>Location:</b></Typography></td>\n                                                    <td><Typography>{item.address}<br />\n                                                        {item.city},&nbsp;{item.state}&nbsp;{item.zip_code}</Typography></td>\n                                                </tr>\n                                            </tbody>\n                                        </table>\n                                        <footer></footer>\n                                        <Typography>{item.description}</Typography>\n                                    </>\n                                )\n                            })}\n                        </CardContent>\n                        <CardContent>\n                            <div>\n                                <table>\n                                    <tbody>\n                                        <tr>\n                                            <td valign=\"top\"><Typography><b>Role:</b></Typography></td>\n                                            <td><Typography>{this.props.role.name} ({this.props.role.number_needed} volunteers needed)</Typography></td>\n                                        </tr>\n                                        <tr>\n                                            <td valign=\"top\"><Typography><b>Description:</b></Typography></td>\n                                            <td><Typography>{this.props.role.description}</Typography></td>\n                                        </tr>\n                                        <tr>\n                                            <td valign=\"top\"><Typography><b>Date:</b></Typography></td>\n                                            <td><Typography>{moment(this.props.role.date).format('MM[/]DD[/]YYYY')} </Typography></td>\n                                        </tr>\n                                        <tr>\n                                            <td valign=\"top\"><Typography><b>Time:</b></Typography></td>\n                                            <td><Typography>{moment(this.props.role.start_time, 'hh:mm').format('LT')} - {moment(this.props.role.end_time, 'hh:mm').format('LT')} </Typography></td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <SignupForm roleId={this.props.match.params.id} />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <CardContent>\n                            {this.props.signedup.length > 0 ?\n                                <>\n                                    <h3>Thank you for volunteering! Your information has been sent to the organization.</h3>\n                                    {/* {JSON.stringify(this.props.saved)} */}\n                                    {this.props.signedup.map((volunteer) => {\n                                        // let moment = moment().format('hh:mm')\n\n                                        return (\n                                            <CardContent className={this.props.classes.cardContent} >\n                                                <Typography><b>Name:</b> {volunteer.name} </Typography><br />\n                                                <Typography><b>Phone:</b> {formatPhoneNumber(volunteer.phone_number)} </Typography><br />\n                                                <Typography><b>Date/time:</b> {moment(volunteer.date).format('MM[/]DD[/]YYYY')} from {moment(volunteer.start_time, 'hh:mm').format('LT')} - {moment(volunteer.end_time, 'hh:mm').format('LT')}</Typography><br />\n\n                                            </CardContent>\n                                        )\n                                    })}</> : <span></span>}\n                        </CardContent>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <CardContent>\n                            <Button className={this.props.classes.backButton} variant=\"contained\"\n                                onClick={this.handleBackButton} >back</Button>\n                            <Button className={this.props.classes.doneButton} variant=\"contained\"\n                                onClick={this.handleDoneButton} >Done</Button>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = reduxStore => {\n    return {\n        event: reduxStore.event.eventDetails,\n        user: reduxStore.user,\n        role: reduxStore.volunteer.specificRole,\n        saved: reduxStore.volunteer.previousSignUps,\n        signedup: reduxStore.volunteer.signedUpVolunteers,\n        nonprofit: reduxStore.nonprofit.nonprofit,\n    }\n}\n\n\n\nexport default withStyles(styles)(connect(mapStateToProps)(VolunteerSignup));","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Footer from '../Footer/Footer';\nimport Nav from '../Nav/Nav';\n\nimport AddEvent from '../AddEvent/AddEvent';\nimport AddVolunteerRoles from '../AddVolunteerRoles/AddVolunteerRoles';\nimport Calendar from '../Calendar/Calendar';\nimport DirectoryPage from '../DirectoryPage/DirectoryPage';\nimport EditEvent from '../EditEvent/EditEvent';\nimport EditNonprofit from '../EditNonprofit/EditNonprofit';\nimport EventDetails from '../EventDetails/EventDetails';\nimport Home from '../Home/Home';\nimport InfoPage from '../InfoPage/InfoPage';\nimport NonprofitValidation from '../NonprofitValidation/NonprofitValidation';\nimport OrganizationHome from '../OrganizationHome/OrganizationHome';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport VolunteerList from '../VolunteerList/VolunteerList';\nimport VolunteerSignup from '../VolunteerSignup/VolunteerSignup';\n\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div >\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n\n            <Route\n              exact\n              path=\"/calendar\"\n              component={Calendar}\n            />\n            {/* NavLogin Test Route */}\n            <Route\n              exact\n              path=\"/signup/:id\"\n              component={VolunteerSignup}\n              />\n\n            <ProtectedRoute\n              exact\n              path=\"/addevent/:id\"\n              component={AddEvent}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/addvolunteers/:id\"\n              component={AddVolunteerRoles}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/editEvent/:id\"\n              component={EditEvent}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/editNonprofit/:id\"\n              component={EditNonprofit}\n            />\n\n            <Route\n              exact\n              path=\"/directory\"\n              component={DirectoryPage}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/validation\"\n              component={NonprofitValidation}\n            />\n\n            <ProtectedRoute\n              exact\n              path=\"/volunteerList/:id\"\n              component={VolunteerList}\n            />\n\n\n            <Route \n              exact\n              path=\"/organizationHome/:id\"\n              component={OrganizationHome}\n            />\n\n            <Route\n              exact\n              path=\"/eventDetails/:id\"\n              component={EventDetails}\n            />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              component={Home}\n            />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            <ProtectedRoute\n              exact\n              path=\"/info\"\n              component={InfoPage}\n            />\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    )\n  }\n}\n\n\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}